!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	qualified	/Include an extra class-qualified tag entry for each tag/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	access	/Access (or export) of class members/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	inherits	/Inheritance information/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	language	/Language of input file containing tag/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	signature	/Signature of routine (e.g. prototype or parameter list)/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!Asm	properties	/properties (req, vararg for parameters)/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!R	constructor	/function used for making value assigned to the nameattr tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!Asm	d,define	/defines/
!_TAG_KIND_DESCRIPTION!Asm	l,label	/labels/
!_TAG_KIND_DESCRIPTION!Asm	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Asm	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Asm	t,type	/types (structs and records)/
!_TAG_KIND_DESCRIPTION!C	D,macroparam	/parameters inside macro definitions/
!_TAG_KIND_DESCRIPTION!C	L,label	/goto labels/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	l,local	/local variables/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C	x,externvar	/external and forward variable declarations/
!_TAG_KIND_DESCRIPTION!C	z,parameter	/function parameters inside function or prototype definitions/
!_TAG_KIND_DESCRIPTION!C++	D,macroparam	/parameters inside macro definitions/
!_TAG_KIND_DESCRIPTION!C++	L,label	/goto labels/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	l,local	/local variables/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	x,externvar	/external and forward variable declarations/
!_TAG_KIND_DESCRIPTION!C++	z,parameter	/function parameters inside function or prototype definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!R	L,list	/lists explicitly created with `list()'/
!_TAG_KIND_DESCRIPTION!R	c,vector	/vectors explicitly created with `c()'/
!_TAG_KIND_DESCRIPTION!R	d,dataframe	/data frame explicitly created with `data.frame()'/
!_TAG_KIND_DESCRIPTION!R	f,function	/functions/
!_TAG_KIND_DESCRIPTION!R	g,globalVar	/global variables having values other than function()/
!_TAG_KIND_DESCRIPTION!R	l,library	/libraries/
!_TAG_KIND_DESCRIPTION!R	n,nameattr	/names attribtes in vectors, lists, or dataframes/
!_TAG_KIND_DESCRIPTION!R	s,source	/sources/
!_TAG_KIND_DESCRIPTION!R	v,functionVar	/function variables having values other than function()/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!Asm	0.0	/current.age/
!_TAG_PARSER_VERSION!C	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	0.0	/current.age/
!_TAG_PARSER_VERSION!Markdown	0.0	/current.age/
!_TAG_PARSER_VERSION!R	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/lttzz/github/linux0.11/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	/p6.0.20230319.0/
!_TAG_ROLE_DESCRIPTION!Asm!section	placement	/placement where the assembled code goes/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!R!library	library	/library attached by library function/
!_TAG_ROLE_DESCRIPTION!R!library	require	/library attached by require function/
!_TAG_ROLE_DESCRIPTION!R!source	source	/source loaded by source fucntion/
.c.o	Makefile	/^.c.o:$/;"	t	language:Make
.c.o	fs/Makefile	/^.c.o:$/;"	t	language:Make
.c.o	kernel/Makefile	/^.c.o:$/;"	t	language:Make
.c.o	kernel/blk_drv/Makefile	/^.c.o:$/;"	t	language:Make
.c.o	kernel/chr_drv/Makefile	/^.c.o:$/;"	t	language:Make
.c.o	kernel/math/Makefile	/^.c.o:$/;"	t	language:Make
.c.o	lib/Makefile	/^.c.o:$/;"	t	language:Make
.c.o	mm/Makefile	/^.c.o:$/;"	t	language:Make
.c.s	Makefile	/^.c.s:$/;"	t	language:Make
.c.s	fs/Makefile	/^.c.s:$/;"	t	language:Make
.c.s	kernel/Makefile	/^.c.s:$/;"	t	language:Make
.c.s	kernel/blk_drv/Makefile	/^.c.s:$/;"	t	language:Make
.c.s	kernel/chr_drv/Makefile	/^.c.s:$/;"	t	language:Make
.c.s	kernel/math/Makefile	/^.c.s:$/;"	t	language:Make
.c.s	lib/Makefile	/^.c.s:$/;"	t	language:Make
.c.s	mm/Makefile	/^.c.s:$/;"	t	language:Make
.s.o	Makefile	/^.s.o:$/;"	t	language:Make
.s.o	fs/Makefile	/^.s.o:$/;"	t	language:Make
.s.o	kernel/Makefile	/^.s.o:$/;"	t	language:Make
.s.o	kernel/blk_drv/Makefile	/^.s.o:$/;"	t	language:Make
.s.o	kernel/chr_drv/Makefile	/^.s.o:$/;"	t	language:Make
.s.o	kernel/math/Makefile	/^.s.o:$/;"	t	language:Make
.s.o	lib/Makefile	/^.s.o:$/;"	t	language:Make
.s.o	mm/Makefile	/^.s.o:$/;"	t	language:Make
ABRT_ERR	include/linux/hdreg.h	/^#define ABRT_ERR	/;"	d	language:C++
ACC_MODE	fs/namei.c	/^#define ACC_MODE(/;"	d	language:C	file:	signature:(x)
ALRMMASK	kernel/chr_drv/tty_io.c	/^#define ALRMMASK /;"	d	language:C	file:
AP	include/stdarg.h	/^#define va_arg(AP, TYPE)						\\$/;"	D	language:C++	macro:va_arg
AP	include/stdarg.h	/^#define va_end(AP)$/;"	D	language:C++	macro:va_end
AP	include/stdarg.h	/^#define va_start(AP, LASTARG) 						\\$/;"	D	language:C++	macro:va_start
AR	fs/Makefile	/^AR	=gar$/;"	m	language:Make
AR	kernel/Makefile	/^AR	=gar$/;"	m	language:Make
AR	kernel/blk_drv/Makefile	/^AR	=gar$/;"	m	language:Make
AR	kernel/chr_drv/Makefile	/^AR	=gar$/;"	m	language:Make
AR	kernel/math/Makefile	/^AR	=gar$/;"	m	language:Make
AR	lib/Makefile	/^AR	=gar$/;"	m	language:Make
AR	mm/Makefile	/^AR	=gar$/;"	m	language:Make
ARCHIVES	Makefile	/^ARCHIVES=kernel\/kernel.o mm\/mm.o fs\/fs.o$/;"	m	language:Make
AS	Makefile	/^AS	=gas$/;"	m	language:Make
AS	fs/Makefile	/^AS	=gas$/;"	m	language:Make
AS	kernel/Makefile	/^AS	=gas$/;"	m	language:Make
AS	kernel/blk_drv/Makefile	/^AS	=gas$/;"	m	language:Make
AS	kernel/chr_drv/Makefile	/^AS	=gas$/;"	m	language:Make
AS	kernel/math/Makefile	/^AS	=gas$/;"	m	language:Make
AS	lib/Makefile	/^AS	=gas$/;"	m	language:Make
AS	mm/Makefile	/^AS	=gas$/;"	m	language:Make
AS86	Makefile	/^AS86	=as86 -0 -a$/;"	m	language:Make
B0	include/termios.h	/^#define  B0	/;"	d	language:C++
B110	include/termios.h	/^#define  B110	/;"	d	language:C++
B1200	include/termios.h	/^#define  B1200	/;"	d	language:C++
B134	include/termios.h	/^#define  B134	/;"	d	language:C++
B150	include/termios.h	/^#define  B150	/;"	d	language:C++
B1800	include/termios.h	/^#define  B1800	/;"	d	language:C++
B19200	include/termios.h	/^#define  B19200	/;"	d	language:C++
B200	include/termios.h	/^#define  B200	/;"	d	language:C++
B2400	include/termios.h	/^#define  B2400	/;"	d	language:C++
B300	include/termios.h	/^#define  B300	/;"	d	language:C++
B38400	include/termios.h	/^#define  B38400	/;"	d	language:C++
B4800	include/termios.h	/^#define  B4800	/;"	d	language:C++
B50	include/termios.h	/^#define  B50	/;"	d	language:C++
B600	include/termios.h	/^#define  B600	/;"	d	language:C++
B75	include/termios.h	/^#define  B75	/;"	d	language:C++
B9600	include/termios.h	/^#define  B9600	/;"	d	language:C++
BADNESS	fs/buffer.c	/^#define BADNESS(/;"	d	language:C	file:	signature:(bh)
BBD_ERR	include/linux/hdreg.h	/^#define	BBD_ERR	/;"	d	language:C++
BCD_TO_BIN	init/main.c	/^#define BCD_TO_BIN(/;"	d	language:C	file:	signature:(val)
BIOS	kernel/blk_drv/hd.c	/^int sys_setup(void * BIOS)$/;"	z	language:C	function:sys_setup	typeref:typename:void *	file:
BLOCK_SIZE	include/linux/fs.h	/^#define BLOCK_SIZE /;"	d	language:C++
BLOCK_SIZE_BITS	include/linux/fs.h	/^#define BLOCK_SIZE_BITS /;"	d	language:C++
BRKINT	include/termios.h	/^#define BRKINT	/;"	d	language:C++
BS0	include/termios.h	/^#define   BS0	/;"	d	language:C++
BS1	include/termios.h	/^#define   BS1	/;"	d	language:C++
BSDLY	include/termios.h	/^#define BSDLY	/;"	d	language:C++
BUFFER_END	include/const.h	/^#define BUFFER_END /;"	d	language:C++
BUSY_STAT	include/linux/hdreg.h	/^#define BUSY_STAT	/;"	d	language:C++
CBAUD	include/termios.h	/^#define CBAUD	/;"	d	language:C++
CC	Makefile	/^CC	=gcc $(RAMDISK)$/;"	m	language:Make
CC	fs/Makefile	/^CC	=gcc$/;"	m	language:Make
CC	kernel/Makefile	/^CC	=gcc$/;"	m	language:Make
CC	kernel/blk_drv/Makefile	/^CC	=gcc$/;"	m	language:Make
CC	kernel/chr_drv/Makefile	/^CC	=gcc$/;"	m	language:Make
CC	kernel/math/Makefile	/^CC	=gcc$/;"	m	language:Make
CC	lib/Makefile	/^CC	=gcc$/;"	m	language:Make
CC	mm/Makefile	/^CC	=gcc$/;"	m	language:Make
CFLAGS	Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer \\$/;"	m	language:Make
CFLAGS	fs/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fcombine-regs -fomit-frame-pointer \\$/;"	m	language:Make
CFLAGS	kernel/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m	language:Make
CFLAGS	kernel/blk_drv/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m	language:Make
CFLAGS	kernel/chr_drv/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m	language:Make
CFLAGS	kernel/math/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m	language:Make
CFLAGS	lib/Makefile	/^CFLAGS	=-Wall -O -fstrength-reduce -fomit-frame-pointer -fcombine-regs \\$/;"	m	language:Make
CFLAGS	mm/Makefile	/^CFLAGS	=-O -Wall -fstrength-reduce -fcombine-regs -fomit-frame-pointer \\$/;"	m	language:Make
CHARS	include/linux/tty.h	/^#define CHARS(/;"	d	language:C++	signature:(a)
CIBAUD	include/termios.h	/^#define CIBAUD	/;"	d	language:C++
CLOCAL	include/termios.h	/^#define CLOCAL	/;"	d	language:C++
CLOCKS_PER_SEC	include/time.h	/^#define CLOCKS_PER_SEC /;"	d	language:C++
CMOS_READ	init/main.c	/^#define CMOS_READ(/;"	d	language:C	file:	signature:(addr)
CMOS_READ	kernel/blk_drv/hd.c	/^#define CMOS_READ(/;"	d	language:C	file:	signature:(addr)
CODE_SPACE	mm/memory.c	/^#define CODE_SPACE(/;"	d	language:C	file:	signature:(addr)
COPYBLK	fs/buffer.c	/^#define COPYBLK(/;"	d	language:C	file:	signature:(from,to)
CPARENB	include/termios.h	/^#define CPARENB	/;"	d	language:C++
CPARODD	include/termios.h	/^#define CPARODD	/;"	d	language:C++
CPP	Makefile	/^CPP	=cpp -nostdinc -Iinclude$/;"	m	language:Make
CPP	fs/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m	language:Make
CPP	kernel/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m	language:Make
CPP	kernel/blk_drv/Makefile	/^CPP	=gcc -E -nostdinc -I..\/..\/include$/;"	m	language:Make
CPP	kernel/chr_drv/Makefile	/^CPP	=gcc -E -nostdinc -I..\/..\/include$/;"	m	language:Make
CPP	kernel/math/Makefile	/^CPP	=gcc -E -nostdinc -I..\/..\/include$/;"	m	language:Make
CPP	lib/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m	language:Make
CPP	mm/Makefile	/^CPP	=gcc -E -nostdinc -I..\/include$/;"	m	language:Make
CR0	include/termios.h	/^#define   CR0	/;"	d	language:C++
CR1	include/termios.h	/^#define   CR1	/;"	d	language:C++
CR2	include/termios.h	/^#define   CR2	/;"	d	language:C++
CR3	include/termios.h	/^#define   CR3	/;"	d	language:C++
CRDLY	include/termios.h	/^#define CRDLY	/;"	d	language:C++
CREAD	include/termios.h	/^#define CREAD	/;"	d	language:C++
CRTSCTS	include/termios.h	/^#define CRTSCTS	/;"	d	language:C++
CS	kernel/system_call.s	/^CS		= 0x20$/;"	d	language:Asm
CS5	include/termios.h	/^#define   CS5	/;"	d	language:C++
CS6	include/termios.h	/^#define   CS6	/;"	d	language:C++
CS7	include/termios.h	/^#define   CS7	/;"	d	language:C++
CS8	include/termios.h	/^#define   CS8	/;"	d	language:C++
CSIZE	include/termios.h	/^#define CSIZE	/;"	d	language:C++
CSTOPB	include/termios.h	/^#define CSTOPB	/;"	d	language:C++
CURRENT	kernel/blk_drv/blk.h	/^#define CURRENT /;"	d	language:C++
CURRENT_DEV	kernel/blk_drv/blk.h	/^#define CURRENT_DEV /;"	d	language:C++
CURRENT_TIME	include/linux/sched.h	/^#define CURRENT_TIME /;"	d	language:C++
DAY	kernel/mktime.c	/^#define DAY /;"	d	language:C	file:
DEC	include/linux/tty.h	/^#define DEC(/;"	d	language:C++	signature:(a)
DEFAULT_MAJOR_ROOT	tools/build.c	/^#define DEFAULT_MAJOR_ROOT /;"	d	language:C	file:
DEFAULT_MINOR_ROOT	tools/build.c	/^#define DEFAULT_MINOR_ROOT /;"	d	language:C	file:
DEVICE_INTR	kernel/blk_drv/blk.h	/^#define DEVICE_INTR /;"	d	language:C++
DEVICE_INTR	kernel/blk_drv/blk.h	/^void (*DEVICE_INTR)(void) = NULL;$/;"	v	language:C++	typeref:typename:void (*)(void)
DEVICE_NAME	kernel/blk_drv/blk.h	/^#define DEVICE_NAME /;"	d	language:C++
DEVICE_NR	kernel/blk_drv/blk.h	/^#define DEVICE_NR(/;"	d	language:C++	signature:(device)
DEVICE_OFF	kernel/blk_drv/blk.h	/^#define DEVICE_OFF(/;"	d	language:C++	signature:(device)
DEVICE_ON	kernel/blk_drv/blk.h	/^#define DEVICE_ON(/;"	d	language:C++	signature:(device)
DEVICE_REQUEST	kernel/blk_drv/blk.h	/^#define DEVICE_REQUEST /;"	d	language:C++
DEVICE_REQUEST	kernel/blk_drv/blk.h	/^static void (DEVICE_REQUEST)(void);$/;"	v	language:C++	typeref:typename:void ()(void)
DIR_ENTRIES_PER_BLOCK	include/linux/fs.h	/^#define DIR_ENTRIES_PER_BLOCK /;"	d	language:C++
DMA_READ	include/linux/fdreg.h	/^#define DMA_READ	/;"	d	language:C++
DMA_WRITE	include/linux/fdreg.h	/^#define DMA_WRITE	/;"	d	language:C++
DRIVE	kernel/blk_drv/floppy.c	/^#define DRIVE(/;"	d	language:C	file:	signature:(x)
DRIVERS	Makefile	/^DRIVERS =kernel\/blk_drv\/blk_drv.a kernel\/chr_drv\/chr_drv.a$/;"	m	language:Make
DRIVE_INFO	init/main.c	/^#define DRIVE_INFO /;"	d	language:C	file:
DRQ_STAT	include/linux/hdreg.h	/^#define DRQ_STAT	/;"	d	language:C++
DS	kernel/system_call.s	/^DS		= 0x18$/;"	d	language:Asm
E2BIG	include/errno.h	/^#define E2BIG	/;"	d	language:C++
EACCES	include/errno.h	/^#define EACCES	/;"	d	language:C++
EAGAIN	include/errno.h	/^#define EAGAIN	/;"	d	language:C++
EAX	kernel/system_call.s	/^EAX		= 0x00$/;"	d	language:Asm
EBADF	include/errno.h	/^#define EBADF	/;"	d	language:C++
EBUSY	include/errno.h	/^#define EBUSY	/;"	d	language:C++
EBX	kernel/system_call.s	/^EBX		= 0x04$/;"	d	language:Asm
ECC_ERR	include/linux/hdreg.h	/^#define ECC_ERR	/;"	d	language:C++
ECC_STAT	include/linux/hdreg.h	/^#define ECC_STAT	/;"	d	language:C++
ECHILD	include/errno.h	/^#define ECHILD	/;"	d	language:C++
ECHO	include/termios.h	/^#define ECHO	/;"	d	language:C++
ECHOCTL	include/termios.h	/^#define ECHOCTL	/;"	d	language:C++
ECHOE	include/termios.h	/^#define ECHOE	/;"	d	language:C++
ECHOK	include/termios.h	/^#define ECHOK	/;"	d	language:C++
ECHOKE	include/termios.h	/^#define ECHOKE	/;"	d	language:C++
ECHONL	include/termios.h	/^#define ECHONL	/;"	d	language:C++
ECHOPRT	include/termios.h	/^#define ECHOPRT	/;"	d	language:C++
ECX	kernel/system_call.s	/^ECX		= 0x08$/;"	d	language:Asm
EDEADLK	include/errno.h	/^#define EDEADLK	/;"	d	language:C++
EDOM	include/errno.h	/^#define EDOM	/;"	d	language:C++
EDX	kernel/system_call.s	/^EDX		= 0x0C$/;"	d	language:Asm
EEXIST	include/errno.h	/^#define EEXIST	/;"	d	language:C++
EFAULT	include/errno.h	/^#define EFAULT	/;"	d	language:C++
EFBIG	include/errno.h	/^#define EFBIG	/;"	d	language:C++
EFLAGS	kernel/system_call.s	/^EFLAGS		= 0x24$/;"	d	language:Asm
EINTR	include/errno.h	/^#define EINTR	/;"	d	language:C++
EINVAL	include/errno.h	/^#define EINVAL	/;"	d	language:C++
EIO	include/errno.h	/^#define EIO	/;"	d	language:C++
EIP	kernel/system_call.s	/^EIP		= 0x1C$/;"	d	language:Asm
EISDIR	include/errno.h	/^#define EISDIR	/;"	d	language:C++
EMFILE	include/errno.h	/^#define EMFILE	/;"	d	language:C++
EMLINK	include/errno.h	/^#define EMLINK	/;"	d	language:C++
EMPTY	include/linux/tty.h	/^#define EMPTY(/;"	d	language:C++	signature:(a)
ENAMETOOLONG	include/errno.h	/^#define ENAMETOOLONG	/;"	d	language:C++
ENFILE	include/errno.h	/^#define ENFILE	/;"	d	language:C++
ENODEV	include/errno.h	/^#define ENODEV	/;"	d	language:C++
ENOENT	include/errno.h	/^#define ENOENT	/;"	d	language:C++
ENOEXEC	include/errno.h	/^#define ENOEXEC	/;"	d	language:C++
ENOLCK	include/errno.h	/^#define ENOLCK	/;"	d	language:C++
ENOMEM	include/errno.h	/^#define ENOMEM	/;"	d	language:C++
ENOSPC	include/errno.h	/^#define ENOSPC	/;"	d	language:C++
ENOSYS	include/errno.h	/^#define ENOSYS	/;"	d	language:C++
ENOTBLK	include/errno.h	/^#define ENOTBLK	/;"	d	language:C++
ENOTDIR	include/errno.h	/^#define ENOTDIR	/;"	d	language:C++
ENOTEMPTY	include/errno.h	/^#define ENOTEMPTY	/;"	d	language:C++
ENOTTY	include/errno.h	/^#define ENOTTY	/;"	d	language:C++
ENXIO	include/errno.h	/^#define ENXIO	/;"	d	language:C++
EOF_CHAR	include/linux/tty.h	/^#define EOF_CHAR(/;"	d	language:C++	signature:(tty)
EPERM	include/errno.h	/^#define EPERM	/;"	d	language:C++
EPIPE	include/errno.h	/^#define EPIPE	/;"	d	language:C++
ERANGE	include/errno.h	/^#define ERANGE	/;"	d	language:C++
ERASE_CHAR	include/linux/tty.h	/^#define ERASE_CHAR(/;"	d	language:C++	signature:(tty)
EROFS	include/errno.h	/^#define EROFS	/;"	d	language:C++
ERROR	include/errno.h	/^#define ERROR	/;"	d	language:C++
ERR_STAT	include/linux/hdreg.h	/^#define ERR_STAT	/;"	d	language:C++
ES	kernel/system_call.s	/^ES		= 0x14$/;"	d	language:Asm
ESPIPE	include/errno.h	/^#define ESPIPE	/;"	d	language:C++
ESRCH	include/errno.h	/^#define ESRCH	/;"	d	language:C++
ETXTBSY	include/errno.h	/^#define ETXTBSY	/;"	d	language:C++
EXDEV	include/errno.h	/^#define EXDEV	/;"	d	language:C++
EXTA	include/termios.h	/^#define EXTA /;"	d	language:C++
EXTB	include/termios.h	/^#define EXTB /;"	d	language:C++
EXT_MEM_K	init/main.c	/^#define EXT_MEM_K /;"	d	language:C	file:
FD_CLOEXEC	include/fcntl.h	/^#define FD_CLOEXEC	/;"	d	language:C++
FD_DATA	include/linux/fdreg.h	/^#define FD_DATA	/;"	d	language:C++
FD_DCR	include/linux/fdreg.h	/^#define FD_DCR	/;"	d	language:C++
FD_DIR	include/linux/fdreg.h	/^#define FD_DIR	/;"	d	language:C++
FD_DOR	include/linux/fdreg.h	/^#define FD_DOR	/;"	d	language:C++
FD_READ	include/linux/fdreg.h	/^#define FD_READ	/;"	d	language:C++
FD_RECALIBRATE	include/linux/fdreg.h	/^#define FD_RECALIBRATE	/;"	d	language:C++
FD_SEEK	include/linux/fdreg.h	/^#define FD_SEEK	/;"	d	language:C++
FD_SENSEI	include/linux/fdreg.h	/^#define FD_SENSEI	/;"	d	language:C++
FD_SPECIFY	include/linux/fdreg.h	/^#define FD_SPECIFY	/;"	d	language:C++
FD_STATUS	include/linux/fdreg.h	/^#define FD_STATUS	/;"	d	language:C++
FD_WRITE	include/linux/fdreg.h	/^#define FD_WRITE	/;"	d	language:C++
FF0	include/termios.h	/^#define   FF0	/;"	d	language:C++
FF1	include/termios.h	/^#define   FF1	/;"	d	language:C++
FFDLY	include/termios.h	/^#define FFDLY	/;"	d	language:C++
FIRST_LDT_ENTRY	include/linux/sched.h	/^#define FIRST_LDT_ENTRY /;"	d	language:C++
FIRST_TASK	include/linux/sched.h	/^#define FIRST_TASK /;"	d	language:C++
FIRST_TSS_ENTRY	include/linux/sched.h	/^#define FIRST_TSS_ENTRY /;"	d	language:C++
FLUSHO	include/termios.h	/^#define FLUSHO	/;"	d	language:C++
FS	kernel/system_call.s	/^FS		= 0x10$/;"	d	language:Asm
FULL	include/linux/tty.h	/^#define FULL(/;"	d	language:C++	signature:(a)
F_DUPFD	include/fcntl.h	/^#define F_DUPFD	/;"	d	language:C++
F_GETFD	include/fcntl.h	/^#define F_GETFD	/;"	d	language:C++
F_GETFL	include/fcntl.h	/^#define F_GETFL	/;"	d	language:C++
F_GETLK	include/fcntl.h	/^#define F_GETLK	/;"	d	language:C++
F_OK	include/unistd.h	/^#define F_OK	/;"	d	language:C++
F_RDLCK	include/fcntl.h	/^#define F_RDLCK	/;"	d	language:C++
F_SETFD	include/fcntl.h	/^#define F_SETFD	/;"	d	language:C++
F_SETFL	include/fcntl.h	/^#define F_SETFL	/;"	d	language:C++
F_SETLK	include/fcntl.h	/^#define F_SETLK	/;"	d	language:C++
F_SETLKW	include/fcntl.h	/^#define F_SETLKW	/;"	d	language:C++
F_UNLCK	include/fcntl.h	/^#define F_UNLCK	/;"	d	language:C++
F_WRLCK	include/fcntl.h	/^#define F_WRLCK	/;"	d	language:C++
GCC_HEADER	tools/build.c	/^#define GCC_HEADER /;"	d	language:C	file:
GDT_CODE	include/linux/head.h	/^#define GDT_CODE /;"	d	language:C++
GDT_DATA	include/linux/head.h	/^#define GDT_DATA /;"	d	language:C++
GDT_NUL	include/linux/head.h	/^#define GDT_NUL /;"	d	language:C++
GDT_TMP	include/linux/head.h	/^#define GDT_TMP /;"	d	language:C++
GETCH	include/linux/tty.h	/^#define GETCH(/;"	d	language:C++	signature:(queue,c)
HD_CMD	include/linux/hdreg.h	/^#define HD_CMD	/;"	d	language:C++
HD_COMMAND	include/linux/hdreg.h	/^#define HD_COMMAND /;"	d	language:C++
HD_CURRENT	include/linux/hdreg.h	/^#define HD_CURRENT	/;"	d	language:C++
HD_DATA	include/linux/hdreg.h	/^#define HD_DATA	/;"	d	language:C++
HD_ERROR	include/linux/hdreg.h	/^#define HD_ERROR	/;"	d	language:C++
HD_HCYL	include/linux/hdreg.h	/^#define HD_HCYL	/;"	d	language:C++
HD_LCYL	include/linux/hdreg.h	/^#define HD_LCYL	/;"	d	language:C++
HD_NSECTOR	include/linux/hdreg.h	/^#define HD_NSECTOR	/;"	d	language:C++
HD_PRECOMP	include/linux/hdreg.h	/^#define HD_PRECOMP /;"	d	language:C++
HD_SECTOR	include/linux/hdreg.h	/^#define HD_SECTOR	/;"	d	language:C++
HD_STATUS	include/linux/hdreg.h	/^#define HD_STATUS	/;"	d	language:C++
HIGH_MEMORY	mm/memory.c	/^static long HIGH_MEMORY = 0;$/;"	v	language:C	typeref:typename:long	file:
HOUR	kernel/mktime.c	/^#define HOUR /;"	d	language:C	file:
HUPCL	include/termios.h	/^#define HUPCL	/;"	d	language:C++
HZ	include/linux/sched.h	/^#define HZ /;"	d	language:C++
ICANON	include/termios.h	/^#define ICANON	/;"	d	language:C++
ICRNL	include/termios.h	/^#define ICRNL	/;"	d	language:C++
ID_ERR	include/linux/hdreg.h	/^#define ID_ERR	/;"	d	language:C++
IEXTEN	include/termios.h	/^#define IEXTEN	/;"	d	language:C++
IGNBRK	include/termios.h	/^#define IGNBRK	/;"	d	language:C++
IGNCR	include/termios.h	/^#define IGNCR	/;"	d	language:C++
IGNPAR	include/termios.h	/^#define IGNPAR	/;"	d	language:C++
IMAXBEL	include/termios.h	/^#define IMAXBEL	/;"	d	language:C++
INC	include/linux/tty.h	/^#define INC(/;"	d	language:C++	signature:(a)
INC_PIPE	include/linux/fs.h	/^#define INC_PIPE(/;"	d	language:C++	signature:(head)
INDEX_STAT	include/linux/hdreg.h	/^#define INDEX_STAT	/;"	d	language:C++
INITSEG	boot/setup.s	/^INITSEG  = 0x9000	! we move boot here - out of the way$/;"	g	language:R
INIT_C_CC	include/linux/tty.h	/^#define INIT_C_CC /;"	d	language:C++
INIT_REQUEST	kernel/blk_drv/blk.h	/^#define INIT_REQUEST /;"	d	language:C++
INIT_TASK	include/linux/sched.h	/^#define INIT_TASK /;"	d	language:C++
INLCR	include/termios.h	/^#define INLCR	/;"	d	language:C++
INODES_PER_BLOCK	include/linux/fs.h	/^#define INODES_PER_BLOCK /;"	d	language:C++
INPCK	include/termios.h	/^#define INPCK	/;"	d	language:C++
INTMASK	kernel/chr_drv/tty_io.c	/^#define INTMASK /;"	d	language:C	file:
INTR_CHAR	include/linux/tty.h	/^#define INTR_CHAR(/;"	d	language:C++	signature:(tty)
IN_ORDER	kernel/blk_drv/blk.h	/^#define IN_ORDER(/;"	d	language:C++	signature:(s1,s2)
ISIG	include/termios.h	/^#define ISIG	/;"	d	language:C++
ISTRIP	include/termios.h	/^#define ISTRIP	/;"	d	language:C++
IS_SEEKABLE	include/linux/fs.h	/^#define IS_SEEKABLE(/;"	d	language:C++	signature:(x)
IUCLC	include/termios.h	/^#define IUCLC	/;"	d	language:C++
IXANY	include/termios.h	/^#define IXANY	/;"	d	language:C++
IXOFF	include/termios.h	/^#define IXOFF	/;"	d	language:C++
IXON	include/termios.h	/^#define IXON	/;"	d	language:C++
I_BLOCK_SPECIAL	include/const.h	/^#define I_BLOCK_SPECIAL /;"	d	language:C++
I_CHAR_SPECIAL	include/const.h	/^#define I_CHAR_SPECIAL /;"	d	language:C++
I_CRNL	kernel/chr_drv/tty_io.c	/^#define I_CRNL(/;"	d	language:C	file:	signature:(tty)
I_DIRECTORY	include/const.h	/^#define I_DIRECTORY	/;"	d	language:C++
I_MAP_SLOTS	include/linux/fs.h	/^#define I_MAP_SLOTS /;"	d	language:C++
I_NAMED_PIPE	include/const.h	/^#define I_NAMED_PIPE	/;"	d	language:C++
I_NLCR	kernel/chr_drv/tty_io.c	/^#define I_NLCR(/;"	d	language:C	file:	signature:(tty)
I_NOCR	kernel/chr_drv/tty_io.c	/^#define I_NOCR(/;"	d	language:C	file:	signature:(tty)
I_REGULAR	include/const.h	/^#define I_REGULAR /;"	d	language:C++
I_SET_GID_BIT	include/const.h	/^#define I_SET_GID_BIT /;"	d	language:C++
I_SET_UID_BIT	include/const.h	/^#define I_SET_UID_BIT /;"	d	language:C++
I_TYPE	include/const.h	/^#define I_TYPE /;"	d	language:C++
I_UCLC	kernel/chr_drv/tty_io.c	/^#define I_UCLC(/;"	d	language:C	file:	signature:(tty)
Image	Makefile	/^Image: boot\/bootsect boot\/setup tools\/system tools\/build$/;"	t	language:Make
KBD_FINNISH	include/linux/config.h	/^#define KBD_FINNISH$/;"	d	language:C++
KILLMASK	kernel/chr_drv/tty_io.c	/^#define KILLMASK /;"	d	language:C	file:
KILL_CHAR	include/linux/tty.h	/^#define KILL_CHAR(/;"	d	language:C++	signature:(tty)
LAST	include/linux/tty.h	/^#define LAST(/;"	d	language:C++	signature:(a)
LASTARG	include/stdarg.h	/^#define va_start(AP, LASTARG) 						\\$/;"	D	language:C++	macro:va_start
LAST_TASK	include/linux/sched.h	/^#define LAST_TASK /;"	d	language:C++
LATCH	kernel/sched.c	/^#define LATCH /;"	d	language:C	file:
LD	Makefile	/^LD	=gld$/;"	m	language:Make
LD	fs/Makefile	/^LD	=gld$/;"	m	language:Make
LD	kernel/Makefile	/^LD	=gld$/;"	m	language:Make
LD	kernel/blk_drv/Makefile	/^LD	=gld$/;"	m	language:Make
LD	kernel/chr_drv/Makefile	/^LD	=gld$/;"	m	language:Make
LD	kernel/math/Makefile	/^LD	=gld$/;"	m	language:Make
LD	lib/Makefile	/^LD	=gld$/;"	m	language:Make
LD	mm/Makefile	/^LD	=gld$/;"	m	language:Make
LD86	Makefile	/^LD86	=ld86 -0$/;"	m	language:Make
LDFLAGS	Makefile	/^LDFLAGS	=-s -x -M$/;"	m	language:Make
LDFLAGS	kernel/Makefile	/^LDFLAGS	=-s -x$/;"	m	language:Make
LDFLAGS	kernel/blk_drv/Makefile	/^LDFLAGS	=-s -x$/;"	m	language:Make
LDFLAGS	kernel/chr_drv/Makefile	/^LDFLAGS	=-s -x$/;"	m	language:Make
LDFLAGS	kernel/math/Makefile	/^LDFLAGS	=-s -x$/;"	m	language:Make
LDFLAGS	lib/Makefile	/^LDFLAGS	=-s -x$/;"	m	language:Make
LDT_CODE	include/linux/head.h	/^#define LDT_CODE /;"	d	language:C++
LDT_DATA	include/linux/head.h	/^#define LDT_DATA /;"	d	language:C++
LDT_NUL	include/linux/head.h	/^#define LDT_NUL /;"	d	language:C++
LEFT	include/linux/tty.h	/^#define LEFT(/;"	d	language:C++	signature:(a)
LEFT	kernel/vsprintf.c	/^#define LEFT	/;"	d	language:C	file:
LIBS	Makefile	/^LIBS	=lib\/lib.a$/;"	m	language:Make
LOW_MEM	mm/memory.c	/^#define LOW_MEM /;"	d	language:C	file:
L_CANON	kernel/chr_drv/tty_io.c	/^#define L_CANON(/;"	d	language:C	file:	signature:(tty)
L_ECHO	kernel/chr_drv/tty_io.c	/^#define L_ECHO(/;"	d	language:C	file:	signature:(tty)
L_ECHOCTL	kernel/chr_drv/tty_io.c	/^#define L_ECHOCTL(/;"	d	language:C	file:	signature:(tty)
L_ECHOE	kernel/chr_drv/tty_io.c	/^#define L_ECHOE(/;"	d	language:C	file:	signature:(tty)
L_ECHOK	kernel/chr_drv/tty_io.c	/^#define L_ECHOK(/;"	d	language:C	file:	signature:(tty)
L_ECHOKE	kernel/chr_drv/tty_io.c	/^#define L_ECHOKE(/;"	d	language:C	file:	signature:(tty)
L_ISIG	kernel/chr_drv/tty_io.c	/^#define L_ISIG(/;"	d	language:C	file:	signature:(tty)
MAJOR	include/linux/fs.h	/^#define MAJOR(/;"	d	language:C++	signature:(a)
MAJOR_NR	kernel/blk_drv/floppy.c	/^#define MAJOR_NR /;"	d	language:C	file:
MAJOR_NR	kernel/blk_drv/hd.c	/^#define MAJOR_NR /;"	d	language:C	file:
MAJOR_NR	kernel/blk_drv/ramdisk.c	/^#define MAJOR_NR /;"	d	language:C	file:
MAP_NR	mm/memory.c	/^#define MAP_NR(/;"	d	language:C	file:	signature:(addr)
MARK_ERR	include/linux/hdreg.h	/^#define MARK_ERR	/;"	d	language:C++
MATH	Makefile	/^MATH	=kernel\/math\/math.a$/;"	m	language:Make
MAX	fs/file_dev.c	/^#define MAX(/;"	d	language:C	file:	signature:(a,b)
MAX_ARG_PAGES	fs/exec.c	/^#define MAX_ARG_PAGES /;"	d	language:C	file:
MAX_ERRORS	kernel/blk_drv/floppy.c	/^#define MAX_ERRORS /;"	d	language:C	file:
MAX_ERRORS	kernel/blk_drv/hd.c	/^#define MAX_ERRORS	/;"	d	language:C	file:
MAX_HD	kernel/blk_drv/hd.c	/^#define MAX_HD	/;"	d	language:C	file:
MAX_REPLIES	kernel/blk_drv/floppy.c	/^#define MAX_REPLIES /;"	d	language:C	file:
MAY_EXEC	fs/namei.c	/^#define MAY_EXEC /;"	d	language:C	file:
MAY_READ	fs/namei.c	/^#define MAY_READ /;"	d	language:C	file:
MAY_WRITE	fs/namei.c	/^#define MAY_WRITE /;"	d	language:C	file:
MEMBER	include/stddef.h	/^#define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER)$/;"	D	language:C++	macro:offsetof
MIN	fs/file_dev.c	/^#define MIN(/;"	d	language:C	file:	signature:(a,b)
MINIX_HEADER	tools/build.c	/^#define MINIX_HEADER /;"	d	language:C	file:
MINOR	include/linux/fs.h	/^#define MINOR(/;"	d	language:C++	signature:(a)
MINUTE	kernel/mktime.c	/^#define MINUTE /;"	d	language:C	file:
NAME_LEN	include/linux/fs.h	/^#define NAME_LEN /;"	d	language:C++
NCC	include/termios.h	/^#define NCC /;"	d	language:C++
NCCS	include/termios.h	/^#define NCCS /;"	d	language:C++
NL0	include/termios.h	/^#define   NL0	/;"	d	language:C++
NL1	include/termios.h	/^#define   NL1	/;"	d	language:C++
NLDLY	include/termios.h	/^#define NLDLY	/;"	d	language:C++
NMAGIC	include/a.out.h	/^#define NMAGIC /;"	d	language:C++
NOFLSH	include/termios.h	/^#define NOFLSH	/;"	d	language:C++
NPAR	kernel/chr_drv/console.c	/^#define NPAR /;"	d	language:C	file:
NRDEVS	fs/char_dev.c	/^#define NRDEVS /;"	d	language:C	file:
NRDEVS	fs/ioctl.c	/^#define NRDEVS /;"	d	language:C	file:
NR_BLK_DEV	kernel/blk_drv/blk.h	/^#define NR_BLK_DEV	/;"	d	language:C++
NR_BUFFERS	fs/buffer.c	/^int NR_BUFFERS = 0;$/;"	v	language:C	typeref:typename:int
NR_BUFFERS	include/linux/fs.h	/^#define NR_BUFFERS /;"	d	language:C++
NR_FILE	include/linux/fs.h	/^#define NR_FILE /;"	d	language:C++
NR_HASH	include/linux/fs.h	/^#define NR_HASH /;"	d	language:C++
NR_HD	kernel/blk_drv/hd.c	/^#define NR_HD /;"	d	language:C	file:
NR_HD	kernel/blk_drv/hd.c	/^static int NR_HD = 0;$/;"	v	language:C	typeref:typename:int	file:
NR_INODE	include/linux/fs.h	/^#define NR_INODE /;"	d	language:C++
NR_OPEN	include/linux/fs.h	/^#define NR_OPEN /;"	d	language:C++
NR_REQUEST	kernel/blk_drv/blk.h	/^#define NR_REQUEST	/;"	d	language:C++
NR_SUPER	include/linux/fs.h	/^#define NR_SUPER /;"	d	language:C++
NR_TASKS	include/linux/sched.h	/^#define NR_TASKS /;"	d	language:C++
NSIG	include/signal.h	/^#define NSIG		_NSIG$/;"	d	language:C++
NULL	include/linux/fs.h	/^#define NULL /;"	d	language:C++
NULL	include/linux/sched.h	/^#define NULL /;"	d	language:C++
NULL	include/stddef.h	/^#define NULL /;"	d	language:C++
NULL	include/string.h	/^#define NULL /;"	d	language:C++
NULL	include/sys/types.h	/^#define NULL /;"	d	language:C++
NULL	include/unistd.h	/^#define NULL /;"	d	language:C++
N_ABS	include/a.out.h	/^#define N_ABS /;"	d	language:C++
N_BADMAG	include/a.out.h	/^#define N_BADMAG(/;"	d	language:C++	signature:(x)
N_BSS	include/a.out.h	/^#define N_BSS /;"	d	language:C++
N_BSSADDR	include/a.out.h	/^#define N_BSSADDR(/;"	d	language:C++	signature:(x)
N_COMM	include/a.out.h	/^#define N_COMM /;"	d	language:C++
N_DATA	include/a.out.h	/^#define N_DATA /;"	d	language:C++
N_DATADDR	include/a.out.h	/^#define N_DATADDR(/;"	d	language:C++	signature:(x)
N_DATOFF	include/a.out.h	/^#define N_DATOFF(/;"	d	language:C++	signature:(x)
N_DRELOFF	include/a.out.h	/^#define N_DRELOFF(/;"	d	language:C++	signature:(x)
N_EXT	include/a.out.h	/^#define N_EXT /;"	d	language:C++
N_FN	include/a.out.h	/^#define N_FN /;"	d	language:C++
N_INDR	include/a.out.h	/^#define N_INDR /;"	d	language:C++
N_MAGIC	include/a.out.h	/^#define N_MAGIC(/;"	d	language:C++	signature:(exec)
N_SETA	include/a.out.h	/^#define	N_SETA	/;"	d	language:C++
N_SETB	include/a.out.h	/^#define	N_SETB	/;"	d	language:C++
N_SETD	include/a.out.h	/^#define	N_SETD	/;"	d	language:C++
N_SETT	include/a.out.h	/^#define	N_SETT	/;"	d	language:C++
N_SETV	include/a.out.h	/^#define N_SETV	/;"	d	language:C++
N_STAB	include/a.out.h	/^#define N_STAB /;"	d	language:C++
N_STROFF	include/a.out.h	/^#define N_STROFF(/;"	d	language:C++	signature:(x)
N_SYMOFF	include/a.out.h	/^#define N_SYMOFF(/;"	d	language:C++	signature:(x)
N_TEXT	include/a.out.h	/^#define N_TEXT /;"	d	language:C++
N_TRELOFF	include/a.out.h	/^#define N_TRELOFF(/;"	d	language:C++	signature:(x)
N_TXTADDR	include/a.out.h	/^#define N_TXTADDR(/;"	d	language:C++	signature:(x)
N_TXTOFF	include/a.out.h	/^#define N_TXTOFF(/;"	d	language:C++	signature:(x)
N_TYPE	include/a.out.h	/^#define N_TYPE /;"	d	language:C++
N_UNDF	include/a.out.h	/^#define N_UNDF /;"	d	language:C++
OBJS	fs/Makefile	/^OBJS=	open.o read_write.o inode.o file_table.o buffer.o super.o \\$/;"	m	language:Make
OBJS	kernel/Makefile	/^OBJS  = sched.o system_call.o traps.o asm.o fork.o \\$/;"	m	language:Make
OBJS	kernel/blk_drv/Makefile	/^OBJS  = ll_rw_blk.o floppy.o hd.o ramdisk.o$/;"	m	language:Make
OBJS	kernel/chr_drv/Makefile	/^OBJS  = tty_io.o console.o keyboard.o serial.o rs_io.o \\$/;"	m	language:Make
OBJS	kernel/math/Makefile	/^OBJS  = math_emulate.o$/;"	m	language:Make
OBJS	lib/Makefile	/^OBJS  = ctype.o _exit.o open.o close.o errno.o write.o dup.o setsid.o \\$/;"	m	language:Make
OBJS	mm/Makefile	/^OBJS	= memory.o page.o$/;"	m	language:Make
OCRNL	include/termios.h	/^#define OCRNL	/;"	d	language:C++
OFDEL	include/termios.h	/^#define OFDEL	/;"	d	language:C++
OFILL	include/termios.h	/^#define OFILL	/;"	d	language:C++
OLCUC	include/termios.h	/^#define OLCUC	/;"	d	language:C++
OLDESP	kernel/system_call.s	/^OLDESP		= 0x28$/;"	d	language:Asm
OLDSS	kernel/system_call.s	/^OLDSS		= 0x2C$/;"	d	language:Asm
OMAGIC	include/a.out.h	/^#define OMAGIC /;"	d	language:C++
ONLCR	include/termios.h	/^#define ONLCR	/;"	d	language:C++
ONLRET	include/termios.h	/^#define ONLRET	/;"	d	language:C++
ONOCR	include/termios.h	/^#define ONOCR	/;"	d	language:C++
OPOST	include/termios.h	/^#define OPOST	/;"	d	language:C++
ORIG_ROOT_DEV	init/main.c	/^#define ORIG_ROOT_DEV /;"	d	language:C	file:
ORIG_VIDEO_COLS	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_COLS /;"	d	language:C	file:
ORIG_VIDEO_EGA_AX	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_EGA_AX	/;"	d	language:C	file:
ORIG_VIDEO_EGA_BX	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_EGA_BX	/;"	d	language:C	file:
ORIG_VIDEO_EGA_CX	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_EGA_CX	/;"	d	language:C	file:
ORIG_VIDEO_LINES	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_LINES	/;"	d	language:C	file:
ORIG_VIDEO_MODE	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_MODE	/;"	d	language:C	file:
ORIG_VIDEO_PAGE	kernel/chr_drv/console.c	/^#define ORIG_VIDEO_PAGE	/;"	d	language:C	file:
ORIG_X	kernel/chr_drv/console.c	/^#define ORIG_X	/;"	d	language:C	file:
ORIG_Y	kernel/chr_drv/console.c	/^#define ORIG_Y	/;"	d	language:C	file:
O_ACCMODE	include/fcntl.h	/^#define O_ACCMODE	/;"	d	language:C++
O_APPEND	include/fcntl.h	/^#define O_APPEND	/;"	d	language:C++
O_CREAT	include/fcntl.h	/^#define O_CREAT	/;"	d	language:C++
O_CRNL	kernel/chr_drv/tty_io.c	/^#define O_CRNL(/;"	d	language:C	file:	signature:(tty)
O_EXCL	include/fcntl.h	/^#define O_EXCL	/;"	d	language:C++
O_LCUC	kernel/chr_drv/tty_io.c	/^#define O_LCUC(/;"	d	language:C	file:	signature:(tty)
O_NDELAY	include/fcntl.h	/^#define O_NDELAY	/;"	d	language:C++
O_NLCR	kernel/chr_drv/tty_io.c	/^#define O_NLCR(/;"	d	language:C	file:	signature:(tty)
O_NLRET	kernel/chr_drv/tty_io.c	/^#define O_NLRET(/;"	d	language:C	file:	signature:(tty)
O_NOCTTY	include/fcntl.h	/^#define O_NOCTTY	/;"	d	language:C++
O_NONBLOCK	include/fcntl.h	/^#define O_NONBLOCK	/;"	d	language:C++
O_POST	kernel/chr_drv/tty_io.c	/^#define O_POST(/;"	d	language:C	file:	signature:(tty)
O_RDONLY	include/fcntl.h	/^#define O_RDONLY	/;"	d	language:C++
O_RDWR	include/fcntl.h	/^#define O_RDWR	/;"	d	language:C++
O_TRUNC	include/fcntl.h	/^#define O_TRUNC	/;"	d	language:C++
O_WRONLY	include/fcntl.h	/^#define O_WRONLY	/;"	d	language:C++
PAGE_ALIGN	include/linux/sched.h	/^#define PAGE_ALIGN(/;"	d	language:C++	signature:(n)
PAGE_SIZE	include/a.out.h	/^#define	PAGE_SIZE	/;"	d	language:C++
PAGE_SIZE	include/a.out.h	/^#define PAGE_SIZE /;"	d	language:C++
PAGE_SIZE	include/linux/mm.h	/^#define PAGE_SIZE /;"	d	language:C++
PAGING_MEMORY	mm/memory.c	/^#define PAGING_MEMORY /;"	d	language:C	file:
PAGING_PAGES	mm/memory.c	/^#define PAGING_PAGES /;"	d	language:C	file:
PARENB	include/termios.h	/^#define PARENB CPARENB$/;"	d	language:C++
PARMRK	include/termios.h	/^#define PARMRK	/;"	d	language:C++
PARODD	include/termios.h	/^#define PARODD CPARODD$/;"	d	language:C++
PE	boot/setup.s	/^; PE=0 为关闭保护模式，PE=1表示开始保护模式$/;"	g	language:R
PENDIN	include/termios.h	/^#define PENDIN	/;"	d	language:C++
PIPE_EMPTY	include/linux/fs.h	/^#define PIPE_EMPTY(/;"	d	language:C++	signature:(inode)
PIPE_FULL	include/linux/fs.h	/^#define PIPE_FULL(/;"	d	language:C++	signature:(inode)
PIPE_HEAD	include/linux/fs.h	/^#define PIPE_HEAD(/;"	d	language:C++	signature:(inode)
PIPE_SIZE	include/linux/fs.h	/^#define PIPE_SIZE(/;"	d	language:C++	signature:(inode)
PIPE_TAIL	include/linux/fs.h	/^#define PIPE_TAIL(/;"	d	language:C++	signature:(inode)
PLUS	kernel/vsprintf.c	/^#define PLUS	/;"	d	language:C	file:
PUTCH	include/linux/tty.h	/^#define PUTCH(/;"	d	language:C++	signature:(c,queue)
QUITMASK	kernel/chr_drv/tty_io.c	/^#define QUITMASK /;"	d	language:C	file:
QUIT_CHAR	include/linux/tty.h	/^#define QUIT_CHAR(/;"	d	language:C++	signature:(tty)
RAMDISK	Makefile	/^RAMDISK = #-DRAMDISK=512$/;"	m	language:Make
READ	include/linux/fs.h	/^#define READ /;"	d	language:C++
READA	include/linux/fs.h	/^#define READA /;"	d	language:C++
READY_STAT	include/linux/hdreg.h	/^#define READY_STAT	/;"	d	language:C++
RESPONSE	kernel/chr_drv/console.c	/^#define RESPONSE /;"	d	language:C	file:
ROOT_DEV	Makefile	/^ROOT_DEV=\/dev\/hd6$/;"	m	language:Make
ROOT_DEV	fs/super.c	/^int ROOT_DEV = 0;$/;"	v	language:C	typeref:typename:int
ROOT_DEV	include/linux/fs.h	/^extern int ROOT_DEV;$/;"	x	language:C++	typeref:typename:int
ROOT_INO	include/linux/fs.h	/^#define ROOT_INO /;"	d	language:C++
R_OK	include/unistd.h	/^#define R_OK	/;"	d	language:C++
SA_NOCLDSTOP	include/signal.h	/^#define SA_NOCLDSTOP	/;"	d	language:C++
SA_NOMASK	include/signal.h	/^#define SA_NOMASK	/;"	d	language:C++
SA_ONESHOT	include/signal.h	/^#define SA_ONESHOT	/;"	d	language:C++
SEEK_CUR	include/unistd.h	/^#define SEEK_CUR	/;"	d	language:C++
SEEK_END	include/unistd.h	/^#define SEEK_END	/;"	d	language:C++
SEEK_SET	include/unistd.h	/^#define SEEK_SET	/;"	d	language:C++
SEEK_STAT	include/linux/hdreg.h	/^#define SEEK_STAT	/;"	d	language:C++
SEGMENT_SIZE	include/a.out.h	/^#define	SEGMENT_SIZE	/;"	d	language:C++
SEGMENT_SIZE	include/a.out.h	/^#define SEGMENT_SIZE /;"	d	language:C++
SETUPSEG	boot/bootsect.s	/^	jmpi	0,SETUPSEG      ; SETUPSEG = 0x9020$/;"	g	language:R
SETUPSEG	boot/setup.s	/^SETUPSEG = 0x9020	! this is the current segment$/;"	g	language:R
SETUP_SECTS	tools/build.c	/^#define SETUP_SECTS /;"	d	language:C	file:
SIGABRT	include/signal.h	/^#define SIGABRT	/;"	d	language:C++
SIGALRM	include/signal.h	/^#define SIGALRM	/;"	d	language:C++
SIGCHLD	include/signal.h	/^#define SIGCHLD	/;"	d	language:C++
SIGCONT	include/signal.h	/^#define SIGCONT	/;"	d	language:C++
SIGFPE	include/signal.h	/^#define SIGFPE	/;"	d	language:C++
SIGHUP	include/signal.h	/^#define SIGHUP	/;"	d	language:C++
SIGILL	include/signal.h	/^#define SIGILL	/;"	d	language:C++
SIGINT	include/signal.h	/^#define SIGINT	/;"	d	language:C++
SIGIOT	include/signal.h	/^#define SIGIOT	/;"	d	language:C++
SIGKILL	include/signal.h	/^#define SIGKILL	/;"	d	language:C++
SIGN	kernel/vsprintf.c	/^#define SIGN	/;"	d	language:C	file:
SIGPIPE	include/signal.h	/^#define SIGPIPE	/;"	d	language:C++
SIGQUIT	include/signal.h	/^#define SIGQUIT	/;"	d	language:C++
SIGSEGV	include/signal.h	/^#define SIGSEGV	/;"	d	language:C++
SIGSTKFLT	include/signal.h	/^#define SIGSTKFLT	/;"	d	language:C++
SIGSTOP	include/signal.h	/^#define SIGSTOP	/;"	d	language:C++
SIGTERM	include/signal.h	/^#define SIGTERM	/;"	d	language:C++
SIGTRAP	include/signal.h	/^#define SIGTRAP	/;"	d	language:C++
SIGTSTP	include/signal.h	/^#define SIGTSTP	/;"	d	language:C++
SIGTTIN	include/signal.h	/^#define SIGTTIN	/;"	d	language:C++
SIGTTOU	include/signal.h	/^#define SIGTTOU	/;"	d	language:C++
SIGUNUSED	include/signal.h	/^#define SIGUNUSED	/;"	d	language:C++
SIGUSR1	include/signal.h	/^#define SIGUSR1	/;"	d	language:C++
SIGUSR2	include/signal.h	/^#define SIGUSR2	/;"	d	language:C++
SIG_BLOCK	include/signal.h	/^#define SIG_BLOCK /;"	d	language:C++
SIG_CHLD	kernel/system_call.s	/^SIG_CHLD	= 17$/;"	d	language:Asm
SIG_DFL	include/signal.h	/^#define SIG_DFL	/;"	d	language:C++
SIG_IGN	include/signal.h	/^#define SIG_IGN	/;"	d	language:C++
SIG_SETMASK	include/signal.h	/^#define SIG_SETMASK /;"	d	language:C++
SIG_UNBLOCK	include/signal.h	/^#define SIG_UNBLOCK /;"	d	language:C++
SMALL	kernel/vsprintf.c	/^#define SMALL	/;"	d	language:C	file:
SPACE	kernel/vsprintf.c	/^#define SPACE	/;"	d	language:C	file:
SPECIAL	kernel/vsprintf.c	/^#define SPECIAL	/;"	d	language:C	file:
ST0	kernel/blk_drv/floppy.c	/^#define ST0 /;"	d	language:C	file:
ST0_DS	include/linux/fdreg.h	/^#define ST0_DS	/;"	d	language:C++
ST0_ECE	include/linux/fdreg.h	/^#define ST0_ECE	/;"	d	language:C++
ST0_HA	include/linux/fdreg.h	/^#define ST0_HA	/;"	d	language:C++
ST0_INTR	include/linux/fdreg.h	/^#define ST0_INTR	/;"	d	language:C++
ST0_NR	include/linux/fdreg.h	/^#define ST0_NR	/;"	d	language:C++
ST0_SE	include/linux/fdreg.h	/^#define ST0_SE	/;"	d	language:C++
ST1	kernel/blk_drv/floppy.c	/^#define ST1 /;"	d	language:C	file:
ST1_CRC	include/linux/fdreg.h	/^#define ST1_CRC	/;"	d	language:C++
ST1_EOC	include/linux/fdreg.h	/^#define ST1_EOC	/;"	d	language:C++
ST1_MAM	include/linux/fdreg.h	/^#define ST1_MAM	/;"	d	language:C++
ST1_ND	include/linux/fdreg.h	/^#define ST1_ND	/;"	d	language:C++
ST1_OR	include/linux/fdreg.h	/^#define ST1_OR	/;"	d	language:C++
ST1_WP	include/linux/fdreg.h	/^#define ST1_WP	/;"	d	language:C++
ST2	kernel/blk_drv/floppy.c	/^#define ST2 /;"	d	language:C	file:
ST2_BC	include/linux/fdreg.h	/^#define ST2_BC	/;"	d	language:C++
ST2_CM	include/linux/fdreg.h	/^#define ST2_CM	/;"	d	language:C++
ST2_CRC	include/linux/fdreg.h	/^#define ST2_CRC	/;"	d	language:C++
ST2_MAM	include/linux/fdreg.h	/^#define ST2_MAM	/;"	d	language:C++
ST2_SEH	include/linux/fdreg.h	/^#define ST2_SEH	/;"	d	language:C++
ST2_SNS	include/linux/fdreg.h	/^#define ST2_SNS	/;"	d	language:C++
ST2_WC	include/linux/fdreg.h	/^#define ST2_WC	/;"	d	language:C++
ST3	kernel/blk_drv/floppy.c	/^#define ST3 /;"	d	language:C	file:
ST3_HA	include/linux/fdreg.h	/^#define ST3_HA	/;"	d	language:C++
ST3_TZ	include/linux/fdreg.h	/^#define ST3_TZ	/;"	d	language:C++
ST3_WP	include/linux/fdreg.h	/^#define ST3_WP	/;"	d	language:C++
START_CHAR	include/linux/tty.h	/^#define START_CHAR(/;"	d	language:C++	signature:(tty)
STATUS_BUSY	include/linux/fdreg.h	/^#define STATUS_BUSY	/;"	d	language:C++
STATUS_BUSYMASK	include/linux/fdreg.h	/^#define STATUS_BUSYMASK	/;"	d	language:C++
STATUS_DIR	include/linux/fdreg.h	/^#define STATUS_DIR	/;"	d	language:C++
STATUS_DMA	include/linux/fdreg.h	/^#define STATUS_DMA	/;"	d	language:C++
STATUS_READY	include/linux/fdreg.h	/^#define STATUS_READY	/;"	d	language:C++
STDERR_FILENO	include/unistd.h	/^#define STDERR_FILENO	/;"	d	language:C++
STDIN_FILENO	include/unistd.h	/^#define STDIN_FILENO	/;"	d	language:C++
STDOUT_FILENO	include/unistd.h	/^#define STDOUT_FILENO	/;"	d	language:C++
STOP_CHAR	include/linux/tty.h	/^#define STOP_CHAR(/;"	d	language:C++	signature:(tty)
STRINGIFY	tools/build.c	/^#define STRINGIFY(/;"	d	language:C	file:	signature:(x)
SUPER_MAGIC	include/linux/fs.h	/^#define SUPER_MAGIC /;"	d	language:C++
SUSPEND_CHAR	include/linux/tty.h	/^#define SUSPEND_CHAR(/;"	d	language:C++	signature:(tty)
SYSSEG	boot/setup.s	/^SYSSEG   = 0x1000	! system loaded at 0x10000 (65536).$/;"	g	language:R
SYSSIZE	boot/bootsect.s	/^SYSSIZE = 0x3000$/;"	g	language:R
SYS_SIZE	tools/build.c	/^#define SYS_SIZE /;"	d	language:C	file:
S_IFBLK	include/sys/stat.h	/^#define S_IFBLK /;"	d	language:C++
S_IFCHR	include/sys/stat.h	/^#define S_IFCHR /;"	d	language:C++
S_IFDIR	include/sys/stat.h	/^#define S_IFDIR /;"	d	language:C++
S_IFIFO	include/sys/stat.h	/^#define S_IFIFO /;"	d	language:C++
S_IFMT	include/sys/stat.h	/^#define S_IFMT /;"	d	language:C++
S_IFREG	include/sys/stat.h	/^#define S_IFREG /;"	d	language:C++
S_IRGRP	include/sys/stat.h	/^#define S_IRGRP /;"	d	language:C++
S_IROTH	include/sys/stat.h	/^#define S_IROTH /;"	d	language:C++
S_IRUSR	include/sys/stat.h	/^#define S_IRUSR /;"	d	language:C++
S_IRWXG	include/sys/stat.h	/^#define S_IRWXG /;"	d	language:C++
S_IRWXO	include/sys/stat.h	/^#define S_IRWXO /;"	d	language:C++
S_IRWXU	include/sys/stat.h	/^#define S_IRWXU /;"	d	language:C++
S_ISBLK	include/sys/stat.h	/^#define S_ISBLK(/;"	d	language:C++	signature:(m)
S_ISCHR	include/sys/stat.h	/^#define S_ISCHR(/;"	d	language:C++	signature:(m)
S_ISDIR	include/sys/stat.h	/^#define S_ISDIR(/;"	d	language:C++	signature:(m)
S_ISFIFO	include/sys/stat.h	/^#define S_ISFIFO(/;"	d	language:C++	signature:(m)
S_ISGID	include/sys/stat.h	/^#define S_ISGID /;"	d	language:C++
S_ISREG	include/sys/stat.h	/^#define S_ISREG(/;"	d	language:C++	signature:(m)
S_ISUID	include/sys/stat.h	/^#define S_ISUID /;"	d	language:C++
S_ISVTX	include/sys/stat.h	/^#define S_ISVTX /;"	d	language:C++
S_IWGRP	include/sys/stat.h	/^#define S_IWGRP /;"	d	language:C++
S_IWOTH	include/sys/stat.h	/^#define S_IWOTH /;"	d	language:C++
S_IWUSR	include/sys/stat.h	/^#define S_IWUSR /;"	d	language:C++
S_IXGRP	include/sys/stat.h	/^#define S_IXGRP /;"	d	language:C++
S_IXOTH	include/sys/stat.h	/^#define S_IXOTH /;"	d	language:C++
S_IXUSR	include/sys/stat.h	/^#define S_IXUSR /;"	d	language:C++
TAB0	include/termios.h	/^#define   TAB0	/;"	d	language:C++
TAB1	include/termios.h	/^#define   TAB1	/;"	d	language:C++
TAB2	include/termios.h	/^#define   TAB2	/;"	d	language:C++
TAB3	include/termios.h	/^#define   TAB3	/;"	d	language:C++
TABDLY	include/termios.h	/^#define TABDLY	/;"	d	language:C++
TASK_INTERRUPTIBLE	include/linux/sched.h	/^#define TASK_INTERRUPTIBLE	/;"	d	language:C++
TASK_RUNNING	include/linux/sched.h	/^#define TASK_RUNNING	/;"	d	language:C++
TASK_STOPPED	include/linux/sched.h	/^#define TASK_STOPPED	/;"	d	language:C++
TASK_UNINTERRUPTIBLE	include/linux/sched.h	/^#define TASK_UNINTERRUPTIBLE	/;"	d	language:C++
TASK_ZOMBIE	include/linux/sched.h	/^#define TASK_ZOMBIE	/;"	d	language:C++
TCFLSH	include/termios.h	/^#define TCFLSH	/;"	d	language:C++
TCGETA	include/termios.h	/^#define TCGETA	/;"	d	language:C++
TCGETS	include/termios.h	/^#define TCGETS	/;"	d	language:C++
TCIFLUSH	include/termios.h	/^#define	TCIFLUSH	/;"	d	language:C++
TCIOFF	include/termios.h	/^#define	TCIOFF	/;"	d	language:C++
TCIOFLUSH	include/termios.h	/^#define	TCIOFLUSH	/;"	d	language:C++
TCION	include/termios.h	/^#define	TCION	/;"	d	language:C++
TCOFLUSH	include/termios.h	/^#define	TCOFLUSH	/;"	d	language:C++
TCOOFF	include/termios.h	/^#define	TCOOFF	/;"	d	language:C++
TCOON	include/termios.h	/^#define	TCOON	/;"	d	language:C++
TCSADRAIN	include/termios.h	/^#define	TCSADRAIN	/;"	d	language:C++
TCSAFLUSH	include/termios.h	/^#define	TCSAFLUSH	/;"	d	language:C++
TCSANOW	include/termios.h	/^#define	TCSANOW	/;"	d	language:C++
TCSBRK	include/termios.h	/^#define TCSBRK	/;"	d	language:C++
TCSETA	include/termios.h	/^#define TCSETA	/;"	d	language:C++
TCSETAF	include/termios.h	/^#define TCSETAF	/;"	d	language:C++
TCSETAW	include/termios.h	/^#define TCSETAW	/;"	d	language:C++
TCSETS	include/termios.h	/^#define TCSETS	/;"	d	language:C++
TCSETSF	include/termios.h	/^#define TCSETSF	/;"	d	language:C++
TCSETSW	include/termios.h	/^#define TCSETSW	/;"	d	language:C++
TCXONC	include/termios.h	/^#define TCXONC	/;"	d	language:C++
TIME_REQUESTS	kernel/sched.c	/^#define TIME_REQUESTS /;"	d	language:C	file:
TIOCEXCL	include/termios.h	/^#define TIOCEXCL	/;"	d	language:C++
TIOCGPGRP	include/termios.h	/^#define TIOCGPGRP	/;"	d	language:C++
TIOCGSOFTCAR	include/termios.h	/^#define TIOCGSOFTCAR	/;"	d	language:C++
TIOCGWINSZ	include/termios.h	/^#define TIOCGWINSZ	/;"	d	language:C++
TIOCINQ	include/termios.h	/^#define TIOCINQ	/;"	d	language:C++
TIOCMBIC	include/termios.h	/^#define TIOCMBIC	/;"	d	language:C++
TIOCMBIS	include/termios.h	/^#define TIOCMBIS	/;"	d	language:C++
TIOCMGET	include/termios.h	/^#define TIOCMGET	/;"	d	language:C++
TIOCMSET	include/termios.h	/^#define TIOCMSET	/;"	d	language:C++
TIOCM_CAR	include/termios.h	/^#define TIOCM_CAR	/;"	d	language:C++
TIOCM_CD	include/termios.h	/^#define TIOCM_CD	/;"	d	language:C++
TIOCM_CTS	include/termios.h	/^#define TIOCM_CTS	/;"	d	language:C++
TIOCM_DSR	include/termios.h	/^#define TIOCM_DSR	/;"	d	language:C++
TIOCM_DTR	include/termios.h	/^#define TIOCM_DTR	/;"	d	language:C++
TIOCM_LE	include/termios.h	/^#define TIOCM_LE	/;"	d	language:C++
TIOCM_RI	include/termios.h	/^#define TIOCM_RI	/;"	d	language:C++
TIOCM_RNG	include/termios.h	/^#define TIOCM_RNG	/;"	d	language:C++
TIOCM_RTS	include/termios.h	/^#define TIOCM_RTS	/;"	d	language:C++
TIOCM_SR	include/termios.h	/^#define TIOCM_SR	/;"	d	language:C++
TIOCM_ST	include/termios.h	/^#define TIOCM_ST	/;"	d	language:C++
TIOCNXCL	include/termios.h	/^#define TIOCNXCL	/;"	d	language:C++
TIOCOUTQ	include/termios.h	/^#define TIOCOUTQ	/;"	d	language:C++
TIOCSCTTY	include/termios.h	/^#define TIOCSCTTY	/;"	d	language:C++
TIOCSPGRP	include/termios.h	/^#define TIOCSPGRP	/;"	d	language:C++
TIOCSSOFTCAR	include/termios.h	/^#define TIOCSSOFTCAR	/;"	d	language:C++
TIOCSTI	include/termios.h	/^#define TIOCSTI	/;"	d	language:C++
TIOCSWINSZ	include/termios.h	/^#define TIOCSWINSZ	/;"	d	language:C++
TOSTOP	include/termios.h	/^#define TOSTOP	/;"	d	language:C++
TRK0_ERR	include/linux/hdreg.h	/^#define TRK0_ERR	/;"	d	language:C++
TSTPMASK	kernel/chr_drv/tty_io.c	/^#define TSTPMASK /;"	d	language:C	file:
TTY_BUF_SIZE	include/linux/tty.h	/^#define TTY_BUF_SIZE /;"	d	language:C++
TTY_BUF_SIZE	include/termios.h	/^#define TTY_BUF_SIZE /;"	d	language:C++
TYPE	include/stdarg.h	/^#define __va_rounded_size(TYPE)  \\$/;"	D	language:C++	macro:__va_rounded_size
TYPE	include/stdarg.h	/^#define va_arg(AP, TYPE)						\\$/;"	D	language:C++	macro:va_arg
TYPE	include/stddef.h	/^#define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER)$/;"	D	language:C++	macro:offsetof
TYPE	kernel/blk_drv/floppy.c	/^#define TYPE(/;"	d	language:C	file:	signature:(x)
USED	mm/memory.c	/^#define USED /;"	d	language:C	file:
VDISCARD	include/termios.h	/^#define VDISCARD /;"	d	language:C++
VEOF	include/termios.h	/^#define VEOF /;"	d	language:C++
VEOL	include/termios.h	/^#define VEOL /;"	d	language:C++
VEOL2	include/termios.h	/^#define VEOL2 /;"	d	language:C++
VERASE	include/termios.h	/^#define VERASE /;"	d	language:C++
VIDEO_TYPE_CGA	kernel/chr_drv/console.c	/^#define VIDEO_TYPE_CGA	/;"	d	language:C	file:
VIDEO_TYPE_EGAC	kernel/chr_drv/console.c	/^#define VIDEO_TYPE_EGAC	/;"	d	language:C	file:
VIDEO_TYPE_EGAM	kernel/chr_drv/console.c	/^#define VIDEO_TYPE_EGAM	/;"	d	language:C	file:
VIDEO_TYPE_MDA	kernel/chr_drv/console.c	/^#define VIDEO_TYPE_MDA	/;"	d	language:C	file:
VINTR	include/termios.h	/^#define VINTR /;"	d	language:C++
VKILL	include/termios.h	/^#define VKILL /;"	d	language:C++
VLNEXT	include/termios.h	/^#define VLNEXT /;"	d	language:C++
VMIN	include/termios.h	/^#define VMIN /;"	d	language:C++
VQUIT	include/termios.h	/^#define VQUIT /;"	d	language:C++
VREPRINT	include/termios.h	/^#define VREPRINT /;"	d	language:C++
VSTART	include/termios.h	/^#define VSTART /;"	d	language:C++
VSTOP	include/termios.h	/^#define VSTOP /;"	d	language:C++
VSUSP	include/termios.h	/^#define VSUSP /;"	d	language:C++
VSWTC	include/termios.h	/^#define VSWTC /;"	d	language:C++
VT0	include/termios.h	/^#define   VT0	/;"	d	language:C++
VT1	include/termios.h	/^#define   VT1	/;"	d	language:C++
VTDLY	include/termios.h	/^#define VTDLY	/;"	d	language:C++
VTIME	include/termios.h	/^#define VTIME /;"	d	language:C++
VWERASE	include/termios.h	/^#define VWERASE /;"	d	language:C++
WAKEUP_CHARS	kernel/chr_drv/serial.c	/^#define WAKEUP_CHARS /;"	d	language:C	file:
WEXITSTATUS	include/sys/wait.h	/^#define WEXITSTATUS(/;"	d	language:C++	signature:(s)
WIFEXITED	include/sys/wait.h	/^#define WIFEXITED(/;"	d	language:C++	signature:(s)
WIFSIGNALED	include/sys/wait.h	/^#define WIFSIGNALED(/;"	d	language:C++	signature:(s)
WIFSTOPPED	include/sys/wait.h	/^#define WIFSTOPPED(/;"	d	language:C++	signature:(s)
WIN_DIAGNOSE	include/linux/hdreg.h	/^#define WIN_DIAGNOSE	/;"	d	language:C++
WIN_FORMAT	include/linux/hdreg.h	/^#define WIN_FORMAT	/;"	d	language:C++
WIN_INIT	include/linux/hdreg.h	/^#define WIN_INIT	/;"	d	language:C++
WIN_READ	include/linux/hdreg.h	/^#define WIN_READ	/;"	d	language:C++
WIN_RESTORE	include/linux/hdreg.h	/^#define WIN_RESTORE	/;"	d	language:C++
WIN_SEEK	include/linux/hdreg.h	/^#define WIN_SEEK /;"	d	language:C++
WIN_SPECIFY	include/linux/hdreg.h	/^#define WIN_SPECIFY	/;"	d	language:C++
WIN_VERIFY	include/linux/hdreg.h	/^#define WIN_VERIFY	/;"	d	language:C++
WIN_WRITE	include/linux/hdreg.h	/^#define WIN_WRITE	/;"	d	language:C++
WNOHANG	include/sys/wait.h	/^#define WNOHANG	/;"	d	language:C++
WRERR_STAT	include/linux/hdreg.h	/^#define WRERR_STAT	/;"	d	language:C++
WRITE	include/linux/fs.h	/^#define WRITE /;"	d	language:C++
WRITEA	include/linux/fs.h	/^#define WRITEA /;"	d	language:C++
WSTOPSIG	include/sys/wait.h	/^#define WSTOPSIG(/;"	d	language:C++	signature:(s)
WTERMSIG	include/sys/wait.h	/^#define WTERMSIG(/;"	d	language:C++	signature:(s)
WUNTRACED	include/sys/wait.h	/^#define WUNTRACED	/;"	d	language:C++
W_OK	include/unistd.h	/^#define W_OK	/;"	d	language:C++
XCASE	include/termios.h	/^#define XCASE	/;"	d	language:C++
XTABS	include/termios.h	/^#define   XTABS	/;"	d	language:C++
X_OK	include/unistd.h	/^#define X_OK	/;"	d	language:C++
YEAR	kernel/mktime.c	/^#define YEAR /;"	d	language:C	file:
ZEROPAD	kernel/vsprintf.c	/^#define ZEROPAD	/;"	d	language:C	file:
ZMAGIC	include/a.out.h	/^#define ZMAGIC /;"	d	language:C++
Z_MAP_SLOTS	include/linux/fs.h	/^#define Z_MAP_SLOTS /;"	d	language:C++
_A_OUT_H	include/a.out.h	/^#define _A_OUT_H$/;"	d	language:C++
_BLK_H	kernel/blk_drv/blk.h	/^#define _BLK_H$/;"	d	language:C++
_BLOCKABLE	kernel/sched.c	/^#define _BLOCKABLE /;"	d	language:C	file:
_C	include/ctype.h	/^#define _C	/;"	d	language:C++
_CONFIG_H	include/linux/config.h	/^#define _CONFIG_H$/;"	d	language:C++
_CONST_H	include/const.h	/^#define _CONST_H$/;"	d	language:C++
_CTYPE_H	include/ctype.h	/^#define _CTYPE_H$/;"	d	language:C++
_D	include/ctype.h	/^#define _D	/;"	d	language:C++
_ERRNO_H	include/errno.h	/^#define _ERRNO_H$/;"	d	language:C++
_FCNTL_H	include/fcntl.h	/^#define _FCNTL_H$/;"	d	language:C++
_FDREG_H	include/linux/fdreg.h	/^#define _FDREG_H$/;"	d	language:C++
_FS_H	include/linux/fs.h	/^#define _FS_H$/;"	d	language:C++
_HDREG_H	include/linux/hdreg.h	/^#define _HDREG_H$/;"	d	language:C++
_HEAD_H	include/linux/head.h	/^#define _HEAD_H$/;"	d	language:C++
_HIGH	include/sys/wait.h	/^#define _HIGH(/;"	d	language:C++	signature:(v)
_I_FLAG	kernel/chr_drv/tty_io.c	/^#define _I_FLAG(/;"	d	language:C	file:	signature:(tty,f)
_L	include/ctype.h	/^#define _L	/;"	d	language:C++
_LDT	include/linux/sched.h	/^#define _LDT(n) ((((unsigned long) n)<<4)+(FIRST_LDT_/;"	d	language:C++	signature:(n)
_LOW	include/sys/wait.h	/^#define _LOW(/;"	d	language:C++	signature:(v)
_L_FLAG	kernel/chr_drv/tty_io.c	/^#define _L_FLAG(/;"	d	language:C	file:	signature:(tty,f)
_MM_H	include/linux/mm.h	/^#define _MM_H$/;"	d	language:C++
_NSIG	include/signal.h	/^#define _NSIG /;"	d	language:C++
_N_BADMAG	include/a.out.h	/^#define _N_BADMAG(/;"	d	language:C++	signature:(x)
_N_HDROFF	include/a.out.h	/^#define _N_HDROFF(/;"	d	language:C++	signature:(x)
_N_SEGMENT_ROUND	include/a.out.h	/^#define _N_SEGMENT_ROUND(/;"	d	language:C++	signature:(x)
_N_TXTENDADDR	include/a.out.h	/^#define _N_TXTENDADDR(/;"	d	language:C++	signature:(x)
_O_FLAG	kernel/chr_drv/tty_io.c	/^#define _O_FLAG(/;"	d	language:C	file:	signature:(tty,f)
_P	include/ctype.h	/^#define _P	/;"	d	language:C++
_PC_CHOWN_RESTRICTED	include/unistd.h	/^#define _PC_CHOWN_RESTRICTED	/;"	d	language:C++
_PC_LINK_MAX	include/unistd.h	/^#define _PC_LINK_MAX	/;"	d	language:C++
_PC_MAX_CANON	include/unistd.h	/^#define _PC_MAX_CANON	/;"	d	language:C++
_PC_MAX_INPUT	include/unistd.h	/^#define _PC_MAX_INPUT	/;"	d	language:C++
_PC_NAME_MAX	include/unistd.h	/^#define _PC_NAME_MAX	/;"	d	language:C++
_PC_NO_TRUNC	include/unistd.h	/^#define _PC_NO_TRUNC	/;"	d	language:C++
_PC_PATH_MAX	include/unistd.h	/^#define _PC_PATH_MAX	/;"	d	language:C++
_PC_PIPE_BUF	include/unistd.h	/^#define _PC_PIPE_BUF	/;"	d	language:C++
_PC_VDISABLE	include/unistd.h	/^#define _PC_VDISABLE	/;"	d	language:C++
_POSIX_CHOWN_RESTRICTED	include/unistd.h	/^#define _POSIX_CHOWN_RESTRICTED	/;"	d	language:C++
_POSIX_NO_TRUNC	include/unistd.h	/^#define _POSIX_NO_TRUNC	/;"	d	language:C++
_POSIX_VDISABLE	include/unistd.h	/^#define _POSIX_VDISABLE /;"	d	language:C++
_POSIX_VERSION	include/unistd.h	/^#define _POSIX_VERSION /;"	d	language:C++
_PTRDIFF_T	include/stddef.h	/^#define _PTRDIFF_T$/;"	d	language:C++
_PTRDIFF_T	include/sys/types.h	/^#define _PTRDIFF_T$/;"	d	language:C++
_S	include/ctype.h	/^#define _S	/;"	d	language:C++
_S	kernel/sched.c	/^#define _S(/;"	d	language:C	file:	signature:(nr)
_SCHED_H	include/linux/sched.h	/^#define _SCHED_H$/;"	d	language:C++
_SC_ARG_MAX	include/unistd.h	/^#define _SC_ARG_MAX	/;"	d	language:C++
_SC_CHILD_MAX	include/unistd.h	/^#define _SC_CHILD_MAX	/;"	d	language:C++
_SC_CLOCKS_PER_SEC	include/unistd.h	/^#define _SC_CLOCKS_PER_SEC	/;"	d	language:C++
_SC_JOB_CONTROL	include/unistd.h	/^#define _SC_JOB_CONTROL	/;"	d	language:C++
_SC_NGROUPS_MAX	include/unistd.h	/^#define _SC_NGROUPS_MAX	/;"	d	language:C++
_SC_OPEN_MAX	include/unistd.h	/^#define _SC_OPEN_MAX	/;"	d	language:C++
_SC_SAVED_IDS	include/unistd.h	/^#define _SC_SAVED_IDS	/;"	d	language:C++
_SC_VERSION	include/unistd.h	/^#define _SC_VERSION	/;"	d	language:C++
_SIGNAL_H	include/signal.h	/^#define _SIGNAL_H$/;"	d	language:C++
_SIZE_T	include/stddef.h	/^#define _SIZE_T$/;"	d	language:C++
_SIZE_T	include/string.h	/^#define _SIZE_T$/;"	d	language:C++
_SIZE_T	include/sys/types.h	/^#define _SIZE_T$/;"	d	language:C++
_SIZE_T	include/time.h	/^#define _SIZE_T$/;"	d	language:C++
_SP	include/ctype.h	/^#define _SP	/;"	d	language:C++
_STDARG_H	include/stdarg.h	/^#define _STDARG_H$/;"	d	language:C++
_STDDEF_H	include/stddef.h	/^#define _STDDEF_H$/;"	d	language:C++
_STRING_H_	include/string.h	/^#define _STRING_H_$/;"	d	language:C++
_SYS_STAT_H	include/sys/stat.h	/^#define _SYS_STAT_H$/;"	d	language:C++
_SYS_TYPES_H	include/sys/types.h	/^#define _SYS_TYPES_H$/;"	d	language:C++
_SYS_UTSNAME_H	include/sys/utsname.h	/^#define _SYS_UTSNAME_H$/;"	d	language:C++
_SYS_WAIT_H	include/sys/wait.h	/^#define _SYS_WAIT_H$/;"	d	language:C++
_TERMIOS_H	include/termios.h	/^#define _TERMIOS_H$/;"	d	language:C++
_TIMES_H	include/sys/times.h	/^#define _TIMES_H$/;"	d	language:C++
_TIME_H	include/time.h	/^#define _TIME_H$/;"	d	language:C++
_TIME_T	include/sys/types.h	/^#define _TIME_T$/;"	d	language:C++
_TIME_T	include/time.h	/^#define _TIME_T$/;"	d	language:C++
_TSS	include/linux/sched.h	/^#define _TSS(n) ((((unsigned long) n)<<4)+(FIRST_TSS_/;"	d	language:C++	signature:(n)
_TTY_H	include/linux/tty.h	/^#define _TTY_H$/;"	d	language:C++
_U	include/ctype.h	/^#define _U	/;"	d	language:C++
_UNISTD_H	include/unistd.h	/^#define _UNISTD_H$/;"	d	language:C++
_UTIME_H	include/utime.h	/^#define _UTIME_H$/;"	d	language:C++
_X	include/ctype.h	/^#define _X	/;"	d	language:C++
__GNU_EXEC_MACROS__	include/a.out.h	/^#define __GNU_EXEC_MACROS__$/;"	d	language:C++
__LIBRARY__	init/main.c	/^#define __LIBRARY__$/;"	d	language:C	file:
__LIBRARY__	lib/_exit.c	/^#define __LIBRARY__$/;"	d	language:C	file:
__LIBRARY__	lib/close.c	/^#define __LIBRARY__$/;"	d	language:C	file:
__LIBRARY__	lib/dup.c	/^#define __LIBRARY__$/;"	d	language:C	file:
__LIBRARY__	lib/execve.c	/^#define __LIBRARY__$/;"	d	language:C	file:
__LIBRARY__	lib/open.c	/^#define __LIBRARY__$/;"	d	language:C	file:
__LIBRARY__	lib/setsid.c	/^#define __LIBRARY__$/;"	d	language:C	file:
__LIBRARY__	lib/string.c	/^#define __LIBRARY__$/;"	d	language:C	file:
__LIBRARY__	lib/wait.c	/^#define __LIBRARY__$/;"	d	language:C	file:
__LIBRARY__	lib/write.c	/^#define __LIBRARY__$/;"	d	language:C	file:
__NR_access	include/unistd.h	/^#define __NR_access	/;"	d	language:C++
__NR_acct	include/unistd.h	/^#define __NR_acct	/;"	d	language:C++
__NR_alarm	include/unistd.h	/^#define __NR_alarm	/;"	d	language:C++
__NR_break	include/unistd.h	/^#define __NR_break	/;"	d	language:C++
__NR_brk	include/unistd.h	/^#define __NR_brk	/;"	d	language:C++
__NR_chdir	include/unistd.h	/^#define __NR_chdir	/;"	d	language:C++
__NR_chmod	include/unistd.h	/^#define __NR_chmod	/;"	d	language:C++
__NR_chown	include/unistd.h	/^#define __NR_chown	/;"	d	language:C++
__NR_chroot	include/unistd.h	/^#define __NR_chroot	/;"	d	language:C++
__NR_close	include/unistd.h	/^#define __NR_close	/;"	d	language:C++
__NR_creat	include/unistd.h	/^#define __NR_creat	/;"	d	language:C++
__NR_dup	include/unistd.h	/^#define __NR_dup	/;"	d	language:C++
__NR_dup2	include/unistd.h	/^#define __NR_dup2	/;"	d	language:C++
__NR_execve	include/unistd.h	/^#define __NR_execve	/;"	d	language:C++
__NR_exit	include/unistd.h	/^#define __NR_exit	/;"	d	language:C++
__NR_fcntl	include/unistd.h	/^#define __NR_fcntl	/;"	d	language:C++
__NR_fork	include/unistd.h	/^#define __NR_fork	/;"	d	language:C++
__NR_fstat	include/unistd.h	/^#define __NR_fstat	/;"	d	language:C++
__NR_ftime	include/unistd.h	/^#define __NR_ftime	/;"	d	language:C++
__NR_getegid	include/unistd.h	/^#define __NR_getegid	/;"	d	language:C++
__NR_geteuid	include/unistd.h	/^#define __NR_geteuid	/;"	d	language:C++
__NR_getgid	include/unistd.h	/^#define __NR_getgid	/;"	d	language:C++
__NR_getpgrp	include/unistd.h	/^#define __NR_getpgrp	/;"	d	language:C++
__NR_getpid	include/unistd.h	/^#define __NR_getpid	/;"	d	language:C++
__NR_getppid	include/unistd.h	/^#define __NR_getppid	/;"	d	language:C++
__NR_getuid	include/unistd.h	/^#define __NR_getuid	/;"	d	language:C++
__NR_gtty	include/unistd.h	/^#define __NR_gtty	/;"	d	language:C++
__NR_ioctl	include/unistd.h	/^#define __NR_ioctl	/;"	d	language:C++
__NR_kill	include/unistd.h	/^#define __NR_kill	/;"	d	language:C++
__NR_link	include/unistd.h	/^#define __NR_link	/;"	d	language:C++
__NR_lock	include/unistd.h	/^#define __NR_lock	/;"	d	language:C++
__NR_lseek	include/unistd.h	/^#define __NR_lseek	/;"	d	language:C++
__NR_mkdir	include/unistd.h	/^#define __NR_mkdir	/;"	d	language:C++
__NR_mknod	include/unistd.h	/^#define __NR_mknod	/;"	d	language:C++
__NR_mount	include/unistd.h	/^#define __NR_mount	/;"	d	language:C++
__NR_mpx	include/unistd.h	/^#define __NR_mpx	/;"	d	language:C++
__NR_nice	include/unistd.h	/^#define __NR_nice	/;"	d	language:C++
__NR_open	include/unistd.h	/^#define __NR_open	/;"	d	language:C++
__NR_pause	include/unistd.h	/^#define __NR_pause	/;"	d	language:C++
__NR_phys	include/unistd.h	/^#define __NR_phys	/;"	d	language:C++
__NR_pipe	include/unistd.h	/^#define __NR_pipe	/;"	d	language:C++
__NR_prof	include/unistd.h	/^#define __NR_prof	/;"	d	language:C++
__NR_ptrace	include/unistd.h	/^#define __NR_ptrace	/;"	d	language:C++
__NR_read	include/unistd.h	/^#define __NR_read	/;"	d	language:C++
__NR_rename	include/unistd.h	/^#define __NR_rename	/;"	d	language:C++
__NR_rmdir	include/unistd.h	/^#define __NR_rmdir	/;"	d	language:C++
__NR_setgid	include/unistd.h	/^#define __NR_setgid	/;"	d	language:C++
__NR_setpgid	include/unistd.h	/^#define __NR_setpgid	/;"	d	language:C++
__NR_setregid	include/unistd.h	/^#define __NR_setregid	/;"	d	language:C++
__NR_setreuid	include/unistd.h	/^#define __NR_setreuid	/;"	d	language:C++
__NR_setsid	include/unistd.h	/^#define __NR_setsid	/;"	d	language:C++
__NR_setuid	include/unistd.h	/^#define __NR_setuid	/;"	d	language:C++
__NR_setup	include/unistd.h	/^#define __NR_setup	/;"	d	language:C++
__NR_sgetmask	include/unistd.h	/^#define __NR_sgetmask	/;"	d	language:C++
__NR_sigaction	include/unistd.h	/^#define __NR_sigaction	/;"	d	language:C++
__NR_signal	include/unistd.h	/^#define __NR_signal	/;"	d	language:C++
__NR_ssetmask	include/unistd.h	/^#define __NR_ssetmask	/;"	d	language:C++
__NR_stat	include/unistd.h	/^#define __NR_stat	/;"	d	language:C++
__NR_stime	include/unistd.h	/^#define __NR_stime	/;"	d	language:C++
__NR_stty	include/unistd.h	/^#define __NR_stty	/;"	d	language:C++
__NR_sync	include/unistd.h	/^#define __NR_sync	/;"	d	language:C++
__NR_time	include/unistd.h	/^#define __NR_time	/;"	d	language:C++
__NR_times	include/unistd.h	/^#define __NR_times	/;"	d	language:C++
__NR_ulimit	include/unistd.h	/^#define __NR_ulimit	/;"	d	language:C++
__NR_umask	include/unistd.h	/^#define __NR_umask	/;"	d	language:C++
__NR_umount	include/unistd.h	/^#define __NR_umount	/;"	d	language:C++
__NR_uname	include/unistd.h	/^#define __NR_uname	/;"	d	language:C++
__NR_unlink	include/unistd.h	/^#define __NR_unlink	/;"	d	language:C++
__NR_ustat	include/unistd.h	/^#define __NR_ustat	/;"	d	language:C++
__NR_utime	include/unistd.h	/^#define __NR_utime	/;"	d	language:C++
__NR_waitpid	include/unistd.h	/^#define __NR_waitpid	/;"	d	language:C++
__NR_write	include/unistd.h	/^#define __NR_write	/;"	d	language:C++
___strtok	include/string.h	/^extern char * ___strtok;$/;"	x	language:C++	typeref:typename:char *
__anon60fecb71010d	lib/wait.c	/^_syscall3(pid_t,waitpid,pid_t,pid,int *,wait_stat,int,options)$/;"	z	language:C	function:_syscall3	typeref:typename:pid_t	file:
__anon60fecb71020d	lib/wait.c	/^_syscall3(pid_t,waitpid,pid_t,pid,int *,wait_stat,int,options)$/;"	z	language:C	function:_syscall3	typeref:typename:waitpid	file:
__anon60fecb71030d	lib/wait.c	/^_syscall3(pid_t,waitpid,pid_t,pid,int *,wait_stat,int,options)$/;"	z	language:C	function:_syscall3	typeref:typename:pid_t	file:
__anon60fecb71040d	lib/wait.c	/^_syscall3(pid_t,waitpid,pid_t,pid,int *,wait_stat,int,options)$/;"	z	language:C	function:_syscall3	typeref:typename:pid	file:
__anon60fecb71050d	lib/wait.c	/^_syscall3(pid_t,waitpid,pid_t,pid,int *,wait_stat,int,options)$/;"	z	language:C	function:_syscall3	typeref:typename:int *	file:
__anon60fecb71060d	lib/wait.c	/^_syscall3(pid_t,waitpid,pid_t,pid,int *,wait_stat,int,options)$/;"	z	language:C	function:_syscall3	typeref:typename:wait_stat	file:
__anon60fecb71070d	lib/wait.c	/^_syscall3(pid_t,waitpid,pid_t,pid,int *,wait_stat,int,options)$/;"	z	language:C	function:_syscall3	typeref:typename:int	file:
__anon60fecb71080d	lib/wait.c	/^_syscall3(pid_t,waitpid,pid_t,pid,int *,wait_stat,int,options)$/;"	z	language:C	function:_syscall3	typeref:typename:options	file:
__anon96a80d310108	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	s	language:C++
__anon96a80d310108::quot	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	m	language:C++	struct:__anon96a80d310108	typeref:typename:int	access:public
__anon96a80d310108::rem	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	m	language:C++	struct:__anon96a80d310108	typeref:typename:int	access:public
__anon96a80d310208	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	s	language:C++
__anon96a80d310208::quot	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	m	language:C++	struct:__anon96a80d310208	typeref:typename:long	access:public
__anon96a80d310208::rem	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	m	language:C++	struct:__anon96a80d310208	typeref:typename:long	access:public
__anonda5d4bf5010a	include/a.out.h	/^  union {$/;"	u	language:C++	struct:nlist	access:public
__anonda9e522d0108	kernel/sched.c	/^struct {$/;"	s	language:C	file:
__anonda9e522d0108::a	kernel/sched.c	/^	long * a;$/;"	m	language:C	struct:__anonda9e522d0108	typeref:typename:long *	file:	access:public
__anonda9e522d0108::b	kernel/sched.c	/^	short b;$/;"	m	language:C	struct:__anonda9e522d0108	typeref:typename:short	file:	access:public
__asm__	include/string.h	/^register char * __res __asm__("ax");$/;"	l	language:C++	function:strchr	typeref:typename:register char * __res	file:
__asm__	include/string.h	/^register char * __res __asm__("ax");$/;"	l	language:C++	function:strstr	typeref:typename:register char * __res	file:
__asm__	include/string.h	/^register char * __res __asm__("dx");$/;"	l	language:C++	function:strrchr	typeref:typename:register char * __res	file:
__asm__	include/string.h	/^register char * __res __asm__("si");$/;"	l	language:C++	function:strcspn	typeref:typename:register char * __res	file:
__asm__	include/string.h	/^register char * __res __asm__("si");$/;"	l	language:C++	function:strpbrk	typeref:typename:register char * __res	file:
__asm__	include/string.h	/^register char * __res __asm__("si");$/;"	l	language:C++	function:strspn	typeref:typename:register char * __res	file:
__asm__	include/string.h	/^register char * __res __asm__("si");$/;"	l	language:C++	function:strtok	typeref:typename:register char * __res	file:
__asm__	include/string.h	/^register int __res __asm__("ax");$/;"	l	language:C++	function:memcmp	typeref:typename:register int __res	file:
__asm__	include/string.h	/^register int __res __asm__("ax");$/;"	l	language:C++	function:strcmp	typeref:typename:register int __res	file:
__asm__	include/string.h	/^register int __res __asm__("ax");$/;"	l	language:C++	function:strncmp	typeref:typename:register int __res	file:
__asm__	include/string.h	/^register int __res __asm__("cx");$/;"	l	language:C++	function:strlen	typeref:typename:register int __res	file:
__asm__	include/string.h	/^register void * __res __asm__("di");$/;"	l	language:C++	function:memchr	typeref:typename:register void * __res	file:
__va_rounded_size	include/stdarg.h	/^#define __va_rounded_size(/;"	d	language:C++	signature:(TYPE)
_bmap	fs/inode.c	/^static int _bmap(struct m_inode * inode,int block,int create)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct m_inode * inode,int block,int create)
_bucket_dir	lib/malloc.c	/^struct _bucket_dir {	\/* 8 bytes *\/$/;"	s	language:C	file:
_bucket_dir::chain	lib/malloc.c	/^	struct bucket_desc	*chain;$/;"	m	language:C	struct:_bucket_dir	typeref:struct:bucket_desc *	file:	access:public
_bucket_dir::size	lib/malloc.c	/^	int			size;$/;"	m	language:C	struct:_bucket_dir	typeref:typename:int	file:	access:public
_coprocessor_error	kernel/system_call.s	/^_coprocessor_error:$/;"	l	language:Asm
_ctmp	include/ctype.h	/^extern char _ctmp;$/;"	x	language:C++	typeref:typename:char
_ctmp	lib/ctype.c	/^char _ctmp;$/;"	v	language:C	typeref:typename:char
_ctype	include/ctype.h	/^extern unsigned char _ctype[];$/;"	x	language:C++	typeref:typename:unsigned char[]
_ctype	lib/ctype.c	/^unsigned char _ctype[] = {0x00,			\/* EOF *\/$/;"	v	language:C	typeref:typename:unsigned char[]
_device_not_available	kernel/system_call.s	/^_device_not_available:$/;"	l	language:Asm
_exit	lib/_exit.c	/^volatile void _exit(int exit_code)$/;"	f	language:C	typeref:typename:volatile void	signature:(int exit_code)
_exit.o	lib/Makefile	/^_exit.s _exit.o : _exit.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
_exit.s	lib/Makefile	/^_exit.s _exit.o : _exit.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
_floppy_interrupt	kernel/system_call.s	/^_floppy_interrupt:$/;"	l	language:Asm
_fs	kernel/traps.c	/^#define _fs(/;"	d	language:C	file:	signature:()
_get_base	include/linux/sched.h	/^#define _get_base(/;"	d	language:C++	signature:(addr)
_hashfn	fs/buffer.c	/^#define _hashfn(/;"	d	language:C	file:	signature:(dev,block)
_hd_interrupt	kernel/system_call.s	/^_hd_interrupt:$/;"	l	language:Asm
_keyboard_interrupt	kernel/chr_drv/keyboard.S	/^_keyboard_interrupt:$/;"	l	language:Asm
_page_fault	mm/page.s	/^_page_fault:$/;"	l	language:Asm
_parallel_interrupt	kernel/system_call.s	/^_parallel_interrupt:$/;"	l	language:Asm
_rs1_interrupt	kernel/chr_drv/rs_io.s	/^_rs1_interrupt:$/;"	l	language:Asm
_rs2_interrupt	kernel/chr_drv/rs_io.s	/^_rs2_interrupt:$/;"	l	language:Asm
_set_base	include/linux/sched.h	/^#define _set_base(/;"	d	language:C++	signature:(addr,base)
_set_gate	include/asm/system.h	/^#define _set_gate(/;"	d	language:C++	signature:(gate_addr,type,dpl,addr)
_set_limit	include/linux/sched.h	/^#define _set_limit(/;"	d	language:C++	signature:(addr,limit)
_set_seg_desc	include/asm/system.h	/^#define _set_seg_desc(/;"	d	language:C++	signature:(gate_addr,type,dpl,base,limit)
_set_tssldt_desc	include/asm/system.h	/^#define _set_tssldt_desc(/;"	d	language:C++	signature:(n,addr,type)
_sys_execve	kernel/system_call.s	/^_sys_execve:$/;"	l	language:Asm
_sys_fork	kernel/system_call.s	/^_sys_fork:$/;"	l	language:Asm
_syscall0	include/unistd.h	/^#define _syscall0(/;"	d	language:C++	signature:(type,name)
_syscall1	include/unistd.h	/^#define _syscall1(/;"	d	language:C++	signature:(type,name,atype,a)
_syscall2	include/unistd.h	/^#define _syscall2(/;"	d	language:C++	signature:(type,name,atype,a,btype,b)
_syscall3	include/unistd.h	/^#define _syscall3(/;"	d	language:C++	signature:(type,name,atype,a,btype,b,ctype,c)
_syscall3	lib/wait.c	/^_syscall3(pid_t,waitpid,pid_t,pid,int *,wait_stat,int,options)$/;"	f	language:C	signature:(pid_t,waitpid,pid_t,pid,int *,wait_stat,int,options)
_system_call	kernel/system_call.s	/^_system_call:$/;"	l	language:Asm
_timer_interrupt	kernel/system_call.s	/^_timer_interrupt:$/;"	l	language:Asm
_v	include/asm/segment.h	/^	unsigned long _v;$/;"	l	language:C++	function:get_fs_long	typeref:typename:unsigned long	file:
_v	include/asm/segment.h	/^	unsigned register char _v;$/;"	l	language:C++	function:get_fs_byte	typeref:typename:unsigned register char	file:
_v	include/asm/segment.h	/^	unsigned short _v;$/;"	l	language:C++	function:get_ds	typeref:typename:unsigned short	file:
_v	include/asm/segment.h	/^	unsigned short _v;$/;"	l	language:C++	function:get_fs	typeref:typename:unsigned short	file:
_v	include/asm/segment.h	/^	unsigned short _v;$/;"	l	language:C++	function:get_fs_word	typeref:typename:unsigned short	file:
a	fs/file_dev.c	/^#define MAX(a,b) (((a)>(b))?(a):(b))$/;"	D	language:C	macro:MAX
a	fs/file_dev.c	/^#define MIN(a,b) (((a)<(b))?(a):(b))$/;"	D	language:C	macro:MIN
a	include/linux/fs.h	/^#define MAJOR(a) (((unsigned)(a))>>8)$/;"	D	language:C++	macro:MAJOR
a	include/linux/fs.h	/^#define MINOR(a) ((a)&0xff)$/;"	D	language:C++	macro:MINOR
a	include/linux/head.h	/^	unsigned long a,b;$/;"	m	language:C++	struct:desc_struct	typeref:typename:unsigned long	access:public
a	include/linux/tty.h	/^#define CHARS(a) (((a).head-(a).tail)&(TTY_BUF_SIZE-1))$/;"	D	language:C++	macro:CHARS
a	include/linux/tty.h	/^#define DEC(a) ((a) = ((a)-1) & (TTY_BUF_SIZE-1))$/;"	D	language:C++	macro:DEC
a	include/linux/tty.h	/^#define EMPTY(a) ((a).head == (a).tail)$/;"	D	language:C++	macro:EMPTY
a	include/linux/tty.h	/^#define FULL(a) (!LEFT(a))$/;"	D	language:C++	macro:FULL
a	include/linux/tty.h	/^#define INC(a) ((a) = ((a)+1) & (TTY_BUF_SIZE-1))$/;"	D	language:C++	macro:INC
a	include/linux/tty.h	/^#define LAST(a) ((a).buf[(TTY_BUF_SIZE-1)&((a).head-1)])$/;"	D	language:C++	macro:LAST
a	include/linux/tty.h	/^#define LEFT(a) (((a).tail-(a).head-1)&(TTY_BUF_SIZE-1))$/;"	D	language:C++	macro:LEFT
a	include/unistd.h	/^#define _syscall1(type,name,atype,a) \\$/;"	D	language:C++	macro:_syscall1
a	include/unistd.h	/^#define _syscall2(type,name,atype,a,btype,b) \\$/;"	D	language:C++	macro:_syscall2
a	include/unistd.h	/^#define _syscall3(type,name,atype,a,btype,b,ctype,c) \\$/;"	D	language:C++	macro:_syscall3
a	kernel/chr_drv/console.c	/^	register unsigned char a;$/;"	l	language:C	function:con_init	typeref:typename:register unsigned char	file:
a	kernel/sched.c	/^	long * a;$/;"	m	language:C	struct:__anonda9e522d0108	typeref:typename:long *	file:	access:public
a_bss	include/a.out.h	/^  unsigned a_bss;		\/* length of uninitialized data area for file, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
a_data	include/a.out.h	/^  unsigned a_data;		\/* length of data, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
a_drsize	include/a.out.h	/^  unsigned a_drsize;		\/* length of relocation info for data, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
a_entry	include/a.out.h	/^  unsigned a_entry;		\/* start address *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
a_magic	include/a.out.h	/^  unsigned long a_magic;	\/* Use macros N_MAGIC, etc for access *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned long	access:public
a_syms	include/a.out.h	/^  unsigned a_syms;		\/* length of symbol table data in file, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
a_text	include/a.out.h	/^  unsigned a_text;		\/* length of text, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
a_trsize	include/a.out.h	/^  unsigned a_trsize;		\/* length of relocation info for text, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
actime	fs/open.c	/^	long actime,modtime;$/;"	l	language:C	function:sys_utime	typeref:typename:long	file:
actime	include/utime.h	/^	time_t actime;$/;"	m	language:C++	struct:utimbuf	typeref:typename:time_t	access:public
action	kernel/signal.c	/^int sys_sigaction(int signum, const struct sigaction * action,$/;"	z	language:C	function:sys_sigaction	typeref:typename:const struct sigaction *	file:
add_entry	fs/namei.c	/^static struct buffer_head * add_entry(struct m_inode * dir,$/;"	f	language:C	typeref:struct:buffer_head *	file:	signature:(struct m_inode * dir,const char * name,int namelen,struct dir_entry ** res_dir)
add_request	kernel/blk_drv/ll_rw_blk.c	/^static void add_request(struct blk_dev_struct * dev, struct request * req)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct blk_dev_struct * dev,struct request * req)
add_timer	kernel/sched.c	/^void add_timer(long jiffies, void (*fn)(void))$/;"	f	language:C	typeref:typename:void	signature:(long jiffies,void (* fn)(void))
addr	fs/bitmap.c	/^#define clear_bit(nr,addr) ({\\$/;"	D	language:C	macro:clear_bit
addr	fs/bitmap.c	/^#define clear_block(addr) \\$/;"	D	language:C	macro:clear_block
addr	fs/bitmap.c	/^#define find_first_zero(addr) ({ \\$/;"	D	language:C	macro:find_first_zero
addr	fs/bitmap.c	/^#define set_bit(nr,addr) ({\\$/;"	D	language:C	macro:set_bit
addr	fs/super.c	/^#define set_bit(bitnr,addr) ({ \\$/;"	D	language:C	macro:set_bit
addr	include/asm/segment.h	/^extern inline unsigned char get_fs_byte(const char * addr)$/;"	z	language:C++	function:get_fs_byte	typeref:typename:const char *	file:
addr	include/asm/segment.h	/^extern inline unsigned long get_fs_long(const unsigned long *addr)$/;"	z	language:C++	function:get_fs_long	typeref:typename:const unsigned long *	file:
addr	include/asm/segment.h	/^extern inline unsigned short get_fs_word(const unsigned short *addr)$/;"	z	language:C++	function:get_fs_word	typeref:typename:const unsigned short *	file:
addr	include/asm/segment.h	/^extern inline void put_fs_byte(char val,char *addr)$/;"	z	language:C++	function:put_fs_byte	typeref:typename:char *	file:
addr	include/asm/segment.h	/^extern inline void put_fs_long(unsigned long val,unsigned long * addr)$/;"	z	language:C++	function:put_fs_long	typeref:typename:unsigned long *	file:
addr	include/asm/segment.h	/^extern inline void put_fs_word(short val,short * addr)$/;"	z	language:C++	function:put_fs_word	typeref:typename:short *	file:
addr	include/asm/system.h	/^#define _set_gate(gate_addr,type,dpl,addr) \\$/;"	D	language:C++	macro:_set_gate
addr	include/asm/system.h	/^#define _set_tssldt_desc(n,addr,type) \\$/;"	D	language:C++	macro:_set_tssldt_desc
addr	include/asm/system.h	/^#define set_intr_gate(n,addr) \\$/;"	D	language:C++	macro:set_intr_gate
addr	include/asm/system.h	/^#define set_ldt_desc(n,addr) _set_tssldt_desc(((char *) (n)),addr,"0x82")$/;"	D	language:C++	macro:set_ldt_desc
addr	include/asm/system.h	/^#define set_system_gate(n,addr) \\$/;"	D	language:C++	macro:set_system_gate
addr	include/asm/system.h	/^#define set_trap_gate(n,addr) \\$/;"	D	language:C++	macro:set_trap_gate
addr	include/asm/system.h	/^#define set_tss_desc(n,addr) _set_tssldt_desc(((char *) (n)),addr,"0x89")$/;"	D	language:C++	macro:set_tss_desc
addr	include/linux/sched.h	/^#define _get_base(addr) ({\\$/;"	D	language:C++	macro:_get_base
addr	include/linux/sched.h	/^#define _set_base(addr,base) \\$/;"	D	language:C++	macro:_set_base
addr	include/linux/sched.h	/^#define _set_limit(addr,limit) \\$/;"	D	language:C++	macro:_set_limit
addr	init/main.c	/^#define CMOS_READ(addr) ({ \\$/;"	D	language:C	macro:CMOS_READ
addr	kernel/blk_drv/floppy.c	/^	long addr = (long) CURRENT->buffer;$/;"	l	language:C	function:setup_DMA	typeref:typename:long	file:
addr	kernel/blk_drv/hd.c	/^#define CMOS_READ(addr) ({ \\$/;"	D	language:C	macro:CMOS_READ
addr	kernel/blk_drv/ramdisk.c	/^	char	*addr;$/;"	l	language:C	function:do_rd_request	typeref:typename:char *	file:
addr	kernel/fork.c	/^void verify_area(void * addr,int size)$/;"	z	language:C	function:verify_area	typeref:typename:void *	file:
addr	kernel/traps.c	/^#define get_seg_byte(seg,addr) ({ \\$/;"	D	language:C	macro:get_seg_byte
addr	kernel/traps.c	/^#define get_seg_long(seg,addr) ({ \\$/;"	D	language:C	macro:get_seg_long
addr	mm/memory.c	/^#define CODE_SPACE(addr) ((((addr)+4095)&~4095) < \\$/;"	D	language:C	macro:CODE_SPACE
addr	mm/memory.c	/^#define MAP_NR(addr) (((addr)-LOW_MEM)>>12)$/;"	D	language:C	macro:MAP_NR
addr	mm/memory.c	/^void free_page(unsigned long addr)$/;"	z	language:C	function:free_page	typeref:typename:unsigned long	file:
address	boot/setup.s	/^	.word	0x0000		! base address=0$/;"	g	language:R
address	fs/buffer.c	/^void bread_page(unsigned long address,int dev,int b[4])$/;"	z	language:C	function:bread_page	typeref:typename:unsigned long	file:
address	mm/memory.c	/^static int share_page(unsigned long address)$/;"	z	language:C	function:share_page	typeref:typename:unsigned long	file:
address	mm/memory.c	/^static int try_to_share(unsigned long address, struct task_struct * p)$/;"	z	language:C	function:try_to_share	typeref:typename:unsigned long	file:
address	mm/memory.c	/^unsigned long put_page(unsigned long page,unsigned long address)$/;"	z	language:C	function:put_page	typeref:typename:unsigned long	file:
address	mm/memory.c	/^void do_no_page(unsigned long error_code,unsigned long address)$/;"	z	language:C	function:do_no_page	typeref:typename:unsigned long	file:
address	mm/memory.c	/^void do_wp_page(unsigned long error_code,unsigned long address)$/;"	z	language:C	function:do_wp_page	typeref:typename:unsigned long	file:
address	mm/memory.c	/^void get_empty_page(unsigned long address)$/;"	z	language:C	function:get_empty_page	typeref:typename:unsigned long	file:
address	mm/memory.c	/^void write_verify(unsigned long address)$/;"	z	language:C	function:write_verify	typeref:typename:unsigned long	file:
ah	boot/setup.s	/^	mov	[6],ax		! al = video mode, ah = window width$/;"	g	language:R
ah	boot/setup.s	/^    ; 当ah = 0x03时，表示读取光标位置$/;"	g	language:R
al	boot/setup.s	/^	mov	[6],ax		! al = video mode, ah = window width$/;"	g	language:R
alarm	include/linux/sched.h	/^	long alarm;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
all	Makefile	/^all:	Image$/;"	t	language:Make
all	mm/Makefile	/^all: mm.o$/;"	t	language:Make
alt	kernel/chr_drv/keyboard.S	/^alt:	movb $0x10,%al$/;"	l	language:Asm
alt_map	kernel/chr_drv/keyboard.S	/^alt_map:$/;"	l	language:Asm
arg	fs/fcntl.c	/^int sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	z	language:C	function:sys_fcntl	typeref:typename:unsigned long	file:
arg	fs/fcntl.c	/^static int dupfd(unsigned int fd, unsigned int arg)$/;"	z	language:C	function:dupfd	typeref:typename:unsigned int	file:
arg	fs/ioctl.c	/^int sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	z	language:C	function:sys_ioctl	typeref:typename:unsigned long	file:
arg	kernel/chr_drv/tty_ioctl.c	/^int tty_ioctl(int dev, int cmd, int arg)$/;"	z	language:C	function:tty_ioctl	typeref:typename:int	file:
arg	lib/open.c	/^	va_list arg;$/;"	l	language:C	function:open	typeref:typename:va_list	file:
argc	fs/exec.c	/^	int i,argc,envc;$/;"	l	language:C	function:do_execve	typeref:typename:int	file:
argc	fs/exec.c	/^static unsigned long * create_tables(char * p,int argc,int envc)$/;"	z	language:C	function:create_tables	typeref:typename:int	file:
argc	fs/exec.c	/^static unsigned long copy_strings(int argc,char ** argv,unsigned long *page,$/;"	z	language:C	function:copy_strings	typeref:typename:int	file:
argc	tools/build.c	/^int main(int argc, char ** argv)$/;"	z	language:C	function:main	typeref:typename:int	file:
args	fs/buffer.c	/^	va_list args;$/;"	l	language:C	function:breada	typeref:typename:va_list	file:
args	init/main.c	/^	va_list args;$/;"	l	language:C	function:printf	typeref:typename:va_list	file:
args	kernel/printk.c	/^	va_list args;$/;"	l	language:C	function:printk	typeref:typename:va_list	file:
args	kernel/vsprintf.c	/^int vsprintf(char *buf, const char *fmt, va_list args)$/;"	z	language:C	function:vsprintf	typeref:typename:va_list	file:
argv	fs/exec.c	/^	char ** argv, char ** envp)$/;"	z	language:C	function:do_execve	typeref:typename:char **	file:
argv	fs/exec.c	/^	unsigned long *argv,*envp;$/;"	l	language:C	function:create_tables	typeref:typename:unsigned long *	file:
argv	fs/exec.c	/^static int count(char ** argv)$/;"	z	language:C	function:count	typeref:typename:char **	file:
argv	fs/exec.c	/^static unsigned long copy_strings(int argc,char ** argv,unsigned long *page,$/;"	z	language:C	function:copy_strings	typeref:typename:char **	file:
argv	init/main.c	/^static char * argv[] = { "-\/bin\/sh",NULL };$/;"	v	language:C	typeref:typename:char * []	file:
argv	tools/build.c	/^int main(int argc, char ** argv)$/;"	z	language:C	function:main	typeref:typename:char **	file:
argv_rc	init/main.c	/^static char * argv_rc[] = { "\/bin\/sh", NULL };$/;"	v	language:C	typeref:typename:char * []	file:
attr	kernel/chr_drv/console.c	/^static unsigned char	attr=0x07;$/;"	v	language:C	typeref:typename:unsigned char	file:
atype	include/unistd.h	/^#define _syscall1(type,name,atype,a) \\$/;"	D	language:C++	macro:_syscall1
atype	include/unistd.h	/^#define _syscall2(type,name,atype,a,btype,b) \\$/;"	D	language:C++	macro:_syscall2
atype	include/unistd.h	/^#define _syscall3(type,name,atype,a,btype,b,ctype,c) \\$/;"	D	language:C++	macro:_syscall3
b	fs/buffer.c	/^	void * b;$/;"	l	language:C	function:buffer_init	typeref:typename:void *	file:
b	fs/buffer.c	/^void bread_page(unsigned long address,int dev,int b[4])$/;"	z	language:C	function:bread_page	typeref:typename:int[4]	file:
b	fs/file_dev.c	/^#define MAX(a,b) (((a)>(b))?(a):(b))$/;"	D	language:C	macro:MAX
b	fs/file_dev.c	/^#define MIN(a,b) (((a)<(b))?(a):(b))$/;"	D	language:C	macro:MIN
b	include/linux/head.h	/^	unsigned long a,b;$/;"	m	language:C++	struct:desc_struct	typeref:typename:unsigned long	access:public
b	include/unistd.h	/^#define _syscall2(type,name,atype,a,btype,b) \\$/;"	D	language:C++	macro:_syscall2
b	include/unistd.h	/^#define _syscall3(type,name,atype,a,btype,b,ctype,c) \\$/;"	D	language:C++	macro:_syscall3
b	kernel/chr_drv/tty_io.c	/^	char c, * b=buf;$/;"	l	language:C	function:tty_read	typeref:typename:char *	file:
b	kernel/chr_drv/tty_io.c	/^	char c, *b=buf;$/;"	l	language:C	function:tty_write	typeref:typename:char *	file:
b	kernel/sched.c	/^	short b;$/;"	m	language:C	struct:__anonda9e522d0108	typeref:typename:short	file:	access:public
b_blocknr	include/linux/fs.h	/^	unsigned long b_blocknr;	\/* block number *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned long	access:public
b_count	include/linux/fs.h	/^	unsigned char b_count;		\/* users using this block *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned char	access:public
b_data	include/linux/fs.h	/^	char * b_data;			\/* pointer to data block (1024 bytes) *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:char *	access:public
b_dev	include/linux/fs.h	/^	unsigned short b_dev;		\/* device (0 = free) *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned short	access:public
b_dirt	include/linux/fs.h	/^	unsigned char b_dirt;		\/* 0-clean,1-dirty *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned char	access:public
b_lock	include/linux/fs.h	/^	unsigned char b_lock;		\/* 0 - ok, 1 -locked *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned char	access:public
b_next	include/linux/fs.h	/^	struct buffer_head * b_next;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head *	access:public
b_next_free	include/linux/fs.h	/^	struct buffer_head * b_next_free;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head *	access:public
b_prev	include/linux/fs.h	/^	struct buffer_head * b_prev;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head *	access:public
b_prev_free	include/linux/fs.h	/^	struct buffer_head * b_prev_free;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head *	access:public
b_uptodate	include/linux/fs.h	/^	unsigned char b_uptodate;$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned char	access:public
b_wait	include/linux/fs.h	/^	struct task_struct * b_wait;$/;"	m	language:C++	struct:buffer_head	typeref:struct:task_struct *	access:public
back_link	include/linux/sched.h	/^	long	back_link;	\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
backup	Makefile	/^backup: clean$/;"	t	language:Make
bad_flp_intr	kernel/blk_drv/floppy.c	/^static void bad_flp_intr(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
bad_rw_intr	kernel/blk_drv/hd.c	/^static void bad_rw_intr(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
bad_sys_call	kernel/system_call.s	/^bad_sys_call:$/;"	l	language:Asm
base	boot/setup.s	/^	.word	0,0			! idt base=0L$/;"	g	language:R
base	boot/setup.s	/^	.word	512+gdt,0x9	! gdt base = 0X9xxxx$/;"	g	language:R
base	include/asm/system.h	/^#define _set_seg_desc(gate_addr,type,dpl,base,limit) {\\$/;"	D	language:C++	macro:_set_seg_desc
base	include/linux/sched.h	/^#define _set_base(addr,base) \\$/;"	D	language:C++	macro:_set_base
base	include/linux/sched.h	/^#define set_base(ldt,base) _set_base( ((char *)&(ldt)) , base )$/;"	D	language:C++	macro:set_base
base	kernel/vsprintf.c	/^#define do_div(n,base) ({ \\$/;"	D	language:C	macro:do_div
base	kernel/vsprintf.c	/^static char * number(char * str, int num, int base, int size, int precision$/;"	z	language:C	function:number	typeref:typename:int	file:
basename	fs/namei.c	/^	const char * basename;$/;"	l	language:C	function:dir_namei	typeref:typename:const char *	file:
basename	fs/namei.c	/^	const char * basename;$/;"	l	language:C	function:namei	typeref:typename:const char *	file:
basename	fs/namei.c	/^	const char * basename;$/;"	l	language:C	function:open_namei	typeref:typename:const char *	file:
basename	fs/namei.c	/^	const char * basename;$/;"	l	language:C	function:sys_link	typeref:typename:const char *	file:
basename	fs/namei.c	/^	const char * basename;$/;"	l	language:C	function:sys_mkdir	typeref:typename:const char *	file:
basename	fs/namei.c	/^	const char * basename;$/;"	l	language:C	function:sys_mknod	typeref:typename:const char *	file:
basename	fs/namei.c	/^	const char * basename;$/;"	l	language:C	function:sys_rmdir	typeref:typename:const char *	file:
basename	fs/namei.c	/^	const char * basename;$/;"	l	language:C	function:sys_unlink	typeref:typename:const char *	file:
bdesc	lib/malloc.c	/^	struct bucket_desc	*bdesc, *prev;$/;"	l	language:C	function:free_s	typeref:struct:bucket_desc *	file:
bdesc	lib/malloc.c	/^	struct bucket_desc	*bdesc;$/;"	l	language:C	function:malloc	typeref:struct:bucket_desc *	file:
bdesc	lib/malloc.c	/^	struct bucket_desc *bdesc, *first;$/;"	l	language:C	function:init_bucket_desc	typeref:struct:bucket_desc *	file:
bdir	lib/malloc.c	/^	struct _bucket_dir	*bdir;$/;"	l	language:C	function:free_s	typeref:struct:_bucket_dir *	file:
bdir	lib/malloc.c	/^	struct _bucket_dir	*bdir;$/;"	l	language:C	function:malloc	typeref:struct:_bucket_dir *	file:
beepcount	kernel/chr_drv/console.c	/^int beepcount = 0;$/;"	v	language:C	typeref:typename:int
beepcount	kernel/sched.c	/^	extern int beepcount;$/;"	x	language:C	function:do_timer	typeref:typename:int	file:
bh	boot/setup.s	/^	mov	[4],bx		! bh = display page$/;"	g	language:R
bh	fs/bitmap.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:free_block	typeref:struct:buffer_head *	file:
bh	fs/bitmap.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:free_inode	typeref:struct:buffer_head *	file:
bh	fs/bitmap.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:new_block	typeref:struct:buffer_head *	file:
bh	fs/bitmap.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:new_inode	typeref:struct:buffer_head *	file:
bh	fs/block_dev.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:block_read	typeref:struct:buffer_head *	file:
bh	fs/block_dev.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:block_write	typeref:struct:buffer_head *	file:
bh	fs/buffer.c	/^	struct buffer_head * bh, *tmp;$/;"	l	language:C	function:breada	typeref:struct:buffer_head *	file:
bh	fs/buffer.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:bread	typeref:struct:buffer_head *	file:
bh	fs/buffer.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:get_hash_table	typeref:struct:buffer_head *	file:
bh	fs/buffer.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:invalidate_buffers	typeref:struct:buffer_head *	file:
bh	fs/buffer.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:sync_dev	typeref:struct:buffer_head *	file:
bh	fs/buffer.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:sys_sync	typeref:struct:buffer_head *	file:
bh	fs/buffer.c	/^	struct buffer_head * bh[4];$/;"	l	language:C	function:bread_page	typeref:struct:buffer_head * [4]	file:
bh	fs/buffer.c	/^	struct buffer_head * tmp, * bh;$/;"	l	language:C	function:getblk	typeref:struct:buffer_head *	file:
bh	fs/buffer.c	/^#define BADNESS(bh) (((bh)->b_dirt<<1)+(bh)->b_lock)$/;"	D	language:C	macro:BADNESS
bh	fs/buffer.c	/^static inline void insert_into_queues(struct buffer_head * bh)$/;"	z	language:C	function:insert_into_queues	typeref:struct:buffer_head *	file:
bh	fs/buffer.c	/^static inline void remove_from_queues(struct buffer_head * bh)$/;"	z	language:C	function:remove_from_queues	typeref:struct:buffer_head *	file:
bh	fs/buffer.c	/^static inline void wait_on_buffer(struct buffer_head * bh)$/;"	z	language:C	function:wait_on_buffer	typeref:struct:buffer_head *	file:
bh	fs/exec.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:do_execve	typeref:struct:buffer_head *	file:
bh	fs/file_dev.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:file_read	typeref:struct:buffer_head *	file:
bh	fs/file_dev.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:file_write	typeref:struct:buffer_head *	file:
bh	fs/inode.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:_bmap	typeref:struct:buffer_head *	file:
bh	fs/inode.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:read_inode	typeref:struct:buffer_head *	file:
bh	fs/inode.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:write_inode	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh, *dir_block;$/;"	l	language:C	function:sys_mkdir	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:add_entry	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:empty_dir	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:find_entry	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:get_dir	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:namei	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:open_namei	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:sys_link	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:sys_mknod	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:sys_rmdir	typeref:struct:buffer_head *	file:
bh	fs/namei.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:sys_unlink	typeref:struct:buffer_head *	file:
bh	fs/super.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:read_super	typeref:struct:buffer_head *	file:
bh	fs/truncate.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:free_dind	typeref:struct:buffer_head *	file:
bh	fs/truncate.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:free_ind	typeref:struct:buffer_head *	file:
bh	kernel/blk_drv/blk.h	/^	struct buffer_head * bh;$/;"	m	language:C++	struct:request	typeref:struct:buffer_head *	access:public
bh	kernel/blk_drv/blk.h	/^extern inline void unlock_buffer(struct buffer_head * bh)$/;"	z	language:C++	function:unlock_buffer	typeref:struct:buffer_head *	file:
bh	kernel/blk_drv/hd.c	/^	struct buffer_head * bh;$/;"	l	language:C	function:sys_setup	typeref:struct:buffer_head *	file:
bh	kernel/blk_drv/ll_rw_blk.c	/^static inline void lock_buffer(struct buffer_head * bh)$/;"	z	language:C	function:lock_buffer	typeref:struct:buffer_head *	file:
bh	kernel/blk_drv/ll_rw_blk.c	/^static inline void unlock_buffer(struct buffer_head * bh)$/;"	z	language:C	function:unlock_buffer	typeref:struct:buffer_head *	file:
bh	kernel/blk_drv/ll_rw_blk.c	/^static void make_request(int major,int rw, struct buffer_head * bh)$/;"	z	language:C	function:make_request	typeref:struct:buffer_head *	file:
bh	kernel/blk_drv/ll_rw_blk.c	/^void ll_rw_block(int rw, struct buffer_head * bh)$/;"	z	language:C	function:ll_rw_block	typeref:struct:buffer_head *	file:
bh	kernel/blk_drv/ramdisk.c	/^	struct buffer_head *bh;$/;"	l	language:C	function:rd_load	typeref:struct:buffer_head *	file:
bitmap.o	fs/Makefile	/^bitmap.o : bitmap.c ..\/include\/string.h ..\/include\/linux\/sched.h \\$/;"	t	language:Make
bitnr	fs/super.c	/^#define set_bit(bitnr,addr) ({ \\$/;"	D	language:C	macro:set_bit
blk_dev	kernel/blk_drv/blk.h	/^extern struct blk_dev_struct blk_dev[NR_BLK_DEV];$/;"	x	language:C++	typeref:struct:blk_dev_struct[]
blk_dev	kernel/blk_drv/ll_rw_blk.c	/^struct blk_dev_struct blk_dev[NR_BLK_DEV] = {$/;"	v	language:C	typeref:struct:blk_dev_struct[]
blk_dev_init	kernel/blk_drv/ll_rw_blk.c	/^void blk_dev_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
blk_dev_struct	kernel/blk_drv/blk.h	/^struct blk_dev_struct {$/;"	s	language:C++
blk_dev_struct::current_request	kernel/blk_drv/blk.h	/^	struct request * current_request;$/;"	m	language:C++	struct:blk_dev_struct	typeref:struct:request *	access:public
blk_dev_struct::request_fn	kernel/blk_drv/blk.h	/^	void (*request_fn)(void);$/;"	m	language:C++	struct:blk_dev_struct	typeref:typename:void (*)(void)	access:public
blk_drv.a	kernel/blk_drv/Makefile	/^blk_drv.a: $(OBJS)$/;"	t	language:Make
block	fs/bitmap.c	/^void free_block(int dev, int block)$/;"	z	language:C	function:free_block	typeref:typename:int	file:
block	fs/block_dev.c	/^	int block = *pos >> BLOCK_SIZE_BITS;$/;"	l	language:C	function:block_read	typeref:typename:int	file:
block	fs/block_dev.c	/^	int block = *pos >> BLOCK_SIZE_BITS;$/;"	l	language:C	function:block_write	typeref:typename:int	file:
block	fs/buffer.c	/^#define _hashfn(dev,block) (((unsigned)(dev^block))%NR_HASH)$/;"	D	language:C	macro:_hashfn
block	fs/buffer.c	/^#define hash(dev,block) hash_table[_hashfn(dev,block)]$/;"	D	language:C	macro:hash
block	fs/buffer.c	/^static struct buffer_head * find_buffer(int dev, int block)$/;"	z	language:C	function:find_buffer	typeref:typename:int	file:
block	fs/buffer.c	/^struct buffer_head * bread(int dev,int block)$/;"	z	language:C	function:bread	typeref:typename:int	file:
block	fs/buffer.c	/^struct buffer_head * get_hash_table(int dev, int block)$/;"	z	language:C	function:get_hash_table	typeref:typename:int	file:
block	fs/buffer.c	/^struct buffer_head * getblk(int dev,int block)$/;"	z	language:C	function:getblk	typeref:typename:int	file:
block	fs/file_dev.c	/^	int block,c;$/;"	l	language:C	function:file_write	typeref:typename:int	file:
block	fs/inode.c	/^	int block;$/;"	l	language:C	function:read_inode	typeref:typename:int	file:
block	fs/inode.c	/^	int block;$/;"	l	language:C	function:write_inode	typeref:typename:int	file:
block	fs/inode.c	/^int bmap(struct m_inode * inode,int block)$/;"	z	language:C	function:bmap	typeref:typename:int	file:
block	fs/inode.c	/^int create_block(struct m_inode * inode, int block)$/;"	z	language:C	function:create_block	typeref:typename:int	file:
block	fs/inode.c	/^static int _bmap(struct m_inode * inode,int block,int create)$/;"	z	language:C	function:_bmap	typeref:typename:int	file:
block	fs/namei.c	/^	int block,i;$/;"	l	language:C	function:add_entry	typeref:typename:int	file:
block	fs/namei.c	/^	int block,i;$/;"	l	language:C	function:find_entry	typeref:typename:int	file:
block	fs/namei.c	/^	int nr,block;$/;"	l	language:C	function:empty_dir	typeref:typename:int	file:
block	fs/super.c	/^	int i,block;$/;"	l	language:C	function:read_super	typeref:typename:int	file:
block	fs/truncate.c	/^static void free_dind(int dev,int block)$/;"	z	language:C	function:free_dind	typeref:typename:int	file:
block	fs/truncate.c	/^static void free_ind(int dev,int block)$/;"	z	language:C	function:free_ind	typeref:typename:int	file:
block	kernel/blk_drv/floppy.c	/^	unsigned int block;$/;"	l	language:C	function:do_fd_request	typeref:typename:unsigned int	file:
block	kernel/blk_drv/hd.c	/^	unsigned int block,dev;$/;"	l	language:C	function:do_hd_request	typeref:typename:unsigned int	file:
block	kernel/blk_drv/ramdisk.c	/^	int		block = 256;	\/* Start at block 256 *\/$/;"	l	language:C	function:rd_load	typeref:typename:int	file:
block	mm/memory.c	/^	int block,i;$/;"	l	language:C	function:do_no_page	typeref:typename:int	file:
block_dev.o	fs/Makefile	/^block_dev.o : block_dev.c ..\/include\/errno.h ..\/include\/linux\/sched.h \\$/;"	t	language:Make
block_read	fs/block_dev.c	/^int block_read(int dev, unsigned long * pos, char * buf, int count)$/;"	f	language:C	typeref:typename:int	signature:(int dev,unsigned long * pos,char * buf,int count)
block_write	fs/block_dev.c	/^int block_write(int dev, long * pos, char * buf, int count)$/;"	f	language:C	typeref:typename:int	signature:(int dev,long * pos,char * buf,int count)
blocked	include/linux/sched.h	/^	long blocked;	\/* bitmap of masked signals *\/$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
blocked	kernel/system_call.s	/^blocked = (33*16)$/;"	d	language:Asm
bmap	fs/inode.c	/^int bmap(struct m_inode * inode,int block)$/;"	f	language:C	typeref:typename:int	signature:(struct m_inode * inode,int block)
boot/bootsect	Makefile	/^boot\/bootsect:	boot\/bootsect.s$/;"	t	language:Make
boot/head.o	Makefile	/^boot\/head.o: boot\/head.s$/;"	t	language:Make
boot/setup	Makefile	/^boot\/setup: boot\/setup.s$/;"	t	language:Make
boot_ind	include/linux/hdreg.h	/^	unsigned char boot_ind;		\/* 0x80 - active (unused) *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
bottom	kernel/chr_drv/console.c	/^static unsigned long	top,bottom;$/;"	v	language:C	typeref:typename:unsigned long	file:
bread	fs/buffer.c	/^struct buffer_head * bread(int dev,int block)$/;"	f	language:C	typeref:struct:buffer_head *	signature:(int dev,int block)
bread_page	fs/buffer.c	/^void bread_page(unsigned long address,int dev,int b[4])$/;"	f	language:C	typeref:typename:void	signature:(unsigned long address,int dev,int b[4])
breada	fs/buffer.c	/^struct buffer_head * breada(int dev,int first, ...)$/;"	f	language:C	typeref:struct:buffer_head *	signature:(int dev,int first,...)
brelse	fs/buffer.c	/^void brelse(struct buffer_head * buf)$/;"	f	language:C	typeref:typename:void	signature:(struct buffer_head * buf)
brk	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
btype	include/unistd.h	/^#define _syscall2(type,name,atype,a,btype,b) \\$/;"	D	language:C++	macro:_syscall2
btype	include/unistd.h	/^#define _syscall3(type,name,atype,a,btype,b,ctype,c) \\$/;"	D	language:C++	macro:_syscall3
bucket_desc	lib/malloc.c	/^struct bucket_desc {	\/* 16 bytes *\/$/;"	s	language:C	file:
bucket_desc::bucket_size	lib/malloc.c	/^	unsigned short		bucket_size;$/;"	m	language:C	struct:bucket_desc	typeref:typename:unsigned short	file:	access:public
bucket_desc::freeptr	lib/malloc.c	/^	void			*freeptr;$/;"	m	language:C	struct:bucket_desc	typeref:typename:void *	file:	access:public
bucket_desc::next	lib/malloc.c	/^	struct bucket_desc	*next;$/;"	m	language:C	struct:bucket_desc	typeref:struct:bucket_desc *	file:	access:public
bucket_desc::page	lib/malloc.c	/^	void			*page;$/;"	m	language:C	struct:bucket_desc	typeref:typename:void *	file:	access:public
bucket_desc::refcnt	lib/malloc.c	/^	unsigned short		refcnt;$/;"	m	language:C	struct:bucket_desc	typeref:typename:unsigned short	file:	access:public
bucket_dir	lib/malloc.c	/^struct _bucket_dir bucket_dir[] = {$/;"	v	language:C	typeref:struct:_bucket_dir[]
bucket_size	lib/malloc.c	/^	unsigned short		bucket_size;$/;"	m	language:C	struct:bucket_desc	typeref:typename:unsigned short	file:	access:public
buf	fs/block_dev.c	/^int block_read(int dev, unsigned long * pos, char * buf, int count)$/;"	z	language:C	function:block_read	typeref:typename:char *	file:
buf	fs/block_dev.c	/^int block_write(int dev, long * pos, char * buf, int count)$/;"	z	language:C	function:block_write	typeref:typename:char *	file:
buf	fs/buffer.c	/^void brelse(struct buffer_head * buf)$/;"	z	language:C	function:brelse	typeref:struct:buffer_head *	file:
buf	fs/char_dev.c	/^int rw_char(int rw,int dev, char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_char	typeref:typename:char *	file:
buf	fs/char_dev.c	/^static int rw_kmem(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_kmem	typeref:typename:char *	file:
buf	fs/char_dev.c	/^static int rw_mem(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_mem	typeref:typename:char *	file:
buf	fs/char_dev.c	/^static int rw_memory(int rw, unsigned minor, char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_memory	typeref:typename:char *	file:
buf	fs/char_dev.c	/^static int rw_port(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_port	typeref:typename:char *	file:
buf	fs/char_dev.c	/^static int rw_ram(int rw,char * buf, int count, off_t *pos)$/;"	z	language:C	function:rw_ram	typeref:typename:char *	file:
buf	fs/char_dev.c	/^static int rw_tty(int rw,unsigned minor,char * buf,int count, off_t * pos)$/;"	z	language:C	function:rw_tty	typeref:typename:char *	file:
buf	fs/char_dev.c	/^static int rw_ttyx(int rw,unsigned minor,char * buf,int count,off_t * pos)$/;"	z	language:C	function:rw_ttyx	typeref:typename:char *	file:
buf	fs/exec.c	/^		char buf[1023], *cp, *interp, *i_name, *i_arg;$/;"	l	language:C	function:do_execve	typeref:typename:char[1023]	file:
buf	fs/file_dev.c	/^int file_read(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	z	language:C	function:file_read	typeref:typename:char *	file:
buf	fs/file_dev.c	/^int file_write(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	z	language:C	function:file_write	typeref:typename:char *	file:
buf	fs/pipe.c	/^int read_pipe(struct m_inode * inode, char * buf, int count)$/;"	z	language:C	function:read_pipe	typeref:typename:char *	file:
buf	fs/pipe.c	/^int write_pipe(struct m_inode * inode, char * buf, int count)$/;"	z	language:C	function:write_pipe	typeref:typename:char *	file:
buf	fs/read_write.c	/^int sys_read(unsigned int fd,char * buf,int count)$/;"	z	language:C	function:sys_read	typeref:typename:char *	file:
buf	fs/read_write.c	/^int sys_write(unsigned int fd,char * buf,int count)$/;"	z	language:C	function:sys_write	typeref:typename:char *	file:
buf	include/linux/tty.h	/^	char buf[TTY_BUF_SIZE];$/;"	m	language:C++	struct:tty_queue	typeref:typename:char[]	access:public
buf	kernel/blk_drv/hd.c	/^#define port_read(port,buf,nr) \\$/;"	D	language:C	macro:port_read
buf	kernel/blk_drv/hd.c	/^#define port_write(port,buf,nr) \\$/;"	D	language:C	macro:port_write
buf	kernel/chr_drv/keyboard.S	/^buf = 16$/;"	d	language:Asm
buf	kernel/chr_drv/rs_io.s	/^buf = 16$/;"	d	language:Asm
buf	kernel/chr_drv/tty_io.c	/^int tty_read(unsigned channel, char * buf, int nr)$/;"	z	language:C	function:tty_read	typeref:typename:char *	file:
buf	kernel/chr_drv/tty_io.c	/^int tty_write(unsigned channel, char * buf, int nr)$/;"	z	language:C	function:tty_write	typeref:typename:char *	file:
buf	kernel/printk.c	/^static char buf[1024];$/;"	v	language:C	typeref:typename:char[1024]	file:
buf	kernel/vsprintf.c	/^int vsprintf(char *buf, const char *fmt, va_list args)$/;"	z	language:C	function:vsprintf	typeref:typename:char *	file:
buf	tools/build.c	/^	char buf[1024];$/;"	l	language:C	function:main	typeref:typename:char[1024]	file:
buffer	kernel/blk_drv/blk.h	/^	char * buffer;$/;"	m	language:C++	struct:request	typeref:typename:char *	access:public
buffer.o	fs/Makefile	/^buffer.o : buffer.c ..\/include\/stdarg.h ..\/include\/linux\/config.h \\$/;"	t	language:Make
buffer_block	include/linux/fs.h	/^typedef char buffer_block[BLOCK_SIZE];$/;"	t	language:C++	typeref:typename:char[BLOCK_SIZE]
buffer_end	fs/buffer.c	/^void buffer_init(long buffer_end)$/;"	z	language:C	function:buffer_init	typeref:typename:long	file:
buffer_head	include/linux/fs.h	/^struct buffer_head {$/;"	s	language:C++
buffer_head::b_blocknr	include/linux/fs.h	/^	unsigned long b_blocknr;	\/* block number *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned long	access:public
buffer_head::b_count	include/linux/fs.h	/^	unsigned char b_count;		\/* users using this block *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned char	access:public
buffer_head::b_data	include/linux/fs.h	/^	char * b_data;			\/* pointer to data block (1024 bytes) *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:char *	access:public
buffer_head::b_dev	include/linux/fs.h	/^	unsigned short b_dev;		\/* device (0 = free) *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned short	access:public
buffer_head::b_dirt	include/linux/fs.h	/^	unsigned char b_dirt;		\/* 0-clean,1-dirty *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned char	access:public
buffer_head::b_lock	include/linux/fs.h	/^	unsigned char b_lock;		\/* 0 - ok, 1 -locked *\/$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned char	access:public
buffer_head::b_next	include/linux/fs.h	/^	struct buffer_head * b_next;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head *	access:public
buffer_head::b_next_free	include/linux/fs.h	/^	struct buffer_head * b_next_free;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head *	access:public
buffer_head::b_prev	include/linux/fs.h	/^	struct buffer_head * b_prev;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head *	access:public
buffer_head::b_prev_free	include/linux/fs.h	/^	struct buffer_head * b_prev_free;$/;"	m	language:C++	struct:buffer_head	typeref:struct:buffer_head *	access:public
buffer_head::b_uptodate	include/linux/fs.h	/^	unsigned char b_uptodate;$/;"	m	language:C++	struct:buffer_head	typeref:typename:unsigned char	access:public
buffer_head::b_wait	include/linux/fs.h	/^	struct task_struct * b_wait;$/;"	m	language:C++	struct:buffer_head	typeref:struct:task_struct *	access:public
buffer_init	fs/buffer.c	/^void buffer_init(long buffer_end)$/;"	f	language:C	typeref:typename:void	signature:(long buffer_end)
buffer_memory_end	init/main.c	/^static long buffer_memory_end = 0;$/;"	v	language:C	typeref:typename:long	file:
buffer_wait	fs/buffer.c	/^static struct task_struct * buffer_wait = NULL;$/;"	v	language:C	typeref:struct:task_struct *	file:
byte	kernel/blk_drv/floppy.c	/^static void output_byte(char byte)$/;"	z	language:C	function:output_byte	typeref:typename:char	file:
bytes	boot/bootsect.s	/^! 0x3000 is 0x30000 bytes = 196kB, more than enough for current$/;"	g	language:R
c	fs/file_dev.c	/^	int block,c;$/;"	l	language:C	function:file_write	typeref:typename:int	file:
c	fs/namei.c	/^	char c;$/;"	l	language:C	function:dir_namei	typeref:typename:char	file:
c	fs/namei.c	/^	char c;$/;"	l	language:C	function:get_dir	typeref:typename:char	file:
c	include/ctype.h	/^#define isalnum(c) ((_ctype+1)[c]&(_U|_L|_D))$/;"	D	language:C++	macro:isalnum
c	include/ctype.h	/^#define isalpha(c) ((_ctype+1)[c]&(_U|_L))$/;"	D	language:C++	macro:isalpha
c	include/ctype.h	/^#define isascii(c) (((unsigned) c)<=0x7f)$/;"	D	language:C++	macro:isascii
c	include/ctype.h	/^#define iscntrl(c) ((_ctype+1)[c]&(_C))$/;"	D	language:C++	macro:iscntrl
c	include/ctype.h	/^#define isdigit(c) ((_ctype+1)[c]&(_D))$/;"	D	language:C++	macro:isdigit
c	include/ctype.h	/^#define isgraph(c) ((_ctype+1)[c]&(_P|_U|_L|_D))$/;"	D	language:C++	macro:isgraph
c	include/ctype.h	/^#define islower(c) ((_ctype+1)[c]&(_L))$/;"	D	language:C++	macro:islower
c	include/ctype.h	/^#define isprint(c) ((_ctype+1)[c]&(_P|_U|_L|_D|_SP))$/;"	D	language:C++	macro:isprint
c	include/ctype.h	/^#define ispunct(c) ((_ctype+1)[c]&(_P))$/;"	D	language:C++	macro:ispunct
c	include/ctype.h	/^#define isspace(c) ((_ctype+1)[c]&(_S))$/;"	D	language:C++	macro:isspace
c	include/ctype.h	/^#define isupper(c) ((_ctype+1)[c]&(_U))$/;"	D	language:C++	macro:isupper
c	include/ctype.h	/^#define isxdigit(c) ((_ctype+1)[c]&(_D|_X))$/;"	D	language:C++	macro:isxdigit
c	include/ctype.h	/^#define toascii(c) (((unsigned) c)&0x7f)$/;"	D	language:C++	macro:toascii
c	include/ctype.h	/^#define tolower(c) (_ctmp=c,isupper(_ctmp)?_ctmp-('A'-'a'):_ctmp)$/;"	D	language:C++	macro:tolower
c	include/ctype.h	/^#define toupper(c) (_ctmp=c,islower(_ctmp)?_ctmp-('a'-'A'):_ctmp)$/;"	D	language:C++	macro:toupper
c	include/linux/tty.h	/^#define GETCH(queue,c) \\$/;"	D	language:C++	macro:GETCH
c	include/linux/tty.h	/^#define PUTCH(c,queue) \\$/;"	D	language:C++	macro:PUTCH
c	include/string.h	/^extern inline char * strchr(const char * s,char c)$/;"	z	language:C++	function:strchr	typeref:typename:char	file:
c	include/string.h	/^extern inline char * strrchr(const char * s,char c)$/;"	z	language:C++	function:strrchr	typeref:typename:char	file:
c	include/string.h	/^extern inline void * memchr(const void * cs,char c,int count)$/;"	z	language:C++	function:memchr	typeref:typename:char	file:
c	include/string.h	/^extern inline void * memset(void * s,char c,int count)$/;"	z	language:C++	function:memset	typeref:typename:char	file:
c	include/unistd.h	/^#define _syscall3(type,name,atype,a,btype,b,ctype,c) \\$/;"	D	language:C++	macro:_syscall3
c	kernel/chr_drv/console.c	/^	char c;$/;"	l	language:C	function:con_write	typeref:typename:char	file:
c	kernel/chr_drv/tty_io.c	/^	char c, * b=buf;$/;"	l	language:C	function:tty_read	typeref:typename:char	file:
c	kernel/chr_drv/tty_io.c	/^	char c, *b=buf;$/;"	l	language:C	function:tty_write	typeref:typename:char	file:
c	kernel/chr_drv/tty_io.c	/^	signed char c;$/;"	l	language:C	function:copy_to_cooked	typeref:typename:signed char	file:
c	kernel/sched.c	/^	int i,next,c;$/;"	l	language:C	function:schedule	typeref:typename:int	file:
c	kernel/vsprintf.c	/^	char c,sign,tmp[36];$/;"	l	language:C	function:number	typeref:typename:char	file:
c	kernel/vsprintf.c	/^#define is_digit(c)	((c) >= '0' && (c) <= '9')$/;"	D	language:C	macro:is_digit
c	tools/build.c	/^	int i,c,id;$/;"	l	language:C	function:main	typeref:typename:int	file:
c_cc	include/termios.h	/^	unsigned char c_cc[NCCS];	\/* control characters *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned char[]	access:public
c_cc	include/termios.h	/^	unsigned char c_cc[NCC];	\/* control characters *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned char[]	access:public
c_cflag	include/termios.h	/^	unsigned long c_cflag;		\/* control mode flags *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned long	access:public
c_cflag	include/termios.h	/^	unsigned short c_cflag;		\/* control mode flags *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned short	access:public
c_iflag	include/termios.h	/^	unsigned long c_iflag;		\/* input mode flags *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned long	access:public
c_iflag	include/termios.h	/^	unsigned short c_iflag;		\/* input mode flags *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned short	access:public
c_lflag	include/termios.h	/^	unsigned long c_lflag;		\/* local mode flags *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned long	access:public
c_lflag	include/termios.h	/^	unsigned short c_lflag;		\/* local mode flags *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned short	access:public
c_line	include/termios.h	/^	unsigned char c_line;		\/* line discipline *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned char	access:public
c_line	include/termios.h	/^	unsigned char c_line;		\/* line discipline *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned char	access:public
c_oflag	include/termios.h	/^	unsigned long c_oflag;		\/* output mode flags *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned long	access:public
c_oflag	include/termios.h	/^	unsigned short c_oflag;		\/* output mode flags *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned short	access:public
calc_mem	mm/memory.c	/^void calc_mem(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
call_addr	fs/char_dev.c	/^	crw_ptr call_addr;$/;"	l	language:C	function:rw_char	typeref:typename:crw_ptr	file:
callable	kernel/blk_drv/hd.c	/^	static int callable = 1;$/;"	l	language:C	function:sys_setup	typeref:typename:int	file:
caps	kernel/chr_drv/keyboard.S	/^caps:	testb $0x80,mode$/;"	l	language:Asm
chain	lib/malloc.c	/^	struct bucket_desc	*chain;$/;"	m	language:C	struct:_bucket_dir	typeref:struct:bucket_desc *	file:	access:public
change_ldt	fs/exec.c	/^static unsigned long change_ldt(unsigned long text_size,unsigned long * page)$/;"	f	language:C	typeref:typename:unsigned long	file:	signature:(unsigned long text_size,unsigned long * page)
change_speed	kernel/chr_drv/tty_ioctl.c	/^static void change_speed(struct tty_struct * tty)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct tty_struct * tty)
channel	kernel/chr_drv/tty_io.c	/^int tty_read(unsigned channel, char * buf, int nr)$/;"	z	language:C	function:tty_read	typeref:typename:unsigned	file:
channel	kernel/chr_drv/tty_io.c	/^int tty_write(unsigned channel, char * buf, int nr)$/;"	z	language:C	function:tty_write	typeref:typename:unsigned	file:
char_dev.o	fs/Makefile	/^char_dev.o : char_dev.c ..\/include\/errno.h ..\/include\/sys\/types.h \\$/;"	t	language:Make
chars	fs/block_dev.c	/^	int chars;$/;"	l	language:C	function:block_read	typeref:typename:int	file:
chars	fs/block_dev.c	/^	int chars;$/;"	l	language:C	function:block_write	typeref:typename:int	file:
chars	fs/file_dev.c	/^	int left,chars,nr;$/;"	l	language:C	function:file_read	typeref:typename:int	file:
chars	fs/pipe.c	/^	int chars, size, read = 0;$/;"	l	language:C	function:read_pipe	typeref:typename:int	file:
chars	fs/pipe.c	/^	int chars, size, written = 0;$/;"	l	language:C	function:write_pipe	typeref:typename:int	file:
check_disk_change	fs/buffer.c	/^void check_disk_change(int dev)$/;"	f	language:C	typeref:typename:void	signature:(int dev)
chr_dev_init	kernel/chr_drv/tty_io.c	/^void chr_dev_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
chr_drv.a	kernel/chr_drv/Makefile	/^chr_drv.a: $(OBJS)$/;"	t	language:Make
clean	Makefile	/^clean:$/;"	t	language:Make
clean	fs/Makefile	/^clean:$/;"	t	language:Make
clean	kernel/Makefile	/^clean:$/;"	t	language:Make
clean	kernel/blk_drv/Makefile	/^clean:$/;"	t	language:Make
clean	kernel/chr_drv/Makefile	/^clean:$/;"	t	language:Make
clean	kernel/math/Makefile	/^clean:$/;"	t	language:Make
clean	lib/Makefile	/^clean:$/;"	t	language:Make
clean	mm/Makefile	/^clean:$/;"	t	language:Make
clear_bit	fs/bitmap.c	/^#define clear_bit(/;"	d	language:C	file:	signature:(nr,addr)
clear_block	fs/bitmap.c	/^#define clear_block(/;"	d	language:C	file:	signature:(addr)
cli	include/asm/system.h	/^#define cli() __asm__ ("cli"/;"	d	language:C++	signature:()
clock_t	include/time.h	/^typedef long clock_t;$/;"	t	language:C++	typeref:typename:long
close.o	lib/Makefile	/^close.s close.o : close.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
close.s	lib/Makefile	/^close.s close.o : close.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
close_on_exec	include/linux/sched.h	/^	unsigned long close_on_exec;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
cmd	fs/fcntl.c	/^int sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	z	language:C	function:sys_fcntl	typeref:typename:unsigned int	file:
cmd	fs/ioctl.c	/^int sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	z	language:C	function:sys_ioctl	typeref:typename:unsigned int	file:
cmd	kernel/blk_drv/blk.h	/^	int cmd;		\/* READ or WRITE *\/$/;"	m	language:C++	struct:request	typeref:typename:int	access:public
cmd	kernel/blk_drv/hd.c	/^		unsigned int head,unsigned int cyl,unsigned int cmd,$/;"	z	language:C	function:hd_out	typeref:typename:unsigned int	file:
cmd	kernel/chr_drv/tty_ioctl.c	/^int tty_ioctl(int dev, int cmd, int arg)$/;"	z	language:C	function:tty_ioctl	typeref:typename:int	file:
cmos_disks	kernel/blk_drv/hd.c	/^	unsigned char cmos_disks;$/;"	l	language:C	function:sys_setup	typeref:typename:unsigned char	file:
code	kernel/exit.c	/^	int flag, code;$/;"	l	language:C	function:sys_waitpid	typeref:typename:int	file:
code	kernel/exit.c	/^int do_exit(long code)$/;"	z	language:C	function:do_exit	typeref:typename:long	file:
code_base	fs/exec.c	/^	unsigned long code_limit,data_limit,code_base,data_base;$/;"	l	language:C	function:change_ldt	typeref:typename:unsigned long	file:
code_limit	fs/exec.c	/^	unsigned long code_limit,data_limit,code_base,data_base;$/;"	l	language:C	function:change_ldt	typeref:typename:unsigned long	file:
code_limit	kernel/fork.c	/^	unsigned long old_code_base,new_code_base,code_limit;$/;"	l	language:C	function:copy_mem	typeref:typename:unsigned long	file:
command	kernel/blk_drv/floppy.c	/^static unsigned char command = 0;$/;"	v	language:C	typeref:typename:unsigned char	file:
con_init	kernel/chr_drv/console.c	/^void con_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
con_write	kernel/chr_drv/console.c	/^void con_write(struct tty_struct * tty)$/;"	f	language:C	typeref:typename:void	signature:(struct tty_struct * tty)
console.o	kernel/chr_drv/Makefile	/^console.s console.o : console.c ..\/..\/include\/linux\/sched.h \\$/;"	t	language:Make
console.s	kernel/chr_drv/Makefile	/^console.s console.o : console.c ..\/..\/include\/linux\/sched.h \\$/;"	t	language:Make
controller_ready	kernel/blk_drv/hd.c	/^static int controller_ready(void)$/;"	f	language:C	typeref:typename:int	file:	signature:(void)
copy_buffer	kernel/blk_drv/floppy.c	/^#define copy_buffer(/;"	d	language:C	file:	signature:(from,to)
copy_mem	kernel/fork.c	/^int copy_mem(int nr,struct task_struct * p)$/;"	f	language:C	typeref:typename:int	signature:(int nr,struct task_struct * p)
copy_page	mm/memory.c	/^#define copy_page(/;"	d	language:C	file:	signature:(from,to)
copy_page_tables	mm/memory.c	/^int copy_page_tables(unsigned long from,unsigned long to,long size)$/;"	f	language:C	typeref:typename:int	signature:(unsigned long from,unsigned long to,long size)
copy_process	kernel/fork.c	/^int copy_process(int nr,long ebp,long edi,long esi,long gs,long none,$/;"	f	language:C	typeref:typename:int	signature:(int nr,long ebp,long edi,long esi,long gs,long none,long ebx,long ecx,long edx,long fs,long es,long ds,long eip,long cs,long eflags,long esp,long ss)
copy_strings	fs/exec.c	/^static unsigned long copy_strings(int argc,char ** argv,unsigned long *page,$/;"	f	language:C	typeref:typename:unsigned long	file:	signature:(int argc,char ** argv,unsigned long * page,unsigned long p,int from_kmem)
copy_to_cooked	kernel/chr_drv/tty_io.c	/^void copy_to_cooked(struct tty_struct * tty)$/;"	f	language:C	typeref:typename:void	signature:(struct tty_struct * tty)
count	fs/block_dev.c	/^int block_read(int dev, unsigned long * pos, char * buf, int count)$/;"	z	language:C	function:block_read	typeref:typename:int	file:
count	fs/block_dev.c	/^int block_write(int dev, long * pos, char * buf, int count)$/;"	z	language:C	function:block_write	typeref:typename:int	file:
count	fs/char_dev.c	/^int rw_char(int rw,int dev, char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_char	typeref:typename:int	file:
count	fs/char_dev.c	/^static int rw_kmem(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_kmem	typeref:typename:int	file:
count	fs/char_dev.c	/^static int rw_mem(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_mem	typeref:typename:int	file:
count	fs/char_dev.c	/^static int rw_memory(int rw, unsigned minor, char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_memory	typeref:typename:int	file:
count	fs/char_dev.c	/^static int rw_port(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_port	typeref:typename:int	file:
count	fs/char_dev.c	/^static int rw_ram(int rw,char * buf, int count, off_t *pos)$/;"	z	language:C	function:rw_ram	typeref:typename:int	file:
count	fs/char_dev.c	/^static int rw_tty(int rw,unsigned minor,char * buf,int count, off_t * pos)$/;"	z	language:C	function:rw_tty	typeref:typename:int	file:
count	fs/char_dev.c	/^static int rw_ttyx(int rw,unsigned minor,char * buf,int count,off_t * pos)$/;"	z	language:C	function:rw_ttyx	typeref:typename:int	file:
count	fs/exec.c	/^static int count(char ** argv)$/;"	f	language:C	typeref:typename:int	file:	signature:(char ** argv)
count	fs/file_dev.c	/^int file_read(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	z	language:C	function:file_read	typeref:typename:int	file:
count	fs/file_dev.c	/^int file_write(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	z	language:C	function:file_write	typeref:typename:int	file:
count	fs/pipe.c	/^int read_pipe(struct m_inode * inode, char * buf, int count)$/;"	z	language:C	function:read_pipe	typeref:typename:int	file:
count	fs/pipe.c	/^int write_pipe(struct m_inode * inode, char * buf, int count)$/;"	z	language:C	function:write_pipe	typeref:typename:int	file:
count	fs/read_write.c	/^int sys_read(unsigned int fd,char * buf,int count)$/;"	z	language:C	function:sys_read	typeref:typename:int	file:
count	fs/read_write.c	/^int sys_write(unsigned int fd,char * buf,int count)$/;"	z	language:C	function:sys_write	typeref:typename:int	file:
count	include/string.h	/^extern inline char * strncat(char * dest,const char * src,int count)$/;"	z	language:C++	function:strncat	typeref:typename:int	file:
count	include/string.h	/^extern inline char * strncpy(char * dest,const char *src,int count)$/;"	z	language:C++	function:strncpy	typeref:typename:int	file:
count	include/string.h	/^extern inline int memcmp(const void * cs,const void * ct,int count)$/;"	z	language:C++	function:memcmp	typeref:typename:int	file:
count	include/string.h	/^extern inline int strncmp(const char * cs,const char * ct,int count)$/;"	z	language:C++	function:strncmp	typeref:typename:int	file:
count	include/string.h	/^extern inline void * memchr(const void * cs,char c,int count)$/;"	z	language:C++	function:memchr	typeref:typename:int	file:
count	include/string.h	/^extern inline void * memset(void * s,char c,int count)$/;"	z	language:C++	function:memset	typeref:typename:int	file:
counter	include/linux/sched.h	/^	long counter;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
counter	kernel/blk_drv/floppy.c	/^	int counter;$/;"	l	language:C	function:output_byte	typeref:typename:int	file:
counter	kernel/blk_drv/floppy.c	/^	int i = 0, counter, status;$/;"	l	language:C	function:result	typeref:typename:int	file:
counter	kernel/system_call.s	/^counter	= 4$/;"	d	language:Asm
cp	fs/exec.c	/^		char buf[1023], *cp, *interp, *i_name, *i_arg;$/;"	l	language:C	function:do_execve	typeref:typename:char *	file:
cp	kernel/blk_drv/ramdisk.c	/^	char		*cp;		\/* Move pointer *\/$/;"	l	language:C	function:rd_load	typeref:typename:char *	file:
cp	kernel/blk_drv/ramdisk.c	/^	char	*cp;$/;"	l	language:C	function:rd_init	typeref:typename:char *	file:
cp	lib/malloc.c	/^		char		*cp;$/;"	l	language:C	function:malloc	typeref:typename:char *	file:
cp_stat	fs/stat.c	/^static void cp_stat(struct m_inode * inode, struct stat * statbuf)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct m_inode * inode,struct stat * statbuf)
cpl	kernel/sched.c	/^void do_timer(long cpl)$/;"	z	language:C	function:do_timer	typeref:typename:long	file:
cr	kernel/chr_drv/console.c	/^static void cr(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
cr3	include/linux/sched.h	/^	long	cr3;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
create	fs/inode.c	/^static int _bmap(struct m_inode * inode,int block,int create)$/;"	z	language:C	function:_bmap	typeref:typename:int	file:
create_block	fs/inode.c	/^int create_block(struct m_inode * inode, int block)$/;"	f	language:C	typeref:typename:int	signature:(struct m_inode * inode,int block)
create_tables	fs/exec.c	/^static unsigned long * create_tables(char * p,int argc,int envc)$/;"	f	language:C	typeref:typename:unsigned long *	file:	signature:(char * p,int argc,int envc)
crw_table	fs/char_dev.c	/^static crw_ptr crw_table[]={$/;"	v	language:C	typeref:typename:crw_ptr[]	file:
cs	include/linux/sched.h	/^	long	cs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
cs	include/string.h	/^extern inline char * strpbrk(const char * cs,const char * ct)$/;"	z	language:C++	function:strpbrk	typeref:typename:const char *	file:
cs	include/string.h	/^extern inline char * strstr(const char * cs,const char * ct)$/;"	z	language:C++	function:strstr	typeref:typename:const char *	file:
cs	include/string.h	/^extern inline int memcmp(const void * cs,const void * ct,int count)$/;"	z	language:C++	function:memcmp	typeref:typename:const void *	file:
cs	include/string.h	/^extern inline int strcmp(const char * cs,const char * ct)$/;"	z	language:C++	function:strcmp	typeref:typename:const char *	file:
cs	include/string.h	/^extern inline int strcspn(const char * cs, const char * ct)$/;"	z	language:C++	function:strcspn	typeref:typename:const char *	file:
cs	include/string.h	/^extern inline int strncmp(const char * cs,const char * ct,int count)$/;"	z	language:C++	function:strncmp	typeref:typename:const char *	file:
cs	include/string.h	/^extern inline int strspn(const char * cs, const char * ct)$/;"	z	language:C++	function:strspn	typeref:typename:const char *	file:
cs	include/string.h	/^extern inline void * memchr(const void * cs,char c,int count)$/;"	z	language:C++	function:memchr	typeref:typename:const void *	file:
cs	kernel/fork.c	/^		long eip,long cs,long eflags,long esp,long ss)$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
cs	kernel/math/math_emulate.c	/^	unsigned long eip,unsigned short cs,unsigned long eflags,$/;"	z	language:C	function:math_emulate	typeref:typename:unsigned short	file:
cs	kernel/signal.c	/^	long eip, long cs, long eflags,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
csi_J	kernel/chr_drv/console.c	/^static void csi_J(int par)$/;"	f	language:C	typeref:typename:void	file:	signature:(int par)
csi_K	kernel/chr_drv/console.c	/^static void csi_K(int par)$/;"	f	language:C	typeref:typename:void	file:	signature:(int par)
csi_L	kernel/chr_drv/console.c	/^static void csi_L(unsigned int nr)$/;"	f	language:C	typeref:typename:void	file:	signature:(unsigned int nr)
csi_M	kernel/chr_drv/console.c	/^static void csi_M(unsigned int nr)$/;"	f	language:C	typeref:typename:void	file:	signature:(unsigned int nr)
csi_P	kernel/chr_drv/console.c	/^static void csi_P(unsigned int nr)$/;"	f	language:C	typeref:typename:void	file:	signature:(unsigned int nr)
csi_at	kernel/chr_drv/console.c	/^static void csi_at(unsigned int nr)$/;"	f	language:C	typeref:typename:void	file:	signature:(unsigned int nr)
csi_m	kernel/chr_drv/console.c	/^void csi_m(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
cstime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
ct	include/string.h	/^extern inline char * strpbrk(const char * cs,const char * ct)$/;"	z	language:C++	function:strpbrk	typeref:typename:const char *	file:
ct	include/string.h	/^extern inline char * strstr(const char * cs,const char * ct)$/;"	z	language:C++	function:strstr	typeref:typename:const char *	file:
ct	include/string.h	/^extern inline char * strtok(char * s,const char * ct)$/;"	z	language:C++	function:strtok	typeref:typename:const char *	file:
ct	include/string.h	/^extern inline int memcmp(const void * cs,const void * ct,int count)$/;"	z	language:C++	function:memcmp	typeref:typename:const void *	file:
ct	include/string.h	/^extern inline int strcmp(const char * cs,const char * ct)$/;"	z	language:C++	function:strcmp	typeref:typename:const char *	file:
ct	include/string.h	/^extern inline int strcspn(const char * cs, const char * ct)$/;"	z	language:C++	function:strcspn	typeref:typename:const char *	file:
ct	include/string.h	/^extern inline int strncmp(const char * cs,const char * ct,int count)$/;"	z	language:C++	function:strncmp	typeref:typename:const char *	file:
ct	include/string.h	/^extern inline int strspn(const char * cs, const char * ct)$/;"	z	language:C++	function:strspn	typeref:typename:const char *	file:
ctl	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
ctrl	kernel/chr_drv/keyboard.S	/^ctrl:	movb $0x04,%al$/;"	l	language:Asm
ctype	include/unistd.h	/^#define _syscall3(type,name,atype,a,btype,b,ctype,c) \\$/;"	D	language:C++	macro:_syscall3
ctype.o	lib/Makefile	/^ctype.s ctype.o : ctype.c ..\/include\/ctype.h $/;"	t	language:Make
ctype.s	lib/Makefile	/^ctype.s ctype.o : ctype.c ..\/include\/ctype.h $/;"	t	language:Make
cur	kernel/chr_drv/keyboard.S	/^cur:	movb cur_table(%eax),%al$/;"	l	language:Asm
cur2	kernel/chr_drv/keyboard.S	/^cur2:	cmpb $0x01,e0		\/* e0 forces cursor movement *\/$/;"	l	language:Asm
cur_rate	kernel/blk_drv/floppy.c	/^static int cur_rate = -1;$/;"	v	language:C	typeref:typename:int	file:
cur_spec1	kernel/blk_drv/floppy.c	/^static int cur_spec1 = -1;$/;"	v	language:C	typeref:typename:int	file:
cur_table	kernel/chr_drv/keyboard.S	/^cur_table:$/;"	l	language:Asm
current	include/linux/sched.h	/^extern struct task_struct *current;$/;"	x	language:C++	typeref:struct:task_struct *
current	kernel/sched.c	/^struct task_struct *current = &(init_task.task);$/;"	v	language:C	typeref:struct:task_struct *
current_DOR	kernel/blk_drv/floppy.c	/^extern unsigned char current_DOR;$/;"	x	language:C	typeref:typename:unsigned char
current_DOR	kernel/sched.c	/^unsigned char current_DOR = 0x0C;$/;"	v	language:C	typeref:typename:unsigned char
current_drive	kernel/blk_drv/floppy.c	/^static unsigned char current_drive = 0;$/;"	v	language:C	typeref:typename:unsigned char	file:
current_request	kernel/blk_drv/blk.h	/^	struct request * current_request;$/;"	m	language:C++	struct:blk_dev_struct	typeref:struct:request *	access:public
current_track	kernel/blk_drv/floppy.c	/^static unsigned char current_track = 255;$/;"	v	language:C	typeref:typename:unsigned char	file:
cursor	kernel/chr_drv/keyboard.S	/^cursor:$/;"	l	language:Asm
cutime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
cwd	include/linux/sched.h	/^	long	cwd;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
cyl	include/linux/hdreg.h	/^	unsigned char cyl;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
cyl	kernel/blk_drv/hd.c	/^		unsigned int head,unsigned int cyl,unsigned int cmd,$/;"	z	language:C	function:hd_out	typeref:typename:unsigned int	file:
cyl	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
cyl	kernel/blk_drv/hd.c	/^	unsigned int sec,head,cyl;$/;"	l	language:C	function:do_hd_request	typeref:typename:unsigned int	file:
d_inode	include/linux/fs.h	/^struct d_inode {$/;"	s	language:C++
d_inode::i_gid	include/linux/fs.h	/^	unsigned char i_gid;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned char	access:public
d_inode::i_mode	include/linux/fs.h	/^	unsigned short i_mode;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned short	access:public
d_inode::i_nlinks	include/linux/fs.h	/^	unsigned char i_nlinks;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned char	access:public
d_inode::i_size	include/linux/fs.h	/^	unsigned long i_size;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned long	access:public
d_inode::i_time	include/linux/fs.h	/^	unsigned long i_time;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned long	access:public
d_inode::i_uid	include/linux/fs.h	/^	unsigned short i_uid;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned short	access:public
d_inode::i_zone	include/linux/fs.h	/^	unsigned short i_zone[9];$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned short[9]	access:public
d_super_block	include/linux/fs.h	/^struct d_super_block {$/;"	s	language:C++
d_super_block::s_firstdatazone	include/linux/fs.h	/^	unsigned short s_firstdatazone;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
d_super_block::s_imap_blocks	include/linux/fs.h	/^	unsigned short s_imap_blocks;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
d_super_block::s_log_zone_size	include/linux/fs.h	/^	unsigned short s_log_zone_size;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
d_super_block::s_magic	include/linux/fs.h	/^	unsigned short s_magic;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
d_super_block::s_max_size	include/linux/fs.h	/^	unsigned long s_max_size;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned long	access:public
d_super_block::s_ninodes	include/linux/fs.h	/^	unsigned short s_ninodes;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
d_super_block::s_nzones	include/linux/fs.h	/^	unsigned short s_nzones;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
d_super_block::s_zmap_blocks	include/linux/fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
daddr_t	include/sys/types.h	/^typedef int daddr_t;$/;"	t	language:C++	typeref:typename:int
data	include/linux/tty.h	/^	unsigned long data;$/;"	m	language:C++	struct:tty_queue	typeref:typename:unsigned long	access:public
data_base	fs/exec.c	/^	unsigned long code_limit,data_limit,code_base,data_base;$/;"	l	language:C	function:change_ldt	typeref:typename:unsigned long	file:
data_limit	fs/exec.c	/^	unsigned long code_limit,data_limit,code_base,data_base;$/;"	l	language:C	function:change_ldt	typeref:typename:unsigned long	file:
data_limit	kernel/fork.c	/^	unsigned long old_data_base,new_data_base,data_limit;$/;"	l	language:C	function:copy_mem	typeref:typename:unsigned long	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:add_entry	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:empty_dir	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:find_entry	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:get_dir	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:namei	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:open_namei	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:sys_link	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:sys_mkdir	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:sys_mknod	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:sys_rmdir	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^	struct dir_entry * de;$/;"	l	language:C	function:sys_unlink	typeref:struct:dir_entry *	file:
de	fs/namei.c	/^static int match(int len,const char * name,struct dir_entry * de)$/;"	z	language:C	function:match	typeref:struct:dir_entry *	file:
del	kernel/chr_drv/console.c	/^static void del(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
delete_char	kernel/chr_drv/console.c	/^static void delete_char(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
delete_line	kernel/chr_drv/console.c	/^static void delete_line(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
dep	Makefile	/^dep:$/;"	t	language:Make
dep	fs/Makefile	/^dep:$/;"	t	language:Make
dep	kernel/Makefile	/^dep:$/;"	t	language:Make
dep	kernel/blk_drv/Makefile	/^dep:$/;"	t	language:Make
dep	kernel/chr_drv/Makefile	/^dep:$/;"	t	language:Make
dep	kernel/math/Makefile	/^dep:$/;"	t	language:Make
dep	lib/Makefile	/^dep:$/;"	t	language:Make
dep	mm/Makefile	/^dep:$/;"	t	language:Make
desc_struct	include/linux/head.h	/^typedef struct desc_struct {$/;"	s	language:C++
desc_struct::a	include/linux/head.h	/^	unsigned long a,b;$/;"	m	language:C++	struct:desc_struct	typeref:typename:unsigned long	access:public
desc_struct::b	include/linux/head.h	/^	unsigned long a,b;$/;"	m	language:C++	struct:desc_struct	typeref:typename:unsigned long	access:public
desc_table	include/linux/head.h	/^} desc_table[256];$/;"	t	language:C++	typeref:struct:desc_struct[256]
dest	include/asm/memory.h	/^#define memcpy(dest,src,n) ({ \\$/;"	D	language:C++	macro:memcpy
dest	include/string.h	/^extern inline char * strcat(char * dest,const char * src)$/;"	z	language:C++	function:strcat	typeref:typename:char *	file:
dest	include/string.h	/^extern inline char * strcpy(char * dest,const char *src)$/;"	z	language:C++	function:strcpy	typeref:typename:char *	file:
dest	include/string.h	/^extern inline char * strncat(char * dest,const char * src,int count)$/;"	z	language:C++	function:strncat	typeref:typename:char *	file:
dest	include/string.h	/^extern inline char * strncpy(char * dest,const char *src,int count)$/;"	z	language:C++	function:strncpy	typeref:typename:char *	file:
dest	include/string.h	/^extern inline void * memcpy(void * dest,const void * src, int n)$/;"	z	language:C++	function:memcpy	typeref:typename:void *	file:
dest	include/string.h	/^extern inline void * memmove(void * dest,const void * src, int n)$/;"	z	language:C++	function:memmove	typeref:typename:void *	file:
dev	fs/bitmap.c	/^int new_block(int dev)$/;"	z	language:C	function:new_block	typeref:typename:int	file:
dev	fs/bitmap.c	/^struct m_inode * new_inode(int dev)$/;"	z	language:C	function:new_inode	typeref:typename:int	file:
dev	fs/bitmap.c	/^void free_block(int dev, int block)$/;"	z	language:C	function:free_block	typeref:typename:int	file:
dev	fs/block_dev.c	/^int block_read(int dev, unsigned long * pos, char * buf, int count)$/;"	z	language:C	function:block_read	typeref:typename:int	file:
dev	fs/block_dev.c	/^int block_write(int dev, long * pos, char * buf, int count)$/;"	z	language:C	function:block_write	typeref:typename:int	file:
dev	fs/buffer.c	/^#define _hashfn(dev,block) (((unsigned)(dev^block))%NR_HASH)$/;"	D	language:C	macro:_hashfn
dev	fs/buffer.c	/^#define hash(dev,block) hash_table[_hashfn(dev,block)]$/;"	D	language:C	macro:hash
dev	fs/buffer.c	/^int sync_dev(int dev)$/;"	z	language:C	function:sync_dev	typeref:typename:int	file:
dev	fs/buffer.c	/^static struct buffer_head * find_buffer(int dev, int block)$/;"	z	language:C	function:find_buffer	typeref:typename:int	file:
dev	fs/buffer.c	/^struct buffer_head * bread(int dev,int block)$/;"	z	language:C	function:bread	typeref:typename:int	file:
dev	fs/buffer.c	/^struct buffer_head * breada(int dev,int first, ...)$/;"	z	language:C	function:breada	typeref:typename:int	file:
dev	fs/buffer.c	/^struct buffer_head * get_hash_table(int dev, int block)$/;"	z	language:C	function:get_hash_table	typeref:typename:int	file:
dev	fs/buffer.c	/^struct buffer_head * getblk(int dev,int block)$/;"	z	language:C	function:getblk	typeref:typename:int	file:
dev	fs/buffer.c	/^void bread_page(unsigned long address,int dev,int b[4])$/;"	z	language:C	function:bread_page	typeref:typename:int	file:
dev	fs/buffer.c	/^void check_disk_change(int dev)$/;"	z	language:C	function:check_disk_change	typeref:typename:int	file:
dev	fs/buffer.c	/^void inline invalidate_buffers(int dev)$/;"	z	language:C	function:invalidate_buffers	typeref:typename:int	file:
dev	fs/char_dev.c	/^int rw_char(int rw,int dev, char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_char	typeref:typename:int	file:
dev	fs/inode.c	/^struct m_inode * iget(int dev,int nr)$/;"	z	language:C	function:iget	typeref:typename:int	file:
dev	fs/inode.c	/^void invalidate_inodes(int dev)$/;"	z	language:C	function:invalidate_inodes	typeref:typename:int	file:
dev	fs/ioctl.c	/^	int dev,mode;$/;"	l	language:C	function:sys_ioctl	typeref:typename:int	file:
dev	fs/namei.c	/^	int inr,dev,namelen;$/;"	l	language:C	function:namei	typeref:typename:int	file:
dev	fs/namei.c	/^	int inr,dev,namelen;$/;"	l	language:C	function:open_namei	typeref:typename:int	file:
dev	fs/namei.c	/^int sys_mknod(const char * filename, int mode, int dev)$/;"	z	language:C	function:sys_mknod	typeref:typename:int	file:
dev	fs/open.c	/^int sys_ustat(int dev, struct ustat * ubuf)$/;"	z	language:C	function:sys_ustat	typeref:typename:int	file:
dev	fs/super.c	/^	int dev;$/;"	l	language:C	function:sys_mount	typeref:typename:int	file:
dev	fs/super.c	/^	int dev;$/;"	l	language:C	function:sys_umount	typeref:typename:int	file:
dev	fs/super.c	/^static struct super_block * read_super(int dev)$/;"	z	language:C	function:read_super	typeref:typename:int	file:
dev	fs/super.c	/^struct super_block * get_super(int dev)$/;"	z	language:C	function:get_super	typeref:typename:int	file:
dev	fs/super.c	/^void put_super(int dev)$/;"	z	language:C	function:put_super	typeref:typename:int	file:
dev	fs/truncate.c	/^static void free_dind(int dev,int block)$/;"	z	language:C	function:free_dind	typeref:typename:int	file:
dev	fs/truncate.c	/^static void free_ind(int dev,int block)$/;"	z	language:C	function:free_ind	typeref:typename:int	file:
dev	kernel/blk_drv/blk.h	/^	int dev;		\/* -1 if no request *\/$/;"	m	language:C++	struct:request	typeref:typename:int	access:public
dev	kernel/blk_drv/hd.c	/^	unsigned int block,dev;$/;"	l	language:C	function:do_hd_request	typeref:typename:unsigned int	file:
dev	kernel/blk_drv/ll_rw_blk.c	/^static void add_request(struct blk_dev_struct * dev, struct request * req)$/;"	z	language:C	function:add_request	typeref:struct:blk_dev_struct *	file:
dev	kernel/chr_drv/tty_ioctl.c	/^int tty_ioctl(int dev, int cmd, int arg)$/;"	z	language:C	function:tty_ioctl	typeref:typename:int	file:
dev_i	fs/super.c	/^	struct m_inode * dev_i, * dir_i;$/;"	l	language:C	function:sys_mount	typeref:struct:m_inode *	file:
dev_name	fs/super.c	/^int sys_mount(char * dev_name, char * dir_name, int rw_flag)$/;"	z	language:C	function:sys_mount	typeref:typename:char *	file:
dev_name	fs/super.c	/^int sys_umount(char * dev_name)$/;"	z	language:C	function:sys_umount	typeref:typename:char *	file:
dev_t	include/sys/types.h	/^typedef unsigned short dev_t;$/;"	t	language:C++	typeref:typename:unsigned short
device	kernel/blk_drv/blk.h	/^#define DEVICE_NR(device) ((device) & 3)$/;"	D	language:C++	macro:DEVICE_NR
device	kernel/blk_drv/blk.h	/^#define DEVICE_NR(device) ((device) & 7)$/;"	D	language:C++	macro:DEVICE_NR
device	kernel/blk_drv/blk.h	/^#define DEVICE_NR(device) (MINOR(device)\/5)$/;"	D	language:C++	macro:DEVICE_NR
device	kernel/blk_drv/blk.h	/^#define DEVICE_OFF(device) floppy_off(DEVICE_NR(device))$/;"	D	language:C++	macro:DEVICE_OFF
device	kernel/blk_drv/blk.h	/^#define DEVICE_OFF(device)$/;"	D	language:C++	macro:DEVICE_OFF
device	kernel/blk_drv/blk.h	/^#define DEVICE_ON(device) $/;"	D	language:C++	macro:DEVICE_ON
device	kernel/blk_drv/blk.h	/^#define DEVICE_ON(device) floppy_on(DEVICE_NR(device))$/;"	D	language:C++	macro:DEVICE_ON
device	kernel/blk_drv/blk.h	/^#define DEVICE_ON(device)$/;"	D	language:C++	macro:DEVICE_ON
die	kernel/chr_drv/keyboard.S	/^die:	jmp die$/;"	l	language:Asm
die	kernel/traps.c	/^static void die(char * str,long esp_ptr,long nr)$/;"	f	language:C	typeref:typename:void	file:	signature:(char * str,long esp_ptr,long nr)
die	tools/build.c	/^void die(char * str)$/;"	f	language:C	typeref:typename:void	signature:(char * str)
digits	kernel/vsprintf.c	/^	const char *digits="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";$/;"	l	language:C	function:number	typeref:typename:const char *	file:
dir	fs/namei.c	/^	struct m_inode * dir, * inode;$/;"	l	language:C	function:sys_mkdir	typeref:struct:m_inode *	file:
dir	fs/namei.c	/^	struct m_inode * dir, * inode;$/;"	l	language:C	function:sys_mknod	typeref:struct:m_inode *	file:
dir	fs/namei.c	/^	struct m_inode * dir, * inode;$/;"	l	language:C	function:sys_rmdir	typeref:struct:m_inode *	file:
dir	fs/namei.c	/^	struct m_inode * dir, * inode;$/;"	l	language:C	function:sys_unlink	typeref:struct:m_inode *	file:
dir	fs/namei.c	/^	struct m_inode * dir, *inode;$/;"	l	language:C	function:open_namei	typeref:struct:m_inode *	file:
dir	fs/namei.c	/^	struct m_inode * dir;$/;"	l	language:C	function:dir_namei	typeref:struct:m_inode *	file:
dir	fs/namei.c	/^	struct m_inode * dir;$/;"	l	language:C	function:namei	typeref:struct:m_inode *	file:
dir	fs/namei.c	/^	struct m_inode * oldinode, * dir;$/;"	l	language:C	function:sys_link	typeref:struct:m_inode *	file:
dir	fs/namei.c	/^static struct buffer_head * add_entry(struct m_inode * dir,$/;"	z	language:C	function:add_entry	typeref:struct:m_inode *	file:
dir	fs/namei.c	/^static struct buffer_head * find_entry(struct m_inode ** dir,$/;"	z	language:C	function:find_entry	typeref:struct:m_inode **	file:
dir	mm/memory.c	/^	unsigned long * dir, nr;$/;"	l	language:C	function:free_page_tables	typeref:typename:unsigned long *	file:
dir_block	fs/namei.c	/^	struct buffer_head * bh, *dir_block;$/;"	l	language:C	function:sys_mkdir	typeref:struct:buffer_head *	file:
dir_entry	include/linux/fs.h	/^struct dir_entry {$/;"	s	language:C++
dir_entry::inode	include/linux/fs.h	/^	unsigned short inode;$/;"	m	language:C++	struct:dir_entry	typeref:typename:unsigned short	access:public
dir_entry::name	include/linux/fs.h	/^	char name[NAME_LEN];$/;"	m	language:C++	struct:dir_entry	typeref:typename:char[]	access:public
dir_i	fs/super.c	/^	struct m_inode * dev_i, * dir_i;$/;"	l	language:C	function:sys_mount	typeref:struct:m_inode *	file:
dir_name	fs/super.c	/^int sys_mount(char * dev_name, char * dir_name, int rw_flag)$/;"	z	language:C	function:sys_mount	typeref:typename:char *	file:
dir_namei	fs/namei.c	/^static struct m_inode * dir_namei(const char * pathname,$/;"	f	language:C	typeref:struct:m_inode *	file:	signature:(const char * pathname,int * namelen,const char ** name)
disk	Makefile	/^disk: Image$/;"	t	language:Make
display_desc	kernel/chr_drv/console.c	/^	char *display_desc = "????";$/;"	l	language:C	function:con_init	typeref:typename:char *	file:
display_ptr	kernel/chr_drv/console.c	/^	char *display_ptr;$/;"	l	language:C	function:con_init	typeref:typename:char *	file:
div_t	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	t	language:C++	typeref:struct:__anon96a80d310108
do_bounds	kernel/traps.c	/^void do_bounds(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_coprocessor_error	kernel/traps.c	/^void do_coprocessor_error(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_coprocessor_segment_overrun	kernel/traps.c	/^void do_coprocessor_segment_overrun(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_debug	kernel/traps.c	/^void do_debug(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_device_not_available	kernel/traps.c	/^void do_device_not_available(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_div	kernel/vsprintf.c	/^#define do_div(/;"	d	language:C	file:	signature:(n,base)
do_divide_error	kernel/traps.c	/^void do_divide_error(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_double_fault	kernel/traps.c	/^void do_double_fault(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_execve	fs/exec.c	/^int do_execve(unsigned long * eip,long tmp,char * filename,$/;"	f	language:C	typeref:typename:int	signature:(unsigned long * eip,long tmp,char * filename,char ** argv,char ** envp)
do_exit	kernel/exit.c	/^int do_exit(long code)$/;"	f	language:C	typeref:typename:int	signature:(long code)
do_fd_request	kernel/blk_drv/floppy.c	/^void do_fd_request(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
do_floppy_timer	kernel/sched.c	/^void do_floppy_timer(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
do_general_protection	kernel/traps.c	/^void do_general_protection(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_hd_request	kernel/blk_drv/hd.c	/^void do_hd_request(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
do_int3	kernel/traps.c	/^void do_int3(long * esp, long error_code,$/;"	f	language:C	typeref:typename:void	signature:(long * esp,long error_code,long fs,long es,long ds,long ebp,long esi,long edi,long edx,long ecx,long ebx,long eax)
do_invalid_TSS	kernel/traps.c	/^void do_invalid_TSS(long esp,long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_invalid_op	kernel/traps.c	/^void do_invalid_op(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_nmi	kernel/traps.c	/^void do_nmi(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_no_page	mm/memory.c	/^void do_no_page(unsigned long error_code,unsigned long address)$/;"	f	language:C	typeref:typename:void	signature:(unsigned long error_code,unsigned long address)
do_overflow	kernel/traps.c	/^void do_overflow(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_rd_request	kernel/blk_drv/ramdisk.c	/^void do_rd_request(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
do_reserved	kernel/traps.c	/^void do_reserved(long esp, long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_segment_not_present	kernel/traps.c	/^void do_segment_not_present(long esp,long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_self	kernel/chr_drv/keyboard.S	/^do_self:$/;"	l	language:Asm
do_signal	kernel/signal.c	/^void do_signal(long signr,long eax, long ebx, long ecx, long edx,$/;"	f	language:C	typeref:typename:void	signature:(long signr,long eax,long ebx,long ecx,long edx,long fs,long es,long ds,long eip,long cs,long eflags,unsigned long * esp,long ss)
do_stack_segment	kernel/traps.c	/^void do_stack_segment(long esp,long error_code)$/;"	f	language:C	typeref:typename:void	signature:(long esp,long error_code)
do_timer	kernel/sched.c	/^void do_timer(long cpl)$/;"	f	language:C	typeref:typename:void	signature:(long cpl)
do_tty_interrupt	kernel/chr_drv/tty_io.c	/^void do_tty_interrupt(int tty)$/;"	f	language:C	typeref:typename:void	signature:(int tty)
do_wp_page	mm/memory.c	/^void do_wp_page(unsigned long error_code,unsigned long address)$/;"	f	language:C	typeref:typename:void	signature:(unsigned long error_code,unsigned long address)
dpl	include/asm/system.h	/^#define _set_gate(gate_addr,type,dpl,addr) \\$/;"	D	language:C++	macro:_set_gate
dpl	include/asm/system.h	/^#define _set_seg_desc(gate_addr,type,dpl,base,limit) {\\$/;"	D	language:C++	macro:_set_seg_desc
drive	kernel/blk_drv/hd.c	/^	int i,drive;$/;"	l	language:C	function:sys_setup	typeref:typename:int	file:
drive	kernel/blk_drv/hd.c	/^static void hd_out(unsigned int drive,unsigned int nsect,unsigned int sect,$/;"	z	language:C	function:hd_out	typeref:typename:unsigned int	file:
drive_busy	kernel/blk_drv/hd.c	/^static int drive_busy(void)$/;"	f	language:C	typeref:typename:int	file:	signature:(void)
drive_info	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	s	language:C	file:
drive_info	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	v	language:C	typeref:struct:drive_info
drive_info::dummy	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	m	language:C	struct:drive_info	typeref:typename:char[32]	file:	access:public
ds	include/linux/sched.h	/^	long	ds;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
ds	kernel/fork.c	/^		long fs,long es,long ds,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
ds	kernel/math/math_emulate.c	/^	unsigned short fs,unsigned short es,unsigned short ds,$/;"	z	language:C	function:math_emulate	typeref:typename:unsigned short	file:
ds	kernel/signal.c	/^	long fs, long es, long ds,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
ds	kernel/traps.c	/^		long fs,long es,long ds,$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
dummy	init/main.c	/^struct drive_info { char dummy[32]; } drive_info;$/;"	m	language:C	struct:drive_info	typeref:typename:char[32]	file:	access:public
dup.o	lib/Makefile	/^dup.s dup.o : dup.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
dup.s	lib/Makefile	/^dup.s dup.o : dup.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
dupfd	fs/fcntl.c	/^static int dupfd(unsigned int fd, unsigned int arg)$/;"	f	language:C	typeref:typename:int	file:	signature:(unsigned int fd,unsigned int arg)
e0	kernel/chr_drv/keyboard.S	/^e0:	.byte 0$/;"	l	language:Asm
e0_e1	kernel/chr_drv/keyboard.S	/^e0_e1:	inb $0x61,%al$/;"	l	language:Asm
e_gid	fs/exec.c	/^	int e_uid, e_gid;$/;"	l	language:C	function:do_execve	typeref:typename:int	file:
e_uid	fs/exec.c	/^	int e_uid, e_gid;$/;"	l	language:C	function:do_execve	typeref:typename:int	file:
eax	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
eax	kernel/math/math_emulate.c	/^	long eax,long ebx,long ecx,long edx,$/;"	z	language:C	function:math_emulate	typeref:typename:long	file:
eax	kernel/signal.c	/^void do_signal(long signr,long eax, long ebx, long ecx, long edx,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
eax	kernel/traps.c	/^		long edx,long ecx,long ebx,long eax)$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
ebp	include/linux/sched.h	/^	long	ebp;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
ebp	kernel/fork.c	/^int copy_process(int nr,long ebp,long edi,long esi,long gs,long none,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
ebp	kernel/math/math_emulate.c	/^void math_emulate(long edi, long esi, long ebp, long sys_call_ret,$/;"	z	language:C	function:math_emulate	typeref:typename:long	file:
ebp	kernel/traps.c	/^		long ebp,long esi,long edi,$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
ebx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
ebx	kernel/fork.c	/^		long ebx,long ecx,long edx,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
ebx	kernel/math/math_emulate.c	/^	long eax,long ebx,long ecx,long edx,$/;"	z	language:C	function:math_emulate	typeref:typename:long	file:
ebx	kernel/signal.c	/^void do_signal(long signr,long eax, long ebx, long ecx, long edx,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
ebx	kernel/traps.c	/^		long edx,long ecx,long ebx,long eax)$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
ecx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
ecx	kernel/fork.c	/^		long ebx,long ecx,long edx,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
ecx	kernel/math/math_emulate.c	/^	long eax,long ebx,long ecx,long edx,$/;"	z	language:C	function:math_emulate	typeref:typename:long	file:
ecx	kernel/signal.c	/^void do_signal(long signr,long eax, long ebx, long ecx, long edx,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
ecx	kernel/traps.c	/^		long edx,long ecx,long ebx,long eax)$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
edi	include/linux/sched.h	/^	long	edi;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
edi	kernel/fork.c	/^int copy_process(int nr,long ebp,long edi,long esi,long gs,long none,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
edi	kernel/math/math_emulate.c	/^void math_emulate(long edi, long esi, long ebp, long sys_call_ret,$/;"	z	language:C	function:math_emulate	typeref:typename:long	file:
edi	kernel/traps.c	/^		long ebp,long esi,long edi,$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
edx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
edx	kernel/fork.c	/^		long ebx,long ecx,long edx,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
edx	kernel/math/math_emulate.c	/^	long eax,long ebx,long ecx,long edx,$/;"	z	language:C	function:math_emulate	typeref:typename:long	file:
edx	kernel/signal.c	/^void do_signal(long signr,long eax, long ebx, long ecx, long edx,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
edx	kernel/traps.c	/^		long edx,long ecx,long ebx,long eax)$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
eflags	include/linux/sched.h	/^	long	eflags;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
eflags	kernel/fork.c	/^		long eip,long cs,long eflags,long esp,long ss)$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
eflags	kernel/math/math_emulate.c	/^	unsigned long eip,unsigned short cs,unsigned long eflags,$/;"	z	language:C	function:math_emulate	typeref:typename:unsigned long	file:
eflags	kernel/signal.c	/^	long eip, long cs, long eflags,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
egid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
egid	kernel/sys.c	/^int sys_setregid(int rgid, int egid)$/;"	z	language:C	function:sys_setregid	typeref:typename:int	file:
eip	fs/exec.c	/^int do_execve(unsigned long * eip,long tmp,char * filename,$/;"	z	language:C	function:do_execve	typeref:typename:unsigned long *	file:
eip	include/linux/sched.h	/^	long	eip;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
eip	kernel/fork.c	/^		long eip,long cs,long eflags,long esp,long ss)$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
eip	kernel/math/math_emulate.c	/^	unsigned long eip,unsigned short cs,unsigned long eflags,$/;"	z	language:C	function:math_emulate	typeref:typename:unsigned long	file:
eip	kernel/signal.c	/^	long eip, long cs, long eflags,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
empty	fs/inode.c	/^	struct m_inode * inode, * empty;$/;"	l	language:C	function:iget	typeref:struct:m_inode *	file:
empty_dir	fs/namei.c	/^static int empty_dir(struct m_inode * inode)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct m_inode * inode)
end	fs/buffer.c	/^extern int end;$/;"	x	language:C	typeref:typename:int
end_code	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
end_cyl	include/linux/hdreg.h	/^	unsigned char end_cyl;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
end_data	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
end_data_seg	kernel/sys.c	/^int sys_brk(unsigned long end_data_seg)$/;"	z	language:C	function:sys_brk	typeref:typename:unsigned long	file:
end_func	kernel/chr_drv/keyboard.S	/^end_func:$/;"	l	language:Asm
end_head	include/linux/hdreg.h	/^	unsigned char end_head;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
end_mem	mm/memory.c	/^void mem_init(long start_mem, long end_mem)$/;"	z	language:C	function:mem_init	typeref:typename:long	file:
end_request	kernel/blk_drv/blk.h	/^extern inline void end_request(int uptodate)$/;"	f	language:C++	typeref:typename:void	signature:(int uptodate)
end_sector	include/linux/hdreg.h	/^	unsigned char end_sector;	\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
entries	fs/namei.c	/^	int entries;$/;"	l	language:C	function:find_entry	typeref:typename:int	file:
envc	fs/exec.c	/^	int i,argc,envc;$/;"	l	language:C	function:do_execve	typeref:typename:int	file:
envc	fs/exec.c	/^static unsigned long * create_tables(char * p,int argc,int envc)$/;"	z	language:C	function:create_tables	typeref:typename:int	file:
envp	fs/exec.c	/^	char ** argv, char ** envp)$/;"	z	language:C	function:do_execve	typeref:typename:char **	file:
envp	fs/exec.c	/^	unsigned long *argv,*envp;$/;"	l	language:C	function:create_tables	typeref:typename:unsigned long *	file:
envp	init/main.c	/^static char * envp[] = { "HOME=\/usr\/root", NULL };$/;"	v	language:C	typeref:typename:char * []	file:
envp_rc	init/main.c	/^static char * envp_rc[] = { "HOME=\/", NULL };$/;"	v	language:C	typeref:typename:char * []	file:
err	kernel/exit.c	/^	int err, retval = 0;$/;"	l	language:C	function:sys_kill	typeref:typename:int	file:
errno	include/errno.h	/^extern int errno;$/;"	x	language:C++	typeref:typename:int
errno	include/unistd.h	/^extern int errno;$/;"	x	language:C++	typeref:typename:int
errno	lib/errno.c	/^int errno;$/;"	v	language:C	typeref:typename:int
errno.o	lib/Makefile	/^errno.s errno.o : errno.c $/;"	t	language:Make
errno.s	lib/Makefile	/^errno.s errno.o : errno.c $/;"	t	language:Make
error_code	kernel/exit.c	/^int sys_exit(int error_code)$/;"	z	language:C	function:sys_exit	typeref:typename:int	file:
error_code	kernel/traps.c	/^void do_bounds(long esp, long error_code)$/;"	z	language:C	function:do_bounds	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_coprocessor_error(long esp, long error_code)$/;"	z	language:C	function:do_coprocessor_error	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_coprocessor_segment_overrun(long esp, long error_code)$/;"	z	language:C	function:do_coprocessor_segment_overrun	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_debug(long esp, long error_code)$/;"	z	language:C	function:do_debug	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_device_not_available(long esp, long error_code)$/;"	z	language:C	function:do_device_not_available	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_divide_error(long esp, long error_code)$/;"	z	language:C	function:do_divide_error	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_double_fault(long esp, long error_code)$/;"	z	language:C	function:do_double_fault	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_general_protection(long esp, long error_code)$/;"	z	language:C	function:do_general_protection	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_int3(long * esp, long error_code,$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_invalid_TSS(long esp,long error_code)$/;"	z	language:C	function:do_invalid_TSS	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_invalid_op(long esp, long error_code)$/;"	z	language:C	function:do_invalid_op	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_nmi(long esp, long error_code)$/;"	z	language:C	function:do_nmi	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_overflow(long esp, long error_code)$/;"	z	language:C	function:do_overflow	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_reserved(long esp, long error_code)$/;"	z	language:C	function:do_reserved	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_segment_not_present(long esp,long error_code)$/;"	z	language:C	function:do_segment_not_present	typeref:typename:long	file:
error_code	kernel/traps.c	/^void do_stack_segment(long esp,long error_code)$/;"	z	language:C	function:do_stack_segment	typeref:typename:long	file:
error_code	mm/memory.c	/^void do_no_page(unsigned long error_code,unsigned long address)$/;"	z	language:C	function:do_no_page	typeref:typename:unsigned long	file:
error_code	mm/memory.c	/^void do_wp_page(unsigned long error_code,unsigned long address)$/;"	z	language:C	function:do_wp_page	typeref:typename:unsigned long	file:
errors	kernel/blk_drv/blk.h	/^	int errors;$/;"	m	language:C++	struct:request	typeref:typename:int	access:public
es	include/linux/sched.h	/^	long	es;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
es	kernel/fork.c	/^		long fs,long es,long ds,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
es	kernel/math/math_emulate.c	/^	unsigned short fs,unsigned short es,unsigned short ds,$/;"	z	language:C	function:math_emulate	typeref:typename:unsigned short	file:
es	kernel/signal.c	/^	long fs, long es, long ds,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
es	kernel/traps.c	/^		long fs,long es,long ds,$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
esi	include/linux/sched.h	/^	long	esi;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
esi	kernel/fork.c	/^int copy_process(int nr,long ebp,long edi,long esi,long gs,long none,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
esi	kernel/math/math_emulate.c	/^void math_emulate(long edi, long esi, long ebp, long sys_call_ret,$/;"	z	language:C	function:math_emulate	typeref:typename:long	file:
esi	kernel/traps.c	/^		long ebp,long esi,long edi,$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
esp	include/linux/sched.h	/^	long	esp;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
esp	kernel/fork.c	/^		long eip,long cs,long eflags,long esp,long ss)$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
esp	kernel/math/math_emulate.c	/^	unsigned short ss, unsigned long esp)$/;"	z	language:C	function:math_emulate	typeref:typename:unsigned long	file:
esp	kernel/signal.c	/^	unsigned long * esp, long ss)$/;"	z	language:C	function:do_signal	typeref:typename:unsigned long *	file:
esp	kernel/traps.c	/^	long * esp = (long *) esp_ptr;$/;"	l	language:C	function:die	typeref:typename:long *	file:
esp	kernel/traps.c	/^void do_bounds(long esp, long error_code)$/;"	z	language:C	function:do_bounds	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_coprocessor_error(long esp, long error_code)$/;"	z	language:C	function:do_coprocessor_error	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_coprocessor_segment_overrun(long esp, long error_code)$/;"	z	language:C	function:do_coprocessor_segment_overrun	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_debug(long esp, long error_code)$/;"	z	language:C	function:do_debug	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_device_not_available(long esp, long error_code)$/;"	z	language:C	function:do_device_not_available	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_divide_error(long esp, long error_code)$/;"	z	language:C	function:do_divide_error	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_double_fault(long esp, long error_code)$/;"	z	language:C	function:do_double_fault	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_general_protection(long esp, long error_code)$/;"	z	language:C	function:do_general_protection	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_int3(long * esp, long error_code,$/;"	z	language:C	function:do_int3	typeref:typename:long *	file:
esp	kernel/traps.c	/^void do_invalid_TSS(long esp,long error_code)$/;"	z	language:C	function:do_invalid_TSS	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_invalid_op(long esp, long error_code)$/;"	z	language:C	function:do_invalid_op	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_nmi(long esp, long error_code)$/;"	z	language:C	function:do_nmi	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_overflow(long esp, long error_code)$/;"	z	language:C	function:do_overflow	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_reserved(long esp, long error_code)$/;"	z	language:C	function:do_reserved	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_segment_not_present(long esp,long error_code)$/;"	z	language:C	function:do_segment_not_present	typeref:typename:long	file:
esp	kernel/traps.c	/^void do_stack_segment(long esp,long error_code)$/;"	z	language:C	function:do_stack_segment	typeref:typename:long	file:
esp0	include/linux/sched.h	/^	long	esp0;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
esp1	include/linux/sched.h	/^	long	esp1;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
esp2	include/linux/sched.h	/^	long	esp2;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
esp_ptr	kernel/traps.c	/^static void die(char * str,long esp_ptr,long nr)$/;"	z	language:C	function:die	typeref:typename:long	file:
euid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
euid	kernel/sys.c	/^int sys_setreuid(int ruid, int euid)$/;"	z	language:C	function:sys_setreuid	typeref:typename:int	file:
ex	fs/exec.c	/^	struct exec ex;$/;"	l	language:C	function:do_execve	typeref:struct:exec	file:
exec	include/a.out.h	/^#define N_MAGIC(exec) ((exec).a_magic)$/;"	D	language:C++	macro:N_MAGIC
exec	include/a.out.h	/^struct exec {$/;"	s	language:C++
exec.o	fs/Makefile	/^exec.o : exec.c ..\/include\/errno.h ..\/include\/string.h \\$/;"	t	language:Make
exec::a_bss	include/a.out.h	/^  unsigned a_bss;		\/* length of uninitialized data area for file, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
exec::a_data	include/a.out.h	/^  unsigned a_data;		\/* length of data, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
exec::a_drsize	include/a.out.h	/^  unsigned a_drsize;		\/* length of relocation info for data, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
exec::a_entry	include/a.out.h	/^  unsigned a_entry;		\/* start address *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
exec::a_magic	include/a.out.h	/^  unsigned long a_magic;	\/* Use macros N_MAGIC, etc for access *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned long	access:public
exec::a_syms	include/a.out.h	/^  unsigned a_syms;		\/* length of symbol table data in file, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
exec::a_text	include/a.out.h	/^  unsigned a_text;		\/* length of text, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
exec::a_trsize	include/a.out.h	/^  unsigned a_trsize;		\/* length of relocation info for text, in bytes *\/$/;"	m	language:C++	struct:exec	typeref:typename:unsigned	access:public
exec_error1	fs/exec.c	/^exec_error1:$/;"	L	language:C	function:do_execve	file:
exec_error2	fs/exec.c	/^exec_error2:$/;"	L	language:C	function:do_execve	file:
executable	include/linux/sched.h	/^	struct m_inode * executable;$/;"	m	language:C++	struct:task_struct	typeref:struct:m_inode *	access:public
execve.o	lib/Makefile	/^execve.s execve.o : execve.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
execve.s	lib/Makefile	/^execve.s execve.o : execve.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
exit.o	kernel/Makefile	/^exit.s exit.o : exit.c ..\/include\/errno.h ..\/include\/signal.h \\$/;"	t	language:Make
exit.s	kernel/Makefile	/^exit.s exit.o : exit.c ..\/include\/errno.h ..\/include\/signal.h \\$/;"	t	language:Make
exit_code	include/linux/sched.h	/^	int exit_code;$/;"	m	language:C++	struct:task_struct	typeref:typename:int	access:public
exit_code	lib/_exit.c	/^volatile void _exit(int exit_code)$/;"	z	language:C	function:_exit	typeref:typename:int	file:
extern	lib/string.c	/^#define extern$/;"	d	language:C	file:
f	fs/open.c	/^	struct file * f;$/;"	l	language:C	function:sys_open	typeref:struct:file *	file:
f	fs/pipe.c	/^	struct file * f[2];$/;"	l	language:C	function:sys_pipe	typeref:struct:file * [2]	file:
f	fs/stat.c	/^	struct file * f;$/;"	l	language:C	function:sys_fstat	typeref:struct:file *	file:
f	kernel/chr_drv/tty_io.c	/^#define _I_FLAG(tty,f)	((tty)->termios.c_iflag & f)$/;"	D	language:C	macro:_I_FLAG
f	kernel/chr_drv/tty_io.c	/^#define _L_FLAG(tty,f)	((tty)->termios.c_lflag & f)$/;"	D	language:C	macro:_L_FLAG
f	kernel/chr_drv/tty_io.c	/^#define _O_FLAG(tty,f)	((tty)->termios.c_oflag & f)$/;"	D	language:C	macro:_O_FLAG
f	kernel/fork.c	/^	struct file *f;$/;"	l	language:C	function:copy_process	typeref:struct:file *	file:
f_count	include/linux/fs.h	/^	unsigned short f_count;$/;"	m	language:C++	struct:file	typeref:typename:unsigned short	access:public
f_flags	include/linux/fs.h	/^	unsigned short f_flags;$/;"	m	language:C++	struct:file	typeref:typename:unsigned short	access:public
f_fname	include/sys/types.h	/^	char f_fname[6];$/;"	m	language:C++	struct:ustat	typeref:typename:char[6]	access:public
f_fpack	include/sys/types.h	/^	char f_fpack[6];$/;"	m	language:C++	struct:ustat	typeref:typename:char[6]	access:public
f_inode	include/linux/fs.h	/^	struct m_inode * f_inode;$/;"	m	language:C++	struct:file	typeref:struct:m_inode *	access:public
f_mode	include/linux/fs.h	/^	unsigned short f_mode;$/;"	m	language:C++	struct:file	typeref:typename:unsigned short	access:public
f_pos	include/linux/fs.h	/^	off_t f_pos;$/;"	m	language:C++	struct:file	typeref:typename:off_t	access:public
f_tfree	include/sys/types.h	/^	daddr_t f_tfree;$/;"	m	language:C++	struct:ustat	typeref:typename:daddr_t	access:public
f_tinode	include/sys/types.h	/^	ino_t f_tinode;$/;"	m	language:C++	struct:ustat	typeref:typename:ino_t	access:public
father	include/linux/sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
fcntl.o	fs/Makefile	/^fcntl.o : fcntl.c ..\/include\/string.h ..\/include\/errno.h \\$/;"	t	language:Make
fcs	include/linux/sched.h	/^	long	fcs;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
fd	fs/fcntl.c	/^int sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	z	language:C	function:sys_fcntl	typeref:typename:unsigned int	file:
fd	fs/fcntl.c	/^static int dupfd(unsigned int fd, unsigned int arg)$/;"	z	language:C	function:dupfd	typeref:typename:unsigned int	file:
fd	fs/ioctl.c	/^int sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	z	language:C	function:sys_ioctl	typeref:typename:unsigned int	file:
fd	fs/open.c	/^	int i,fd;$/;"	l	language:C	function:sys_open	typeref:typename:int	file:
fd	fs/open.c	/^int sys_close(unsigned int fd)$/;"	z	language:C	function:sys_close	typeref:typename:unsigned int	file:
fd	fs/pipe.c	/^	int fd[2];$/;"	l	language:C	function:sys_pipe	typeref:typename:int[2]	file:
fd	fs/read_write.c	/^int sys_lseek(unsigned int fd,off_t offset, int origin)$/;"	z	language:C	function:sys_lseek	typeref:typename:unsigned int	file:
fd	fs/read_write.c	/^int sys_read(unsigned int fd,char * buf,int count)$/;"	z	language:C	function:sys_read	typeref:typename:unsigned int	file:
fd	fs/read_write.c	/^int sys_write(unsigned int fd,char * buf,int count)$/;"	z	language:C	function:sys_write	typeref:typename:unsigned int	file:
fd	fs/stat.c	/^int sys_fstat(unsigned int fd, struct stat * statbuf)$/;"	z	language:C	function:sys_fstat	typeref:typename:unsigned int	file:
field_width	kernel/vsprintf.c	/^	int field_width;	\/* width of output field *\/$/;"	l	language:C	function:vsprintf	typeref:typename:int	file:
fildes	fs/fcntl.c	/^int sys_dup(unsigned int fildes)$/;"	z	language:C	function:sys_dup	typeref:typename:unsigned int	file:
fildes	fs/pipe.c	/^int sys_pipe(unsigned long * fildes)$/;"	z	language:C	function:sys_pipe	typeref:typename:unsigned long *	file:
file	fs/read_write.c	/^	struct file * file;$/;"	l	language:C	function:sys_lseek	typeref:struct:file *	file:
file	fs/read_write.c	/^	struct file * file;$/;"	l	language:C	function:sys_read	typeref:struct:file *	file:
file	fs/read_write.c	/^	struct file * file;$/;"	l	language:C	function:sys_write	typeref:struct:file *	file:
file	include/linux/fs.h	/^struct file {$/;"	s	language:C++
file::f_count	include/linux/fs.h	/^	unsigned short f_count;$/;"	m	language:C++	struct:file	typeref:typename:unsigned short	access:public
file::f_flags	include/linux/fs.h	/^	unsigned short f_flags;$/;"	m	language:C++	struct:file	typeref:typename:unsigned short	access:public
file::f_inode	include/linux/fs.h	/^	struct m_inode * f_inode;$/;"	m	language:C++	struct:file	typeref:struct:m_inode *	access:public
file::f_mode	include/linux/fs.h	/^	unsigned short f_mode;$/;"	m	language:C++	struct:file	typeref:typename:unsigned short	access:public
file::f_pos	include/linux/fs.h	/^	off_t f_pos;$/;"	m	language:C++	struct:file	typeref:typename:off_t	access:public
file_dev.o	fs/Makefile	/^file_dev.o : file_dev.c ..\/include\/errno.h ..\/include\/fcntl.h \\$/;"	t	language:Make
file_read	fs/file_dev.c	/^int file_read(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	f	language:C	typeref:typename:int	signature:(struct m_inode * inode,struct file * filp,char * buf,int count)
file_table	fs/file_table.c	/^struct file file_table[NR_FILE];$/;"	v	language:C	typeref:struct:file[]
file_table	include/linux/fs.h	/^extern struct file file_table[NR_FILE];$/;"	x	language:C++	typeref:struct:file[]
file_table.o	fs/Makefile	/^file_table.o : file_table.c ..\/include\/linux\/fs.h ..\/include\/sys\/types.h $/;"	t	language:Make
file_write	fs/file_dev.c	/^int file_write(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	f	language:C	typeref:typename:int	signature:(struct m_inode * inode,struct file * filp,char * buf,int count)
filename	fs/exec.c	/^int do_execve(unsigned long * eip,long tmp,char * filename,$/;"	z	language:C	function:do_execve	typeref:typename:char *	file:
filename	fs/namei.c	/^int sys_mknod(const char * filename, int mode, int dev)$/;"	z	language:C	function:sys_mknod	typeref:typename:const char *	file:
filename	fs/open.c	/^int sys_access(const char * filename,int mode)$/;"	z	language:C	function:sys_access	typeref:typename:const char *	file:
filename	fs/open.c	/^int sys_chdir(const char * filename)$/;"	z	language:C	function:sys_chdir	typeref:typename:const char *	file:
filename	fs/open.c	/^int sys_chmod(const char * filename,int mode)$/;"	z	language:C	function:sys_chmod	typeref:typename:const char *	file:
filename	fs/open.c	/^int sys_chown(const char * filename,int uid,int gid)$/;"	z	language:C	function:sys_chown	typeref:typename:const char *	file:
filename	fs/open.c	/^int sys_chroot(const char * filename)$/;"	z	language:C	function:sys_chroot	typeref:typename:const char *	file:
filename	fs/open.c	/^int sys_open(const char * filename,int flag,int mode)$/;"	z	language:C	function:sys_open	typeref:typename:const char *	file:
filename	fs/open.c	/^int sys_utime(char * filename, struct utimbuf * times)$/;"	z	language:C	function:sys_utime	typeref:typename:char *	file:
filename	fs/stat.c	/^int sys_stat(char * filename, struct stat * statbuf)$/;"	z	language:C	function:sys_stat	typeref:typename:char *	file:
filename	lib/open.c	/^int open(const char * filename, int flag, ...)$/;"	z	language:C	function:open	typeref:typename:const char *	file:
filp	fs/fcntl.c	/^	struct file * filp;$/;"	l	language:C	function:sys_fcntl	typeref:struct:file *	file:
filp	fs/file_dev.c	/^int file_read(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	z	language:C	function:file_read	typeref:struct:file *	file:
filp	fs/file_dev.c	/^int file_write(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	z	language:C	function:file_write	typeref:struct:file *	file:
filp	fs/ioctl.c	/^	struct file * filp;$/;"	l	language:C	function:sys_ioctl	typeref:struct:file *	file:
filp	fs/open.c	/^	struct file * filp;$/;"	l	language:C	function:sys_close	typeref:struct:file *	file:
filp	include/linux/sched.h	/^	struct file * filp[NR_OPEN];$/;"	m	language:C++	struct:task_struct	typeref:struct:file * []	access:public
find_buffer	fs/buffer.c	/^static struct buffer_head * find_buffer(int dev, int block)$/;"	f	language:C	typeref:struct:buffer_head *	file:	signature:(int dev,int block)
find_empty_process	kernel/fork.c	/^int find_empty_process(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
find_entry	fs/namei.c	/^static struct buffer_head * find_entry(struct m_inode ** dir,$/;"	f	language:C	typeref:struct:buffer_head *	file:	signature:(struct m_inode ** dir,const char * name,int namelen,struct dir_entry ** res_dir)
find_first_zero	fs/bitmap.c	/^#define find_first_zero(/;"	d	language:C	file:	signature:(addr)
fip	include/linux/sched.h	/^	long	fip;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
first	fs/buffer.c	/^struct buffer_head * breada(int dev,int first, ...)$/;"	z	language:C	function:breada	typeref:typename:int	file:
first	kernel/math/math_emulate.c	/^	unsigned char first, second;$/;"	l	language:C	function:math_emulate	typeref:typename:unsigned char	file:
first	lib/malloc.c	/^	struct bucket_desc *bdesc, *first;$/;"	l	language:C	function:init_bucket_desc	typeref:struct:bucket_desc *	file:
flag	fs/namei.c	/^int open_namei(const char * pathname, int flag, int mode,$/;"	z	language:C	function:open_namei	typeref:typename:int	file:
flag	fs/open.c	/^int sys_open(const char * filename,int flag,int mode)$/;"	z	language:C	function:sys_open	typeref:typename:int	file:
flag	kernel/chr_drv/tty_io.c	/^	int minimum,time,flag=0;$/;"	l	language:C	function:tty_read	typeref:typename:int	file:
flag	kernel/exit.c	/^	int flag, code;$/;"	l	language:C	function:sys_waitpid	typeref:typename:int	file:
flag	lib/open.c	/^int open(const char * filename, int flag, ...)$/;"	z	language:C	function:open	typeref:typename:int	file:
flags	kernel/vsprintf.c	/^	int flags;		\/* flags to number() *\/$/;"	l	language:C	function:vsprintf	typeref:typename:int	file:
flock	include/fcntl.h	/^struct flock {$/;"	s	language:C++
flock::l_len	include/fcntl.h	/^	off_t l_len;$/;"	m	language:C++	struct:flock	typeref:typename:off_t	access:public
flock::l_pid	include/fcntl.h	/^	pid_t l_pid;$/;"	m	language:C++	struct:flock	typeref:typename:pid_t	access:public
flock::l_start	include/fcntl.h	/^	off_t l_start;$/;"	m	language:C++	struct:flock	typeref:typename:off_t	access:public
flock::l_type	include/fcntl.h	/^	short l_type;$/;"	m	language:C++	struct:flock	typeref:typename:short	access:public
flock::l_whence	include/fcntl.h	/^	short l_whence;$/;"	m	language:C++	struct:flock	typeref:typename:short	access:public
floppy	kernel/blk_drv/floppy.c	/^static struct floppy_struct * floppy = floppy_type;$/;"	v	language:C	typeref:struct:floppy_struct *	file:
floppy.o	kernel/blk_drv/Makefile	/^floppy.s floppy.o : floppy.c ..\/..\/include\/linux\/sched.h ..\/..\/include\/linux\/head.h \\$/;"	t	language:Make
floppy.s	kernel/blk_drv/Makefile	/^floppy.s floppy.o : floppy.c ..\/..\/include\/linux\/sched.h ..\/..\/include\/linux\/head.h \\$/;"	t	language:Make
floppy_change	kernel/blk_drv/floppy.c	/^int floppy_change(unsigned int nr)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int nr)
floppy_deselect	kernel/blk_drv/floppy.c	/^void floppy_deselect(unsigned int nr)$/;"	f	language:C	typeref:typename:void	signature:(unsigned int nr)
floppy_init	kernel/blk_drv/floppy.c	/^void floppy_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
floppy_off	kernel/sched.c	/^void floppy_off(unsigned int nr)$/;"	f	language:C	typeref:typename:void	signature:(unsigned int nr)
floppy_on	kernel/sched.c	/^void floppy_on(unsigned int nr)$/;"	f	language:C	typeref:typename:void	signature:(unsigned int nr)
floppy_on_interrupt	kernel/blk_drv/floppy.c	/^static void floppy_on_interrupt(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
floppy_struct	kernel/blk_drv/floppy.c	/^static struct floppy_struct {$/;"	s	language:C	file:
floppy_struct::gap	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned char	file:	access:public
floppy_struct::head	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned int	file:	access:public
floppy_struct::rate	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned char	file:	access:public
floppy_struct::sect	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned int	file:	access:public
floppy_struct::size	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned int	file:	access:public
floppy_struct::spec1	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned char	file:	access:public
floppy_struct::stretch	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned int	file:	access:public
floppy_struct::track	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned int	file:	access:public
floppy_type	kernel/blk_drv/floppy.c	/^} floppy_type[] = {$/;"	v	language:C	typeref:struct:floppy_struct[]
flush	kernel/chr_drv/tty_ioctl.c	/^static void flush(struct tty_queue * queue)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct tty_queue * queue)
fmt	init/main.c	/^static int printf(const char *fmt, ...)$/;"	z	language:C	function:printf	typeref:typename:const char *	file:
fmt	kernel/printk.c	/^int printk(const char *fmt, ...)$/;"	z	language:C	function:printk	typeref:typename:const char *	file:
fmt	kernel/vsprintf.c	/^int vsprintf(char *buf, const char *fmt, va_list args)$/;"	z	language:C	function:vsprintf	typeref:typename:const char *	file:
fn	kernel/sched.c	/^			void (*fn)(void);$/;"	l	language:C	function:do_timer	typeref:typename:void (*)(void)	file:
fn	kernel/sched.c	/^	void (*fn)();$/;"	m	language:C	struct:timer_list	typeref:typename:void (*)()	file:	access:public
fn	kernel/sched.c	/^void add_timer(long jiffies, void (*fn)(void))$/;"	z	language:C	function:add_timer	typeref:typename:void (*)(void)	file:
fn_ptr	include/linux/sched.h	/^typedef int (*fn_ptr)();$/;"	t	language:C++	typeref:typename:int (*)()
foo	include/linux/sched.h	/^	long	foo;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
fork.o	kernel/Makefile	/^fork.s fork.o : fork.c ..\/include\/errno.h ..\/include\/linux\/sched.h \\$/;"	t	language:Make
fork.s	kernel/Makefile	/^fork.s fork.o : fork.c ..\/include\/errno.h ..\/include\/linux\/sched.h \\$/;"	t	language:Make
fos	include/linux/sched.h	/^	long	fos;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
found	lib/malloc.c	/^found:$/;"	L	language:C	function:free_s	file:
free	fs/super.c	/^	int i,free;$/;"	l	language:C	function:mount_root	typeref:typename:int	file:
free	include/linux/kernel.h	/^#define free(x) free_/;"	d	language:C++	signature:(x)
free	mm/memory.c	/^	int i,j,k,free=0;$/;"	l	language:C	function:calc_mem	typeref:typename:int	file:
free_block	fs/bitmap.c	/^void free_block(int dev, int block)$/;"	f	language:C	typeref:typename:void	signature:(int dev,int block)
free_bucket_desc	lib/malloc.c	/^struct bucket_desc *free_bucket_desc = (struct bucket_desc *) 0;$/;"	v	language:C	typeref:struct:bucket_desc *
free_dind	fs/truncate.c	/^static void free_dind(int dev,int block)$/;"	f	language:C	typeref:typename:void	file:	signature:(int dev,int block)
free_ind	fs/truncate.c	/^static void free_ind(int dev,int block)$/;"	f	language:C	typeref:typename:void	file:	signature:(int dev,int block)
free_inode	fs/bitmap.c	/^void free_inode(struct m_inode * inode)$/;"	f	language:C	typeref:typename:void	signature:(struct m_inode * inode)
free_list	fs/buffer.c	/^static struct buffer_head * free_list;$/;"	v	language:C	typeref:struct:buffer_head *	file:
free_page	mm/memory.c	/^void free_page(unsigned long addr)$/;"	f	language:C	typeref:typename:void	signature:(unsigned long addr)
free_page_tables	mm/memory.c	/^int free_page_tables(unsigned long from,unsigned long size)$/;"	f	language:C	typeref:typename:int	signature:(unsigned long from,unsigned long size)
free_s	lib/malloc.c	/^void free_s(void *obj, int size)$/;"	f	language:C	typeref:typename:void	signature:(void * obj,int size)
free_super	fs/super.c	/^static void free_super(struct super_block * sb)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct super_block * sb)
freeptr	lib/malloc.c	/^	void			*freeptr;$/;"	m	language:C	struct:bucket_desc	typeref:typename:void *	file:	access:public
from	fs/buffer.c	/^#define COPYBLK(from,to) \\$/;"	D	language:C	macro:COPYBLK
from	kernel/blk_drv/floppy.c	/^#define copy_buffer(from,to) \\$/;"	D	language:C	macro:copy_buffer
from	kernel/signal.c	/^static inline void get_new(char * from,char * to)$/;"	z	language:C	function:get_new	typeref:typename:char *	file:
from	kernel/signal.c	/^static inline void save_old(char * from,char * to)$/;"	z	language:C	function:save_old	typeref:typename:char *	file:
from	mm/memory.c	/^	unsigned long from;$/;"	l	language:C	function:try_to_share	typeref:typename:unsigned long	file:
from	mm/memory.c	/^#define copy_page(from,to) \\$/;"	D	language:C	macro:copy_page
from	mm/memory.c	/^int copy_page_tables(unsigned long from,unsigned long to,long size)$/;"	z	language:C	function:copy_page_tables	typeref:typename:unsigned long	file:
from	mm/memory.c	/^int free_page_tables(unsigned long from,unsigned long size)$/;"	z	language:C	function:free_page_tables	typeref:typename:unsigned long	file:
from_dir	mm/memory.c	/^	unsigned long * from_dir, * to_dir;$/;"	l	language:C	function:copy_page_tables	typeref:typename:unsigned long *	file:
from_kmem	fs/exec.c	/^		unsigned long p, int from_kmem)$/;"	z	language:C	function:copy_strings	typeref:typename:int	file:
from_page	mm/memory.c	/^	unsigned long from_page;$/;"	l	language:C	function:try_to_share	typeref:typename:unsigned long	file:
from_page_table	mm/memory.c	/^	unsigned long * from_page_table;$/;"	l	language:C	function:copy_page_tables	typeref:typename:unsigned long *	file:
fs	include/linux/sched.h	/^	long	fs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
fs	kernel/fork.c	/^		long fs,long es,long ds,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
fs	kernel/math/math_emulate.c	/^	unsigned short fs,unsigned short es,unsigned short ds,$/;"	z	language:C	function:math_emulate	typeref:typename:unsigned short	file:
fs	kernel/signal.c	/^	long fs, long es, long ds,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
fs	kernel/traps.c	/^		long fs,long es,long ds,$/;"	z	language:C	function:do_int3	typeref:typename:long	file:
fs.o	fs/Makefile	/^fs.o: $(OBJS)$/;"	t	language:Make
fs/fs.o	Makefile	/^fs\/fs.o:$/;"	t	language:Make
func	kernel/chr_drv/keyboard.S	/^func:$/;"	l	language:Asm
func_table	kernel/chr_drv/keyboard.S	/^func_table:$/;"	l	language:Asm
gap	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned char	file:	access:public
gate_addr	include/asm/system.h	/^#define _set_gate(gate_addr,type,dpl,addr) \\$/;"	D	language:C++	macro:_set_gate
gate_addr	include/asm/system.h	/^#define _set_seg_desc(gate_addr,type,dpl,base,limit) {\\$/;"	D	language:C++	macro:_set_seg_desc
gdt	include/linux/head.h	/^extern desc_table idt,gdt;$/;"	x	language:C++	typeref:typename:desc_table
get_base	include/linux/sched.h	/^#define get_base(ldt) _get_base(/;"	d	language:C++	signature:(ldt)
get_dir	fs/namei.c	/^static struct m_inode * get_dir(const char * pathname)$/;"	f	language:C	typeref:struct:m_inode *	file:	signature:(const char * pathname)
get_ds	include/asm/segment.h	/^extern inline unsigned long get_ds() $/;"	f	language:C++	typeref:typename:unsigned long	signature:()
get_empty_inode	fs/inode.c	/^struct m_inode * get_empty_inode(void)$/;"	f	language:C	typeref:struct:m_inode *	signature:(void)
get_empty_page	mm/memory.c	/^void get_empty_page(unsigned long address)$/;"	f	language:C	typeref:typename:void	signature:(unsigned long address)
get_free_page	mm/memory.c	/^unsigned long get_free_page(void)$/;"	f	language:C	typeref:typename:unsigned long	signature:(void)
get_fs	include/asm/segment.h	/^extern inline unsigned long get_fs() $/;"	f	language:C++	typeref:typename:unsigned long	signature:()
get_fs_byte	include/asm/segment.h	/^extern inline unsigned char get_fs_byte(const char * addr)$/;"	f	language:C++	typeref:typename:unsigned char	signature:(const char * addr)
get_fs_long	include/asm/segment.h	/^extern inline unsigned long get_fs_long(const unsigned long *addr)$/;"	f	language:C++	typeref:typename:unsigned long	signature:(const unsigned long * addr)
get_fs_word	include/asm/segment.h	/^extern inline unsigned short get_fs_word(const unsigned short *addr)$/;"	f	language:C++	typeref:typename:unsigned short	signature:(const unsigned short * addr)
get_hash_table	fs/buffer.c	/^struct buffer_head * get_hash_table(int dev, int block)$/;"	f	language:C	typeref:struct:buffer_head *	signature:(int dev,int block)
get_limit	include/linux/sched.h	/^#define get_limit(/;"	d	language:C++	signature:(segment)
get_new	kernel/signal.c	/^static inline void get_new(char * from,char * to)$/;"	f	language:C	typeref:typename:void	file:	signature:(char * from,char * to)
get_pipe_inode	fs/inode.c	/^struct m_inode * get_pipe_inode(void)$/;"	f	language:C	typeref:struct:m_inode *	signature:(void)
get_seg_byte	kernel/traps.c	/^#define get_seg_byte(/;"	d	language:C	file:	signature:(seg,addr)
get_seg_long	kernel/traps.c	/^#define get_seg_long(/;"	d	language:C	file:	signature:(seg,addr)
get_super	fs/super.c	/^struct super_block * get_super(int dev)$/;"	f	language:C	typeref:struct:super_block *	signature:(int dev)
get_termio	kernel/chr_drv/tty_ioctl.c	/^static int get_termio(struct tty_struct * tty, struct termio * termio)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct tty_struct * tty,struct termio * termio)
get_termios	kernel/chr_drv/tty_ioctl.c	/^static int get_termios(struct tty_struct * tty, struct termios * termios)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct tty_struct * tty,struct termios * termios)
getblk	fs/buffer.c	/^struct buffer_head * getblk(int dev,int block)$/;"	f	language:C	typeref:struct:buffer_head *	signature:(int dev,int block)
gid	fs/open.c	/^int sys_chown(const char * filename,int uid,int gid)$/;"	z	language:C	function:sys_chown	typeref:typename:int	file:
gid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
gid	kernel/sys.c	/^int sys_setgid(int gid)$/;"	z	language:C	function:sys_setgid	typeref:typename:int	file:
gid_t	include/sys/types.h	/^typedef unsigned char gid_t;$/;"	t	language:C++	typeref:typename:unsigned char
gotoxy	kernel/chr_drv/console.c	/^static inline void gotoxy(unsigned int new_x,unsigned int new_y)$/;"	f	language:C	typeref:typename:void	file:	signature:(unsigned int new_x,unsigned int new_y)
granularity	boot/setup.s	/^	.word	0x00C0		! granularity=4096, 386$/;"	g	language:R
gs	include/linux/sched.h	/^	long	gs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
gs	kernel/fork.c	/^int copy_process(int nr,long ebp,long edi,long esi,long gs,long none,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
h	fs/buffer.c	/^	struct buffer_head * h = start_buffer;$/;"	l	language:C	function:buffer_init	typeref:struct:buffer_head *	file:
handler	kernel/signal.c	/^int sys_signal(int signum, long handler, long restorer)$/;"	z	language:C	function:sys_signal	typeref:typename:long	file:
hash	fs/buffer.c	/^#define hash(dev,block) hash_table[_hashf/;"	d	language:C	file:	signature:(dev,block)
hash_table	fs/buffer.c	/^struct buffer_head * hash_table[NR_HASH];$/;"	v	language:C	typeref:struct:buffer_head * []
hd	kernel/blk_drv/hd.c	/^} hd[5*MAX_HD]={{0,0},};$/;"	v	language:C	typeref:struct:hd_struct[]
hd.o	kernel/blk_drv/Makefile	/^hd.s hd.o : hd.c ..\/..\/include\/linux\/config.h ..\/..\/include\/linux\/sched.h \\$/;"	t	language:Make
hd.s	kernel/blk_drv/Makefile	/^hd.s hd.o : hd.c ..\/..\/include\/linux\/config.h ..\/..\/include\/linux\/sched.h \\$/;"	t	language:Make
hd_i_struct	kernel/blk_drv/hd.c	/^struct hd_i_struct {$/;"	s	language:C	file:
hd_i_struct::ctl	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
hd_i_struct::cyl	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
hd_i_struct::head	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
hd_i_struct::lzone	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
hd_i_struct::sect	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
hd_i_struct::wpcom	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
hd_info	kernel/blk_drv/hd.c	/^struct hd_i_struct hd_info[] = { HD_TYPE };$/;"	v	language:C	typeref:struct:hd_i_struct[]
hd_info	kernel/blk_drv/hd.c	/^struct hd_i_struct hd_info[] = { {0,0,0,0,0,0},{0,0,0,0,0,0} };$/;"	v	language:C	typeref:struct:hd_i_struct[]
hd_init	kernel/blk_drv/hd.c	/^void hd_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
hd_out	kernel/blk_drv/hd.c	/^static void hd_out(unsigned int drive,unsigned int nsect,unsigned int sect,$/;"	f	language:C	typeref:typename:void	file:	signature:(unsigned int drive,unsigned int nsect,unsigned int sect,unsigned int head,unsigned int cyl,unsigned int cmd,void (* intr_addr)(void))
hd_struct	kernel/blk_drv/hd.c	/^static struct hd_struct {$/;"	s	language:C	file:
hd_struct::nr_sects	kernel/blk_drv/hd.c	/^	long nr_sects;$/;"	m	language:C	struct:hd_struct	typeref:typename:long	file:	access:public
hd_struct::start_sect	kernel/blk_drv/hd.c	/^	long start_sect;$/;"	m	language:C	struct:hd_struct	typeref:typename:long	file:	access:public
head	include/linux/fs.h	/^#define INC_PIPE(head) \\$/;"	D	language:C++	macro:INC_PIPE
head	include/linux/hdreg.h	/^	unsigned char head;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
head	include/linux/tty.h	/^	unsigned long head;$/;"	m	language:C++	struct:tty_queue	typeref:typename:unsigned long	access:public
head	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned int	file:	access:public
head	kernel/blk_drv/floppy.c	/^static unsigned char head = 0;$/;"	v	language:C	typeref:typename:unsigned char	file:
head	kernel/blk_drv/hd.c	/^		unsigned int head,unsigned int cyl,unsigned int cmd,$/;"	z	language:C	function:hd_out	typeref:typename:unsigned int	file:
head	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
head	kernel/blk_drv/hd.c	/^	unsigned int sec,head,cyl;$/;"	l	language:C	function:do_hd_request	typeref:typename:unsigned int	file:
head	kernel/chr_drv/keyboard.S	/^head = 4$/;"	d	language:Asm
head	kernel/chr_drv/rs_io.s	/^head = 4$/;"	d	language:Asm
i	fs/bitmap.c	/^	int i,j;$/;"	l	language:C	function:new_block	typeref:typename:int	file:
i	fs/bitmap.c	/^	int i,j;$/;"	l	language:C	function:new_inode	typeref:typename:int	file:
i	fs/buffer.c	/^	int i;$/;"	l	language:C	function:bread_page	typeref:typename:int	file:
i	fs/buffer.c	/^	int i;$/;"	l	language:C	function:buffer_init	typeref:typename:int	file:
i	fs/buffer.c	/^	int i;$/;"	l	language:C	function:check_disk_change	typeref:typename:int	file:
i	fs/buffer.c	/^	int i;$/;"	l	language:C	function:invalidate_buffers	typeref:typename:int	file:
i	fs/buffer.c	/^	int i;$/;"	l	language:C	function:sync_dev	typeref:typename:int	file:
i	fs/buffer.c	/^	int i;$/;"	l	language:C	function:sys_sync	typeref:typename:int	file:
i	fs/char_dev.c	/^	int i=*pos;$/;"	l	language:C	function:rw_port	typeref:typename:int	file:
i	fs/exec.c	/^	int i,argc,envc;$/;"	l	language:C	function:do_execve	typeref:typename:int	file:
i	fs/exec.c	/^	int i;$/;"	l	language:C	function:change_ldt	typeref:typename:int	file:
i	fs/exec.c	/^	int i=0;$/;"	l	language:C	function:count	typeref:typename:int	file:
i	fs/file_dev.c	/^	int i=0;$/;"	l	language:C	function:file_write	typeref:typename:int	file:
i	fs/inode.c	/^			int i;$/;"	l	language:C	function:iget	typeref:typename:int	file:
i	fs/inode.c	/^	int i;$/;"	l	language:C	function:_bmap	typeref:typename:int	file:
i	fs/inode.c	/^	int i;$/;"	l	language:C	function:get_empty_inode	typeref:typename:int	file:
i	fs/inode.c	/^	int i;$/;"	l	language:C	function:invalidate_inodes	typeref:typename:int	file:
i	fs/inode.c	/^	int i;$/;"	l	language:C	function:sync_inodes	typeref:typename:int	file:
i	fs/namei.c	/^	int block,i;$/;"	l	language:C	function:add_entry	typeref:typename:int	file:
i	fs/namei.c	/^	int block,i;$/;"	l	language:C	function:find_entry	typeref:typename:int	file:
i	fs/open.c	/^	int i,fd;$/;"	l	language:C	function:sys_open	typeref:typename:int	file:
i	fs/pipe.c	/^	int i,j;$/;"	l	language:C	function:sys_pipe	typeref:typename:int	file:
i	fs/stat.c	/^	int i;$/;"	l	language:C	function:cp_stat	typeref:typename:int	file:
i	fs/super.c	/^	int i,block;$/;"	l	language:C	function:read_super	typeref:typename:int	file:
i	fs/super.c	/^	int i,free;$/;"	l	language:C	function:mount_root	typeref:typename:int	file:
i	fs/super.c	/^	int i;$/;"	l	language:C	function:put_super	typeref:typename:int	file:
i	fs/truncate.c	/^	int i;$/;"	l	language:C	function:free_dind	typeref:typename:int	file:
i	fs/truncate.c	/^	int i;$/;"	l	language:C	function:free_ind	typeref:typename:int	file:
i	fs/truncate.c	/^	int i;$/;"	l	language:C	function:truncate	typeref:typename:int	file:
i	init/main.c	/^	int i;$/;"	l	language:C	function:printf	typeref:typename:int	file:
i	init/main.c	/^	int pid,i;$/;"	l	language:C	function:init	typeref:typename:int	file:
i	kernel/blk_drv/floppy.c	/^	int i = 0, counter, status;$/;"	l	language:C	function:result	typeref:typename:int	file:
i	kernel/blk_drv/floppy.c	/^	int i;$/;"	l	language:C	function:reset_floppy	typeref:typename:int	file:
i	kernel/blk_drv/hd.c	/^	int	i;$/;"	l	language:C	function:reset_controller	typeref:typename:int	file:
i	kernel/blk_drv/hd.c	/^	int i,drive;$/;"	l	language:C	function:sys_setup	typeref:typename:int	file:
i	kernel/blk_drv/hd.c	/^	int i,r;$/;"	l	language:C	function:do_hd_request	typeref:typename:int	file:
i	kernel/blk_drv/hd.c	/^	int i=inb_p(HD_STATUS);$/;"	l	language:C	function:win_result	typeref:typename:int	file:
i	kernel/blk_drv/hd.c	/^	unsigned int i;$/;"	l	language:C	function:drive_busy	typeref:typename:unsigned int	file:
i	kernel/blk_drv/ll_rw_blk.c	/^	int i;$/;"	l	language:C	function:blk_dev_init	typeref:typename:int	file:
i	kernel/blk_drv/ramdisk.c	/^	int		i = 1;$/;"	l	language:C	function:rd_load	typeref:typename:int	file:
i	kernel/blk_drv/ramdisk.c	/^	int	i;$/;"	l	language:C	function:rd_init	typeref:typename:int	file:
i	kernel/chr_drv/console.c	/^	int i;$/;"	l	language:C	function:csi_m	typeref:typename:int	file:
i	kernel/chr_drv/console.c	/^	int i;$/;"	l	language:C	function:delete_char	typeref:typename:int	file:
i	kernel/chr_drv/console.c	/^	int i=x;$/;"	l	language:C	function:insert_char	typeref:typename:int	file:
i	kernel/chr_drv/tty_io.c	/^	int i;$/;"	l	language:C	function:tty_intr	typeref:typename:int	file:
i	kernel/chr_drv/tty_ioctl.c	/^	int i;$/;"	l	language:C	function:get_termio	typeref:typename:int	file:
i	kernel/chr_drv/tty_ioctl.c	/^	int i;$/;"	l	language:C	function:get_termios	typeref:typename:int	file:
i	kernel/chr_drv/tty_ioctl.c	/^	int i;$/;"	l	language:C	function:set_termio	typeref:typename:int	file:
i	kernel/chr_drv/tty_ioctl.c	/^	int i;$/;"	l	language:C	function:set_termios	typeref:typename:int	file:
i	kernel/exit.c	/^	int i;$/;"	l	language:C	function:do_exit	typeref:typename:int	file:
i	kernel/exit.c	/^	int i;$/;"	l	language:C	function:release	typeref:typename:int	file:
i	kernel/exit.c	/^	int i;$/;"	l	language:C	function:tell_father	typeref:typename:int	file:
i	kernel/fork.c	/^	int i;$/;"	l	language:C	function:copy_process	typeref:typename:int	file:
i	kernel/fork.c	/^	int i;$/;"	l	language:C	function:find_empty_process	typeref:typename:int	file:
i	kernel/printk.c	/^	int i;$/;"	l	language:C	function:printk	typeref:typename:int	file:
i	kernel/sched.c	/^	int i,j = 4096-sizeof(struct task_struct);$/;"	l	language:C	function:show_task	typeref:typename:int	file:
i	kernel/sched.c	/^	int i,next,c;$/;"	l	language:C	function:schedule	typeref:typename:int	file:
i	kernel/sched.c	/^	int i;$/;"	l	language:C	function:do_floppy_timer	typeref:typename:int	file:
i	kernel/sched.c	/^	int i;$/;"	l	language:C	function:sched_init	typeref:typename:int	file:
i	kernel/sched.c	/^	int i;$/;"	l	language:C	function:show_stat	typeref:typename:int	file:
i	kernel/signal.c	/^	int i;$/;"	l	language:C	function:get_new	typeref:typename:int	file:
i	kernel/signal.c	/^	int i;$/;"	l	language:C	function:save_old	typeref:typename:int	file:
i	kernel/sys.c	/^	int i;$/;"	l	language:C	function:sys_setpgid	typeref:typename:int	file:
i	kernel/sys.c	/^	int i;$/;"	l	language:C	function:sys_time	typeref:typename:int	file:
i	kernel/sys.c	/^	int i;$/;"	l	language:C	function:sys_uname	typeref:typename:int	file:
i	kernel/traps.c	/^	int i;$/;"	l	language:C	function:die	typeref:typename:int	file:
i	kernel/traps.c	/^	int i;$/;"	l	language:C	function:trap_init	typeref:typename:int	file:
i	kernel/vsprintf.c	/^	int i;$/;"	l	language:C	function:number	typeref:typename:int	file:
i	kernel/vsprintf.c	/^	int i;$/;"	l	language:C	function:vsprintf	typeref:typename:int	file:
i	kernel/vsprintf.c	/^	int i=0;$/;"	l	language:C	function:skip_atoi	typeref:typename:int	file:
i	lib/malloc.c	/^		int		i;$/;"	l	language:C	function:malloc	typeref:typename:int	file:
i	lib/malloc.c	/^	int	i;$/;"	l	language:C	function:init_bucket_desc	typeref:typename:int	file:
i	mm/memory.c	/^	int block,i;$/;"	l	language:C	function:do_no_page	typeref:typename:int	file:
i	mm/memory.c	/^	int i,j,k,free=0;$/;"	l	language:C	function:calc_mem	typeref:typename:int	file:
i	mm/memory.c	/^	int i;$/;"	l	language:C	function:mem_init	typeref:typename:int	file:
i	tools/build.c	/^	int i,c,id;$/;"	l	language:C	function:main	typeref:typename:int	file:
i387	include/linux/sched.h	/^	struct i387_struct i387;$/;"	m	language:C++	struct:tss_struct	typeref:struct:i387_struct	access:public
i387_struct	include/linux/sched.h	/^struct i387_struct {$/;"	s	language:C++
i387_struct::cwd	include/linux/sched.h	/^	long	cwd;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
i387_struct::fcs	include/linux/sched.h	/^	long	fcs;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
i387_struct::fip	include/linux/sched.h	/^	long	fip;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
i387_struct::foo	include/linux/sched.h	/^	long	foo;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
i387_struct::fos	include/linux/sched.h	/^	long	fos;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
i387_struct::st_space	include/linux/sched.h	/^	long	st_space[20];	\/* 8*10 bytes for each FP-reg = 80 bytes *\/$/;"	m	language:C++	struct:i387_struct	typeref:typename:long[20]	access:public
i387_struct::swd	include/linux/sched.h	/^	long	swd;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
i387_struct::twd	include/linux/sched.h	/^	long	twd;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
i_arg	fs/exec.c	/^		char buf[1023], *cp, *interp, *i_name, *i_arg;$/;"	l	language:C	function:do_execve	typeref:typename:char *	file:
i_atime	include/linux/fs.h	/^	unsigned long i_atime;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned long	access:public
i_count	include/linux/fs.h	/^	unsigned short i_count;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short	access:public
i_ctime	include/linux/fs.h	/^	unsigned long i_ctime;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned long	access:public
i_dev	include/linux/fs.h	/^	unsigned short i_dev;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short	access:public
i_dirt	include/linux/fs.h	/^	unsigned char i_dirt;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
i_gid	include/linux/fs.h	/^	unsigned char i_gid;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned char	access:public
i_gid	include/linux/fs.h	/^	unsigned char i_gid;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
i_lock	include/linux/fs.h	/^	unsigned char i_lock;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
i_mode	fs/open.c	/^	int res, i_mode;$/;"	l	language:C	function:sys_access	typeref:typename:int	file:
i_mode	include/linux/fs.h	/^	unsigned short i_mode;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned short	access:public
i_mode	include/linux/fs.h	/^	unsigned short i_mode;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short	access:public
i_mount	include/linux/fs.h	/^	unsigned char i_mount;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
i_mtime	include/linux/fs.h	/^	unsigned long i_mtime;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned long	access:public
i_name	fs/exec.c	/^		char buf[1023], *cp, *interp, *i_name, *i_arg;$/;"	l	language:C	function:do_execve	typeref:typename:char *	file:
i_nlinks	include/linux/fs.h	/^	unsigned char i_nlinks;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned char	access:public
i_nlinks	include/linux/fs.h	/^	unsigned char i_nlinks;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
i_num	include/linux/fs.h	/^	unsigned short i_num;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short	access:public
i_pipe	include/linux/fs.h	/^	unsigned char i_pipe;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
i_seek	include/linux/fs.h	/^	unsigned char i_seek;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
i_size	include/linux/fs.h	/^	unsigned long i_size;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned long	access:public
i_size	include/linux/fs.h	/^	unsigned long i_size;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned long	access:public
i_time	include/linux/fs.h	/^	unsigned long i_time;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned long	access:public
i_uid	include/linux/fs.h	/^	unsigned short i_uid;$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned short	access:public
i_uid	include/linux/fs.h	/^	unsigned short i_uid;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short	access:public
i_update	include/linux/fs.h	/^	unsigned char i_update;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
i_wait	include/linux/fs.h	/^	struct task_struct * i_wait;$/;"	m	language:C++	struct:m_inode	typeref:struct:task_struct *	access:public
i_zone	include/linux/fs.h	/^	unsigned short i_zone[9];$/;"	m	language:C++	struct:d_inode	typeref:typename:unsigned short[9]	access:public
i_zone	include/linux/fs.h	/^	unsigned short i_zone[9];$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short[9]	access:public
id	tools/build.c	/^	int i,c,id;$/;"	l	language:C	function:main	typeref:typename:int	file:
idev	fs/namei.c	/^	int namelen,inr,idev;$/;"	l	language:C	function:get_dir	typeref:typename:int	file:
idt	include/linux/head.h	/^extern desc_table idt,gdt;$/;"	x	language:C++	typeref:typename:desc_table
iget	fs/inode.c	/^struct m_inode * iget(int dev,int nr)$/;"	f	language:C	typeref:struct:m_inode *	signature:(int dev,int nr)
immoutb_p	kernel/blk_drv/floppy.c	/^#define immoutb_p(/;"	d	language:C	file:	signature:(val,port)
inb	include/asm/io.h	/^#define inb(/;"	d	language:C++	signature:(port)
inb_p	include/asm/io.h	/^#define inb_p(/;"	d	language:C++	signature:(port)
increment	kernel/sched.c	/^int sys_nice(long increment)$/;"	z	language:C	function:sys_nice	typeref:typename:long	file:
init	init/main.c	/^void init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
init	kernel/chr_drv/serial.c	/^static void init(int port)$/;"	f	language:C	typeref:typename:void	file:	signature:(int port)
init/main.o	Makefile	/^init\/main.o : init\/main.c include\/unistd.h include\/sys\/stat.h \\$/;"	t	language:Make
init_bucket_desc	lib/malloc.c	/^static inline void init_bucket_desc()$/;"	f	language:C	typeref:typename:void	file:	signature:()
init_task	kernel/sched.c	/^static union task_union init_task = {INIT_TASK,};$/;"	v	language:C	typeref:union:task_union	file:
inline	lib/string.c	/^#define inline$/;"	d	language:C	file:
ino_t	include/sys/types.h	/^typedef unsigned short ino_t;$/;"	t	language:C++	typeref:typename:unsigned short
inode	fs/bitmap.c	/^	struct m_inode * inode;$/;"	l	language:C	function:new_inode	typeref:struct:m_inode *	file:
inode	fs/bitmap.c	/^void free_inode(struct m_inode * inode)$/;"	z	language:C	function:free_inode	typeref:struct:m_inode *	file:
inode	fs/exec.c	/^	struct m_inode * inode;$/;"	l	language:C	function:do_execve	typeref:struct:m_inode *	file:
inode	fs/file_dev.c	/^int file_read(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	z	language:C	function:file_read	typeref:struct:m_inode *	file:
inode	fs/file_dev.c	/^int file_write(struct m_inode * inode, struct file * filp, char * buf, int count)$/;"	z	language:C	function:file_write	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^	struct m_inode * inode, * empty;$/;"	l	language:C	function:iget	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^	struct m_inode * inode;$/;"	l	language:C	function:get_empty_inode	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^	struct m_inode * inode;$/;"	l	language:C	function:get_pipe_inode	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^	struct m_inode * inode;$/;"	l	language:C	function:invalidate_inodes	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sync_inodes	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^int bmap(struct m_inode * inode,int block)$/;"	z	language:C	function:bmap	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^int create_block(struct m_inode * inode, int block)$/;"	z	language:C	function:create_block	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^static inline void lock_inode(struct m_inode * inode)$/;"	z	language:C	function:lock_inode	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^static inline void unlock_inode(struct m_inode * inode)$/;"	z	language:C	function:unlock_inode	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^static inline void wait_on_inode(struct m_inode * inode)$/;"	z	language:C	function:wait_on_inode	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^static int _bmap(struct m_inode * inode,int block,int create)$/;"	z	language:C	function:_bmap	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^static void read_inode(struct m_inode * inode)$/;"	z	language:C	function:read_inode	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^static void write_inode(struct m_inode * inode)$/;"	z	language:C	function:write_inode	typeref:struct:m_inode *	file:
inode	fs/inode.c	/^void iput(struct m_inode * inode)$/;"	z	language:C	function:iput	typeref:struct:m_inode *	file:
inode	fs/namei.c	/^	struct m_inode * dir, * inode;$/;"	l	language:C	function:sys_mkdir	typeref:struct:m_inode *	file:
inode	fs/namei.c	/^	struct m_inode * dir, * inode;$/;"	l	language:C	function:sys_mknod	typeref:struct:m_inode *	file:
inode	fs/namei.c	/^	struct m_inode * dir, * inode;$/;"	l	language:C	function:sys_rmdir	typeref:struct:m_inode *	file:
inode	fs/namei.c	/^	struct m_inode * dir, * inode;$/;"	l	language:C	function:sys_unlink	typeref:struct:m_inode *	file:
inode	fs/namei.c	/^	struct m_inode * dir, *inode;$/;"	l	language:C	function:open_namei	typeref:struct:m_inode *	file:
inode	fs/namei.c	/^	struct m_inode * inode;$/;"	l	language:C	function:get_dir	typeref:struct:m_inode *	file:
inode	fs/namei.c	/^static int empty_dir(struct m_inode * inode)$/;"	z	language:C	function:empty_dir	typeref:struct:m_inode *	file:
inode	fs/namei.c	/^static int permission(struct m_inode * inode,int mask)$/;"	z	language:C	function:permission	typeref:struct:m_inode *	file:
inode	fs/open.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_access	typeref:struct:m_inode *	file:
inode	fs/open.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_chdir	typeref:struct:m_inode *	file:
inode	fs/open.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_chmod	typeref:struct:m_inode *	file:
inode	fs/open.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_chown	typeref:struct:m_inode *	file:
inode	fs/open.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_chroot	typeref:struct:m_inode *	file:
inode	fs/open.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_open	typeref:struct:m_inode *	file:
inode	fs/open.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_utime	typeref:struct:m_inode *	file:
inode	fs/pipe.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_pipe	typeref:struct:m_inode *	file:
inode	fs/pipe.c	/^int read_pipe(struct m_inode * inode, char * buf, int count)$/;"	z	language:C	function:read_pipe	typeref:struct:m_inode *	file:
inode	fs/pipe.c	/^int write_pipe(struct m_inode * inode, char * buf, int count)$/;"	z	language:C	function:write_pipe	typeref:struct:m_inode *	file:
inode	fs/read_write.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_read	typeref:struct:m_inode *	file:
inode	fs/read_write.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_write	typeref:struct:m_inode *	file:
inode	fs/stat.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_fstat	typeref:struct:m_inode *	file:
inode	fs/stat.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_stat	typeref:struct:m_inode *	file:
inode	fs/stat.c	/^static void cp_stat(struct m_inode * inode, struct stat * statbuf)$/;"	z	language:C	function:cp_stat	typeref:struct:m_inode *	file:
inode	fs/super.c	/^	struct m_inode * inode;$/;"	l	language:C	function:put_super	typeref:struct:m_inode *	file:
inode	fs/super.c	/^	struct m_inode * inode;$/;"	l	language:C	function:sys_umount	typeref:struct:m_inode *	file:
inode	fs/truncate.c	/^void truncate(struct m_inode * inode)$/;"	z	language:C	function:truncate	typeref:struct:m_inode *	file:
inode	include/linux/fs.h	/^	unsigned short inode;$/;"	m	language:C++	struct:dir_entry	typeref:typename:unsigned short	access:public
inode	include/linux/fs.h	/^#define PIPE_EMPTY(inode) (PIPE_HEAD(inode)==PIPE_TAIL(inode))$/;"	D	language:C++	macro:PIPE_EMPTY
inode	include/linux/fs.h	/^#define PIPE_FULL(inode) (PIPE_SIZE(inode)==(PAGE_SIZE-1))$/;"	D	language:C++	macro:PIPE_FULL
inode	include/linux/fs.h	/^#define PIPE_HEAD(inode) ((inode).i_zone[0])$/;"	D	language:C++	macro:PIPE_HEAD
inode	include/linux/fs.h	/^#define PIPE_SIZE(inode) ((PIPE_HEAD(inode)-PIPE_TAIL(inode))&(PAGE_SIZE-1))$/;"	D	language:C++	macro:PIPE_SIZE
inode	include/linux/fs.h	/^#define PIPE_TAIL(inode) ((inode).i_zone[1])$/;"	D	language:C++	macro:PIPE_TAIL
inode.o	fs/Makefile	/^inode.o : inode.c ..\/include\/string.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
inode_table	fs/inode.c	/^struct m_inode inode_table[NR_INODE]={{0,},};$/;"	v	language:C	typeref:struct:m_inode[]
inode_table	include/linux/fs.h	/^extern struct m_inode inode_table[NR_INODE];$/;"	x	language:C++	typeref:struct:m_inode[]
inr	fs/namei.c	/^	int inr,dev,namelen;$/;"	l	language:C	function:namei	typeref:typename:int	file:
inr	fs/namei.c	/^	int inr,dev,namelen;$/;"	l	language:C	function:open_namei	typeref:typename:int	file:
inr	fs/namei.c	/^	int namelen,inr,idev;$/;"	l	language:C	function:get_dir	typeref:typename:int	file:
insert_char	kernel/chr_drv/console.c	/^static void insert_char(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
insert_into_queues	fs/buffer.c	/^static inline void insert_into_queues(struct buffer_head * bh)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct buffer_head * bh)
insert_line	kernel/chr_drv/console.c	/^static void insert_line(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
interp	fs/exec.c	/^		char buf[1023], *cp, *interp, *i_name, *i_arg;$/;"	l	language:C	function:do_execve	typeref:typename:char *	file:
interruptible_sleep_on	kernel/sched.c	/^void interruptible_sleep_on(struct task_struct **p)$/;"	f	language:C	typeref:typename:void	signature:(struct task_struct ** p)
intr_addr	kernel/blk_drv/hd.c	/^		void (*intr_addr)(void))$/;"	z	language:C	function:hd_out	typeref:typename:void (*)(void)	file:
invalidate	mm/memory.c	/^#define invalidate(/;"	d	language:C	file:	signature:()
invalidate_buffers	fs/buffer.c	/^void inline invalidate_buffers(int dev)$/;"	f	language:C	typeref:typename:void	signature:(int dev)
invalidate_inodes	fs/inode.c	/^void invalidate_inodes(int dev)$/;"	f	language:C	typeref:typename:void	signature:(int dev)
ioctl.o	fs/Makefile	/^ioctl.o : ioctl.c ..\/include\/string.h ..\/include\/errno.h \\$/;"	t	language:Make
ioctl_ptr	fs/ioctl.c	/^typedef int (*ioctl_ptr)(int dev,int cmd,int arg);$/;"	t	language:C	typeref:typename:int (*)(int dev,int cmd,int arg)	file:
ioctl_table	fs/ioctl.c	/^static ioctl_ptr ioctl_table[]={$/;"	v	language:C	typeref:typename:ioctl_ptr[]	file:
ip	kernel/vsprintf.c	/^	int *ip;$/;"	l	language:C	function:vsprintf	typeref:typename:int *	file:
iput	fs/inode.c	/^void iput(struct m_inode * inode)$/;"	f	language:C	typeref:typename:void	signature:(struct m_inode * inode)
iret	include/asm/system.h	/^#define iret() __asm__ ("iret"/;"	d	language:C++	signature:()
is_digit	kernel/vsprintf.c	/^#define is_digit(/;"	d	language:C	file:	signature:(c)
isalnum	include/ctype.h	/^#define isalnum(/;"	d	language:C++	signature:(c)
isalpha	include/ctype.h	/^#define isalpha(/;"	d	language:C++	signature:(c)
isascii	include/ctype.h	/^#define isascii(/;"	d	language:C++	signature:(c)
iscntrl	include/ctype.h	/^#define iscntrl(/;"	d	language:C++	signature:(c)
isdigit	include/ctype.h	/^#define isdigit(/;"	d	language:C++	signature:(c)
isgraph	include/ctype.h	/^#define isgraph(/;"	d	language:C++	signature:(c)
islower	include/ctype.h	/^#define islower(/;"	d	language:C++	signature:(c)
isprint	include/ctype.h	/^#define isprint(/;"	d	language:C++	signature:(c)
ispunct	include/ctype.h	/^#define ispunct(/;"	d	language:C++	signature:(c)
isspace	include/ctype.h	/^#define isspace(/;"	d	language:C++	signature:(c)
isupper	include/ctype.h	/^#define isupper(/;"	d	language:C++	signature:(c)
isxdigit	include/ctype.h	/^#define isxdigit(/;"	d	language:C++	signature:(c)
j	fs/bitmap.c	/^	int i,j;$/;"	l	language:C	function:new_block	typeref:typename:int	file:
j	fs/bitmap.c	/^	int i,j;$/;"	l	language:C	function:new_inode	typeref:typename:int	file:
j	fs/pipe.c	/^	int i,j;$/;"	l	language:C	function:sys_pipe	typeref:typename:int	file:
j	kernel/sched.c	/^	int i,j = 4096-sizeof(struct task_struct);$/;"	l	language:C	function:show_task	typeref:typename:int	file:
j	mm/memory.c	/^	int i,j,k,free=0;$/;"	l	language:C	function:calc_mem	typeref:typename:int	file:
jiffies	include/linux/sched.h	/^extern long volatile jiffies;$/;"	x	language:C++	typeref:typename:long volatile
jiffies	kernel/sched.c	/^	long jiffies;$/;"	m	language:C	struct:timer_list	typeref:typename:long	file:	access:public
jiffies	kernel/sched.c	/^long volatile jiffies=0;$/;"	v	language:C	typeref:typename:long volatile
jiffies	kernel/sched.c	/^void add_timer(long jiffies, void (*fn)(void))$/;"	z	language:C	function:add_timer	typeref:typename:long	file:
jmp_table	kernel/chr_drv/rs_io.s	/^jmp_table:$/;"	l	language:Asm
k	mm/memory.c	/^	int i,j,k,free=0;$/;"	l	language:C	function:calc_mem	typeref:typename:int	file:
kb_wait	kernel/chr_drv/keyboard.S	/^kb_wait:$/;"	l	language:Asm
kernel.o	kernel/Makefile	/^kernel.o: $(OBJS)$/;"	t	language:Make
kernel/blk_drv/blk_drv.a	Makefile	/^kernel\/blk_drv\/blk_drv.a:$/;"	t	language:Make
kernel/chr_drv/chr_drv.a	Makefile	/^kernel\/chr_drv\/chr_drv.a:$/;"	t	language:Make
kernel/kernel.o	Makefile	/^kernel\/kernel.o:$/;"	t	language:Make
kernel/math/math.a	Makefile	/^kernel\/math\/math.a:$/;"	t	language:Make
kernel_mktime	kernel/mktime.c	/^long kernel_mktime(struct tm * tm)$/;"	f	language:C	typeref:typename:long	signature:(struct tm * tm)
key_map	kernel/chr_drv/keyboard.S	/^key_map:$/;"	l	language:Asm
key_table	kernel/chr_drv/keyboard.S	/^key_table:$/;"	l	language:Asm
keyboard.s	kernel/chr_drv/Makefile	/^keyboard.s: keyboard.S ..\/..\/include\/linux\/config.h$/;"	t	language:Make
kill_session	kernel/exit.c	/^static void kill_session(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
l_len	include/fcntl.h	/^	off_t l_len;$/;"	m	language:C++	struct:flock	typeref:typename:off_t	access:public
l_pid	include/fcntl.h	/^	pid_t l_pid;$/;"	m	language:C++	struct:flock	typeref:typename:pid_t	access:public
l_start	include/fcntl.h	/^	off_t l_start;$/;"	m	language:C++	struct:flock	typeref:typename:off_t	access:public
l_type	include/fcntl.h	/^	short l_type;$/;"	m	language:C++	struct:flock	typeref:typename:short	access:public
l_whence	include/fcntl.h	/^	short l_whence;$/;"	m	language:C++	struct:flock	typeref:typename:short	access:public
last_inode	fs/inode.c	/^	static struct m_inode * last_inode = inode_table;$/;"	l	language:C	function:get_empty_inode	typeref:struct:m_inode *	file:
last_pid	kernel/fork.c	/^long last_pid=0;$/;"	v	language:C	typeref:typename:long
last_task_used_math	include/linux/sched.h	/^extern struct task_struct *last_task_used_math;$/;"	x	language:C++	typeref:struct:task_struct *
last_task_used_math	kernel/sched.c	/^struct task_struct *last_task_used_math = NULL;$/;"	v	language:C	typeref:struct:task_struct *
ldiv_t	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	t	language:C++	typeref:struct:__anon96a80d310208
ldt	include/linux/sched.h	/^	long	ldt;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
ldt	include/linux/sched.h	/^	struct desc_struct ldt[3];$/;"	m	language:C++	struct:task_struct	typeref:struct:desc_struct[3]	access:public
ldt	include/linux/sched.h	/^#define get_base(ldt) _get_base( ((char *)&(ldt)) )$/;"	D	language:C++	macro:get_base
ldt	include/linux/sched.h	/^#define set_base(ldt,base) _set_base( ((char *)&(ldt)) , base )$/;"	D	language:C++	macro:set_base
ldt	include/linux/sched.h	/^#define set_limit(ldt,limit) _set_limit( ((char *)&(ldt)) , (limit-1)>>12 )$/;"	D	language:C++	macro:set_limit
leader	include/linux/sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
leds	kernel/chr_drv/keyboard.S	/^leds:	.byte 2		\/* num-lock, caps, scroll-lock mode (nom-lock on) *\/$/;"	l	language:Asm
left	fs/file_dev.c	/^	int left,chars,nr;$/;"	l	language:C	function:file_read	typeref:typename:int	file:
len	fs/exec.c	/^	int len, offset = 0;$/;"	l	language:C	function:copy_strings	typeref:typename:int	file:
len	fs/namei.c	/^	int len;$/;"	l	language:C	function:empty_dir	typeref:typename:int	file:
len	fs/namei.c	/^static int match(int len,const char * name,struct dir_entry * de)$/;"	z	language:C	function:match	typeref:typename:int	file:
len	kernel/blk_drv/ramdisk.c	/^	int	len;$/;"	l	language:C	function:do_rd_request	typeref:typename:int	file:
len	kernel/vsprintf.c	/^	int len;$/;"	l	language:C	function:vsprintf	typeref:typename:int	file:
len	lib/malloc.c	/^void *malloc(unsigned int len)$/;"	z	language:C	function:malloc	typeref:typename:unsigned int	file:
length	kernel/blk_drv/ramdisk.c	/^long rd_init(long mem_start, int length)$/;"	z	language:C	function:rd_init	typeref:typename:int	file:
lf	kernel/chr_drv/console.c	/^static void lf(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
lib.a	lib/Makefile	/^lib.a: $(OBJS)$/;"	t	language:Make
lib/lib.a	Makefile	/^lib\/lib.a:$/;"	t	language:Make
limit	boot/setup.s	/^	.word	0			! idt limit=0$/;"	g	language:R
limit	boot/setup.s	/^	.word	0x07FF		! 8Mb - limit=2047 (2048*4096=8Mb)$/;"	g	language:R
limit	boot/setup.s	/^	.word	0x800		! gdt limit=2048, 256 GDT entries$/;"	g	language:R
limit	boot/setup.s	/^; gdtr的结构如下所示，上面给出了limit=2048$/;"	g	language:R
limit	include/asm/system.h	/^#define _set_seg_desc(gate_addr,type,dpl,base,limit) {\\$/;"	D	language:C++	macro:_set_seg_desc
limit	include/linux/sched.h	/^#define _set_limit(addr,limit) \\$/;"	D	language:C++	macro:_set_limit
limit	include/linux/sched.h	/^#define set_limit(ldt,limit) _set_limit( ((char *)&(ldt)) , (limit-1)>>12 )$/;"	D	language:C++	macro:set_limit
line_status	kernel/chr_drv/rs_io.s	/^line_status:$/;"	l	language:Asm
linux0.11	README.md	/^# linux0.11$/;"	c	language:Markdown
ll_rw_blk.o	kernel/blk_drv/Makefile	/^ll_rw_blk.s ll_rw_blk.o : ll_rw_blk.c ..\/..\/include\/errno.h ..\/..\/include\/linux\/sched.h \\$/;"	t	language:Make
ll_rw_blk.s	kernel/blk_drv/Makefile	/^ll_rw_blk.s ll_rw_blk.o : ll_rw_blk.c ..\/..\/include\/errno.h ..\/..\/include\/linux\/sched.h \\$/;"	t	language:Make
ll_rw_block	kernel/blk_drv/ll_rw_blk.c	/^void ll_rw_block(int rw, struct buffer_head * bh)$/;"	f	language:C	typeref:typename:void	signature:(int rw,struct buffer_head * bh)
lldt	include/linux/sched.h	/^#define lldt(n) __asm__("lldt /;"	d	language:C++	signature:(n)
lock_buffer	kernel/blk_drv/ll_rw_blk.c	/^static inline void lock_buffer(struct buffer_head * bh)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct buffer_head * bh)
lock_inode	fs/inode.c	/^static inline void lock_inode(struct m_inode * inode)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct m_inode * inode)
lock_super	fs/super.c	/^static void lock_super(struct super_block * sb)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct super_block * sb)
longs	kernel/signal.c	/^	int longs;$/;"	l	language:C	function:do_signal	typeref:typename:int	file:
lshift	kernel/chr_drv/keyboard.S	/^lshift:$/;"	l	language:Asm
ltr	include/linux/sched.h	/^#define ltr(n) __asm__("ltr /;"	d	language:C++	signature:(n)
lzone	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
m	include/sys/stat.h	/^#define S_ISBLK(m)	(((m) & S_IFMT) == S_IFBLK)$/;"	D	language:C++	macro:S_ISBLK
m	include/sys/stat.h	/^#define S_ISCHR(m)	(((m) & S_IFMT) == S_IFCHR)$/;"	D	language:C++	macro:S_ISCHR
m	include/sys/stat.h	/^#define S_ISDIR(m)	(((m) & S_IFMT) == S_IFDIR)$/;"	D	language:C++	macro:S_ISDIR
m	include/sys/stat.h	/^#define S_ISFIFO(m)	(((m) & S_IFMT) == S_IFIFO)$/;"	D	language:C++	macro:S_ISFIFO
m	include/sys/stat.h	/^#define S_ISREG(m)	(((m) & S_IFMT) == S_IFREG)$/;"	D	language:C++	macro:S_ISREG
m_inode	include/linux/fs.h	/^struct m_inode {$/;"	s	language:C++
m_inode::i_atime	include/linux/fs.h	/^	unsigned long i_atime;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned long	access:public
m_inode::i_count	include/linux/fs.h	/^	unsigned short i_count;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short	access:public
m_inode::i_ctime	include/linux/fs.h	/^	unsigned long i_ctime;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned long	access:public
m_inode::i_dev	include/linux/fs.h	/^	unsigned short i_dev;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short	access:public
m_inode::i_dirt	include/linux/fs.h	/^	unsigned char i_dirt;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
m_inode::i_gid	include/linux/fs.h	/^	unsigned char i_gid;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
m_inode::i_lock	include/linux/fs.h	/^	unsigned char i_lock;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
m_inode::i_mode	include/linux/fs.h	/^	unsigned short i_mode;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short	access:public
m_inode::i_mount	include/linux/fs.h	/^	unsigned char i_mount;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
m_inode::i_mtime	include/linux/fs.h	/^	unsigned long i_mtime;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned long	access:public
m_inode::i_nlinks	include/linux/fs.h	/^	unsigned char i_nlinks;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
m_inode::i_num	include/linux/fs.h	/^	unsigned short i_num;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short	access:public
m_inode::i_pipe	include/linux/fs.h	/^	unsigned char i_pipe;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
m_inode::i_seek	include/linux/fs.h	/^	unsigned char i_seek;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
m_inode::i_size	include/linux/fs.h	/^	unsigned long i_size;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned long	access:public
m_inode::i_uid	include/linux/fs.h	/^	unsigned short i_uid;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short	access:public
m_inode::i_update	include/linux/fs.h	/^	unsigned char i_update;$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned char	access:public
m_inode::i_wait	include/linux/fs.h	/^	struct task_struct * i_wait;$/;"	m	language:C++	struct:m_inode	typeref:struct:task_struct *	access:public
m_inode::i_zone	include/linux/fs.h	/^	unsigned short i_zone[9];$/;"	m	language:C++	struct:m_inode	typeref:typename:unsigned short[9]	access:public
machine	include/sys/utsname.h	/^	char machine[9];$/;"	m	language:C++	struct:utsname	typeref:typename:char[9]	access:public
main	init/main.c	/^void main(void)		\/* This really IS void, no error here. *\/$/;"	f	language:C	typeref:typename:void	signature:(void)
main	tools/build.c	/^int main(int argc, char ** argv)$/;"	f	language:C	typeref:typename:int	signature:(int argc,char ** argv)
main_memory_start	init/main.c	/^static long main_memory_start = 0;$/;"	v	language:C	typeref:typename:long	file:
major	kernel/blk_drv/ll_rw_blk.c	/^	unsigned int major;$/;"	l	language:C	function:ll_rw_block	typeref:typename:unsigned int	file:
major	kernel/blk_drv/ll_rw_blk.c	/^static void make_request(int major,int rw, struct buffer_head * bh)$/;"	z	language:C	function:make_request	typeref:typename:int	file:
major_root	tools/build.c	/^	char major_root, minor_root;$/;"	l	language:C	function:main	typeref:typename:char	file:
make_request	kernel/blk_drv/ll_rw_blk.c	/^static void make_request(int major,int rw, struct buffer_head * bh)$/;"	f	language:C	typeref:typename:void	file:	signature:(int major,int rw,struct buffer_head * bh)
malloc	lib/malloc.c	/^void *malloc(unsigned int len)$/;"	f	language:C	typeref:typename:void *	signature:(unsigned int len)
malloc.o	lib/Makefile	/^malloc.s malloc.o : malloc.c ..\/include\/linux\/kernel.h ..\/include\/linux\/mm.h \\$/;"	t	language:Make
malloc.s	lib/Makefile	/^malloc.s malloc.o : malloc.c ..\/include\/linux\/kernel.h ..\/include\/linux\/mm.h \\$/;"	t	language:Make
mask	fs/namei.c	/^static int permission(struct m_inode * inode,int mask)$/;"	z	language:C	function:permission	typeref:typename:int	file:
mask	kernel/chr_drv/tty_io.c	/^void tty_intr(struct tty_struct * tty, int mask)$/;"	z	language:C	function:tty_intr	typeref:typename:int	file:
mask	kernel/sched.c	/^	unsigned char mask = 0x10 << nr;$/;"	l	language:C	function:ticks_to_floppy_on	typeref:typename:unsigned char	file:
mask	kernel/sched.c	/^	unsigned char mask = 0x10;$/;"	l	language:C	function:do_floppy_timer	typeref:typename:unsigned char	file:
mask	kernel/sys.c	/^int sys_umask(int mask)$/;"	z	language:C	function:sys_umask	typeref:typename:int	file:
match	fs/namei.c	/^static int match(int len,const char * name,struct dir_entry * de)$/;"	f	language:C	typeref:typename:int	file:	signature:(int len,const char * name,struct dir_entry * de)
math.a	kernel/math/Makefile	/^math.a: $(OBJS)$/;"	t	language:Make
math_emulate	kernel/math/math_emulate.c	/^void math_emulate(long edi, long esi, long ebp, long sys_call_ret,$/;"	f	language:C	typeref:typename:void	signature:(long edi,long esi,long ebp,long sys_call_ret,long eax,long ebx,long ecx,long edx,unsigned short fs,unsigned short es,unsigned short ds,unsigned long eip,unsigned short cs,unsigned long eflags,unsigned short ss,unsigned long esp)
math_error	kernel/math/math_emulate.c	/^void math_error(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
math_state_restore	kernel/sched.c	/^void math_state_restore()$/;"	f	language:C	typeref:typename:void	signature:()
mem_init	mm/memory.c	/^void mem_init(long start_mem, long end_mem)$/;"	f	language:C	typeref:typename:void	signature:(long start_mem,long end_mem)
mem_map	mm/memory.c	/^static unsigned char mem_map [ PAGING_PAGES ] = {0,};$/;"	v	language:C	typeref:typename:unsigned char[]	file:
mem_start	kernel/blk_drv/ramdisk.c	/^long rd_init(long mem_start, int length)$/;"	z	language:C	function:rd_init	typeref:typename:long	file:
memchr	include/string.h	/^extern inline void * memchr(const void * cs,char c,int count)$/;"	f	language:C++	typeref:typename:void *	signature:(const void * cs,char c,int count)
memcmp	include/string.h	/^extern inline int memcmp(const void * cs,const void * ct,int count)$/;"	f	language:C++	typeref:typename:int	signature:(const void * cs,const void * ct,int count)
memcpy	include/asm/memory.h	/^#define memcpy(/;"	d	language:C++	signature:(dest,src,n)
memcpy	include/string.h	/^extern inline void * memcpy(void * dest,const void * src, int n)$/;"	f	language:C++	typeref:typename:void *	signature:(void * dest,const void * src,int n)
memmove	include/string.h	/^extern inline void * memmove(void * dest,const void * src, int n)$/;"	f	language:C++	typeref:typename:void *	signature:(void * dest,const void * src,int n)
memory.o	mm/Makefile	/^memory.o : memory.c ..\/include\/signal.h ..\/include\/sys\/types.h \\$/;"	t	language:Make
memory_end	init/main.c	/^static long memory_end = 0;$/;"	v	language:C	typeref:typename:long	file:
memset	include/string.h	/^extern inline void * memset(void * s,char c,int count)$/;"	f	language:C++	typeref:typename:void *	signature:(void * s,char c,int count)
mi	fs/super.c	/^	struct m_inode * mi;$/;"	l	language:C	function:mount_root	typeref:struct:m_inode *	file:
minimum	kernel/chr_drv/tty_io.c	/^	int minimum,time,flag=0;$/;"	l	language:C	function:tty_read	typeref:typename:int	file:
minor	fs/char_dev.c	/^static int rw_memory(int rw, unsigned minor, char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_memory	typeref:typename:unsigned	file:
minor	fs/char_dev.c	/^static int rw_tty(int rw,unsigned minor,char * buf,int count, off_t * pos)$/;"	z	language:C	function:rw_tty	typeref:typename:unsigned	file:
minor	fs/char_dev.c	/^static int rw_ttyx(int rw,unsigned minor,char * buf,int count,off_t * pos)$/;"	z	language:C	function:rw_ttyx	typeref:typename:unsigned	file:
minor_root	tools/build.c	/^	char major_root, minor_root;$/;"	l	language:C	function:main	typeref:typename:char	file:
minus	kernel/chr_drv/keyboard.S	/^minus:	cmpb $1,e0$/;"	l	language:Asm
mktime.o	kernel/Makefile	/^mktime.s mktime.o : mktime.c ..\/include\/time.h $/;"	t	language:Make
mktime.s	kernel/Makefile	/^mktime.s mktime.o : mktime.c ..\/include\/time.h $/;"	t	language:Make
mm.o	mm/Makefile	/^mm.o: $(OBJS)$/;"	t	language:Make
mm/mm.o	Makefile	/^mm\/mm.o:$/;"	t	language:Make
mode	fs/ioctl.c	/^	int dev,mode;$/;"	l	language:C	function:sys_ioctl	typeref:typename:int	file:
mode	fs/namei.c	/^	int mode = inode->i_mode;$/;"	l	language:C	function:permission	typeref:typename:int	file:
mode	fs/namei.c	/^int open_namei(const char * pathname, int flag, int mode,$/;"	z	language:C	function:open_namei	typeref:typename:int	file:
mode	fs/namei.c	/^int sys_mkdir(const char * pathname, int mode)$/;"	z	language:C	function:sys_mkdir	typeref:typename:int	file:
mode	fs/namei.c	/^int sys_mknod(const char * filename, int mode, int dev)$/;"	z	language:C	function:sys_mknod	typeref:typename:int	file:
mode	fs/open.c	/^int sys_access(const char * filename,int mode)$/;"	z	language:C	function:sys_access	typeref:typename:int	file:
mode	fs/open.c	/^int sys_chmod(const char * filename,int mode)$/;"	z	language:C	function:sys_chmod	typeref:typename:int	file:
mode	fs/open.c	/^int sys_creat(const char * pathname, int mode)$/;"	z	language:C	function:sys_creat	typeref:typename:int	file:
mode	fs/open.c	/^int sys_open(const char * filename,int flag,int mode)$/;"	z	language:C	function:sys_open	typeref:typename:int	file:
mode	kernel/chr_drv/keyboard.S	/^mode:	.byte 0		\/* caps, alt, ctrl and shift mode *\/$/;"	l	language:Asm
mode_t	include/sys/types.h	/^typedef unsigned short mode_t;$/;"	t	language:C++	typeref:typename:unsigned short
modem_status	kernel/chr_drv/rs_io.s	/^modem_status:$/;"	l	language:Asm
modtime	fs/open.c	/^	long actime,modtime;$/;"	l	language:C	function:sys_utime	typeref:typename:long	file:
modtime	include/utime.h	/^	time_t modtime;$/;"	m	language:C++	struct:utimbuf	typeref:typename:time_t	access:public
moff_timer	kernel/sched.c	/^static int moff_timer[4]={0,0,0,0};$/;"	v	language:C	typeref:typename:int[4]	file:
mon_timer	kernel/sched.c	/^static int  mon_timer[4]={0,0,0,0};$/;"	v	language:C	typeref:typename:int[4]	file:
month	kernel/mktime.c	/^static int month[12] = {$/;"	v	language:C	typeref:typename:int[12]	file:
mount_root	fs/super.c	/^void mount_root(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
move_to_user_mode	include/asm/system.h	/^#define move_to_user_mode(/;"	d	language:C++	signature:()
n	include/asm/memory.h	/^#define memcpy(dest,src,n) ({ \\$/;"	D	language:C++	macro:memcpy
n	include/asm/system.h	/^#define _set_tssldt_desc(n,addr,type) \\$/;"	D	language:C++	macro:_set_tssldt_desc
n	include/asm/system.h	/^#define set_intr_gate(n,addr) \\$/;"	D	language:C++	macro:set_intr_gate
n	include/asm/system.h	/^#define set_ldt_desc(n,addr) _set_tssldt_desc(((char *) (n)),addr,"0x82")$/;"	D	language:C++	macro:set_ldt_desc
n	include/asm/system.h	/^#define set_system_gate(n,addr) \\$/;"	D	language:C++	macro:set_system_gate
n	include/asm/system.h	/^#define set_trap_gate(n,addr) \\$/;"	D	language:C++	macro:set_trap_gate
n	include/asm/system.h	/^#define set_tss_desc(n,addr) _set_tssldt_desc(((char *) (n)),addr,"0x89")$/;"	D	language:C++	macro:set_tss_desc
n	include/linux/sched.h	/^#define PAGE_ALIGN(n) (((n)+0xfff)&0xfffff000)$/;"	D	language:C++	macro:PAGE_ALIGN
n	include/linux/sched.h	/^#define _LDT(n) ((((unsigned long) n)<<4)+(FIRST_LDT_ENTRY<<3))$/;"	D	language:C++	macro:_LDT
n	include/linux/sched.h	/^#define _TSS(n) ((((unsigned long) n)<<4)+(FIRST_TSS_ENTRY<<3))$/;"	D	language:C++	macro:_TSS
n	include/linux/sched.h	/^#define lldt(n) __asm__("lldt %%ax"::"a" (_LDT(n)))$/;"	D	language:C++	macro:lldt
n	include/linux/sched.h	/^#define ltr(n) __asm__("ltr %%ax"::"a" (_TSS(n)))$/;"	D	language:C++	macro:ltr
n	include/linux/sched.h	/^#define str(n) \\$/;"	D	language:C++	macro:str
n	include/linux/sched.h	/^#define switch_to(n) {\\$/;"	D	language:C++	macro:switch_to
n	include/string.h	/^extern inline void * memcpy(void * dest,const void * src, int n)$/;"	z	language:C++	function:memcpy	typeref:typename:int	file:
n	include/string.h	/^extern inline void * memmove(void * dest,const void * src, int n)$/;"	z	language:C++	function:memmove	typeref:typename:int	file:
n	kernel/vsprintf.c	/^#define do_div(n,base) ({ \\$/;"	D	language:C	macro:do_div
n_desc	include/a.out.h	/^  short n_desc;$/;"	m	language:C++	struct:nlist	typeref:typename:short	access:public
n_name	include/a.out.h	/^    char *n_name;$/;"	m	language:C++	union:nlist::__anonda5d4bf5010a	typeref:typename:char *	access:public
n_next	include/a.out.h	/^    struct nlist *n_next;$/;"	m	language:C++	union:nlist::__anonda5d4bf5010a	typeref:struct:nlist *	access:public
n_other	include/a.out.h	/^  char n_other;$/;"	m	language:C++	struct:nlist	typeref:typename:char	access:public
n_strx	include/a.out.h	/^    long n_strx;$/;"	m	language:C++	union:nlist::__anonda5d4bf5010a	typeref:typename:long	access:public
n_type	include/a.out.h	/^  unsigned char n_type;$/;"	m	language:C++	struct:nlist	typeref:typename:unsigned char	access:public
n_un	include/a.out.h	/^  } n_un;$/;"	m	language:C++	struct:nlist	typeref:union:nlist::__anonda5d4bf5010a	access:public
n_value	include/a.out.h	/^  unsigned long n_value;$/;"	m	language:C++	struct:nlist	typeref:typename:unsigned long	access:public
name	fs/namei.c	/^	const char * name, int namelen, struct dir_entry ** res_dir)$/;"	z	language:C	function:add_entry	typeref:typename:const char *	file:
name	fs/namei.c	/^	const char * name, int namelen, struct dir_entry ** res_dir)$/;"	z	language:C	function:find_entry	typeref:typename:const char *	file:
name	fs/namei.c	/^	int * namelen, const char ** name)$/;"	z	language:C	function:dir_namei	typeref:typename:const char **	file:
name	fs/namei.c	/^int sys_rmdir(const char * name)$/;"	z	language:C	function:sys_rmdir	typeref:typename:const char *	file:
name	fs/namei.c	/^int sys_unlink(const char * name)$/;"	z	language:C	function:sys_unlink	typeref:typename:const char *	file:
name	fs/namei.c	/^static int match(int len,const char * name,struct dir_entry * de)$/;"	z	language:C	function:match	typeref:typename:const char *	file:
name	include/linux/fs.h	/^	char name[NAME_LEN];$/;"	m	language:C++	struct:dir_entry	typeref:typename:char[]	access:public
name	include/unistd.h	/^#define _syscall0(type,name) \\$/;"	D	language:C++	macro:_syscall0
name	include/unistd.h	/^#define _syscall1(type,name,atype,a) \\$/;"	D	language:C++	macro:_syscall1
name	include/unistd.h	/^#define _syscall2(type,name,atype,a,btype,b) \\$/;"	D	language:C++	macro:_syscall2
name	include/unistd.h	/^#define _syscall3(type,name,atype,a,btype,b,ctype,c) \\$/;"	D	language:C++	macro:_syscall3
name	kernel/sys.c	/^int sys_uname(struct utsname * name)$/;"	z	language:C	function:sys_uname	typeref:struct:utsname *	file:
namei	fs/namei.c	/^struct m_inode * namei(const char * pathname)$/;"	f	language:C	typeref:struct:m_inode *	signature:(const char * pathname)
namei.o	fs/Makefile	/^namei.o : namei.c ..\/include\/linux\/sched.h ..\/include\/linux\/head.h \\$/;"	t	language:Make
namelen	fs/namei.c	/^	const char * name, int namelen, struct dir_entry ** res_dir)$/;"	z	language:C	function:add_entry	typeref:typename:int	file:
namelen	fs/namei.c	/^	const char * name, int namelen, struct dir_entry ** res_dir)$/;"	z	language:C	function:find_entry	typeref:typename:int	file:
namelen	fs/namei.c	/^	int * namelen, const char ** name)$/;"	z	language:C	function:dir_namei	typeref:typename:int *	file:
namelen	fs/namei.c	/^	int inr,dev,namelen;$/;"	l	language:C	function:namei	typeref:typename:int	file:
namelen	fs/namei.c	/^	int inr,dev,namelen;$/;"	l	language:C	function:open_namei	typeref:typename:int	file:
namelen	fs/namei.c	/^	int namelen,inr,idev;$/;"	l	language:C	function:get_dir	typeref:typename:int	file:
namelen	fs/namei.c	/^	int namelen;$/;"	l	language:C	function:sys_link	typeref:typename:int	file:
namelen	fs/namei.c	/^	int namelen;$/;"	l	language:C	function:sys_mkdir	typeref:typename:int	file:
namelen	fs/namei.c	/^	int namelen;$/;"	l	language:C	function:sys_mknod	typeref:typename:int	file:
namelen	fs/namei.c	/^	int namelen;$/;"	l	language:C	function:sys_rmdir	typeref:typename:int	file:
namelen	fs/namei.c	/^	int namelen;$/;"	l	language:C	function:sys_unlink	typeref:typename:int	file:
nblocks	kernel/blk_drv/ramdisk.c	/^	int		nblocks;$/;"	l	language:C	function:rd_load	typeref:typename:int	file:
new_block	fs/bitmap.c	/^int new_block(int dev)$/;"	f	language:C	typeref:typename:int	signature:(int dev)
new_code_base	kernel/fork.c	/^	unsigned long old_code_base,new_code_base,code_limit;$/;"	l	language:C	function:copy_mem	typeref:typename:unsigned long	file:
new_data_base	kernel/fork.c	/^	unsigned long old_data_base,new_data_base,data_limit;$/;"	l	language:C	function:copy_mem	typeref:typename:unsigned long	file:
new_fs	fs/exec.c	/^	unsigned long old_fs, new_fs;$/;"	l	language:C	function:copy_strings	typeref:typename:unsigned long	file:
new_inode	fs/bitmap.c	/^struct m_inode * new_inode(int dev)$/;"	f	language:C	typeref:struct:m_inode *	signature:(int dev)
new_page	mm/memory.c	/^	unsigned long old_page,new_page;$/;"	l	language:C	function:un_wp_page	typeref:typename:unsigned long	file:
new_x	kernel/chr_drv/console.c	/^static inline void gotoxy(unsigned int new_x,unsigned int new_y)$/;"	z	language:C	function:gotoxy	typeref:typename:unsigned int	file:
new_y	kernel/chr_drv/console.c	/^static inline void gotoxy(unsigned int new_x,unsigned int new_y)$/;"	z	language:C	function:gotoxy	typeref:typename:unsigned int	file:
newfd	fs/fcntl.c	/^int sys_dup2(unsigned int oldfd, unsigned int newfd)$/;"	z	language:C	function:sys_dup2	typeref:typename:unsigned int	file:
newmask	kernel/signal.c	/^int sys_ssetmask(int newmask)$/;"	z	language:C	function:sys_ssetmask	typeref:typename:int	file:
newname	fs/namei.c	/^int sys_link(const char * oldname, const char * newname)$/;"	z	language:C	function:sys_link	typeref:typename:const char *	file:
next	kernel/blk_drv/blk.h	/^	struct request * next;$/;"	m	language:C++	struct:request	typeref:struct:request *	access:public
next	kernel/sched.c	/^	int i,next,c;$/;"	l	language:C	function:schedule	typeref:typename:int	file:
next	kernel/sched.c	/^	struct timer_list * next;$/;"	m	language:C	struct:timer_list	typeref:struct:timer_list *	file:	access:public
next	lib/malloc.c	/^	struct bucket_desc	*next;$/;"	m	language:C	struct:bucket_desc	typeref:struct:bucket_desc *	file:	access:public
next_timer	kernel/sched.c	/^} timer_list[TIME_REQUESTS], * next_timer = NULL;$/;"	v	language:C	typeref:struct:timer_list *
nlink_t	include/sys/types.h	/^typedef unsigned char nlink_t;$/;"	t	language:C++	typeref:typename:unsigned char
nlist	include/a.out.h	/^struct nlist {$/;"	s	language:C++
nlist::__anonda5d4bf5010a	include/a.out.h	/^  union {$/;"	u	language:C++	struct:nlist	access:public
nlist::__anonda5d4bf5010a::n_name	include/a.out.h	/^    char *n_name;$/;"	m	language:C++	union:nlist::__anonda5d4bf5010a	typeref:typename:char *	access:public
nlist::__anonda5d4bf5010a::n_next	include/a.out.h	/^    struct nlist *n_next;$/;"	m	language:C++	union:nlist::__anonda5d4bf5010a	typeref:struct:nlist *	access:public
nlist::__anonda5d4bf5010a::n_strx	include/a.out.h	/^    long n_strx;$/;"	m	language:C++	union:nlist::__anonda5d4bf5010a	typeref:typename:long	access:public
nlist::n_desc	include/a.out.h	/^  short n_desc;$/;"	m	language:C++	struct:nlist	typeref:typename:short	access:public
nlist::n_other	include/a.out.h	/^  char n_other;$/;"	m	language:C++	struct:nlist	typeref:typename:char	access:public
nlist::n_type	include/a.out.h	/^  unsigned char n_type;$/;"	m	language:C++	struct:nlist	typeref:typename:unsigned char	access:public
nlist::n_un	include/a.out.h	/^  } n_un;$/;"	m	language:C++	struct:nlist	typeref:union:nlist::__anonda5d4bf5010a	access:public
nlist::n_value	include/a.out.h	/^  unsigned long n_value;$/;"	m	language:C++	struct:nlist	typeref:typename:unsigned long	access:public
nodename	include/sys/utsname.h	/^	char nodename[9];$/;"	m	language:C++	struct:utsname	typeref:typename:char[9]	access:public
none	kernel/chr_drv/keyboard.S	/^none:	ret$/;"	l	language:Asm
none	kernel/fork.c	/^int copy_process(int nr,long ebp,long edi,long esi,long gs,long none,$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
nop	include/asm/system.h	/^#define nop() __asm__ ("nop"/;"	d	language:C++	signature:()
npar	kernel/chr_drv/console.c	/^static unsigned long	npar,par[NPAR];$/;"	v	language:C	typeref:typename:unsigned long	file:
nr	fs/bitmap.c	/^#define clear_bit(nr,addr) ({\\$/;"	D	language:C	macro:clear_bit
nr	fs/bitmap.c	/^#define set_bit(nr,addr) ({\\$/;"	D	language:C	macro:set_bit
nr	fs/file_dev.c	/^	int left,chars,nr;$/;"	l	language:C	function:file_read	typeref:typename:int	file:
nr	fs/inode.c	/^struct m_inode * iget(int dev,int nr)$/;"	z	language:C	function:iget	typeref:typename:int	file:
nr	fs/namei.c	/^	int nr,block;$/;"	l	language:C	function:empty_dir	typeref:typename:int	file:
nr	kernel/blk_drv/floppy.c	/^int floppy_change(unsigned int nr)$/;"	z	language:C	function:floppy_change	typeref:typename:unsigned int	file:
nr	kernel/blk_drv/floppy.c	/^void floppy_deselect(unsigned int nr)$/;"	z	language:C	function:floppy_deselect	typeref:typename:unsigned int	file:
nr	kernel/blk_drv/hd.c	/^#define port_read(port,buf,nr) \\$/;"	D	language:C	macro:port_read
nr	kernel/blk_drv/hd.c	/^#define port_write(port,buf,nr) \\$/;"	D	language:C	macro:port_write
nr	kernel/blk_drv/hd.c	/^static void reset_hd(int nr)$/;"	z	language:C	function:reset_hd	typeref:typename:int	file:
nr	kernel/chr_drv/console.c	/^	int nr;$/;"	l	language:C	function:con_write	typeref:typename:int	file:
nr	kernel/chr_drv/console.c	/^static void csi_L(unsigned int nr)$/;"	z	language:C	function:csi_L	typeref:typename:unsigned int	file:
nr	kernel/chr_drv/console.c	/^static void csi_M(unsigned int nr)$/;"	z	language:C	function:csi_M	typeref:typename:unsigned int	file:
nr	kernel/chr_drv/console.c	/^static void csi_P(unsigned int nr)$/;"	z	language:C	function:csi_P	typeref:typename:unsigned int	file:
nr	kernel/chr_drv/console.c	/^static void csi_at(unsigned int nr)$/;"	z	language:C	function:csi_at	typeref:typename:unsigned int	file:
nr	kernel/chr_drv/tty_io.c	/^int tty_read(unsigned channel, char * buf, int nr)$/;"	z	language:C	function:tty_read	typeref:typename:int	file:
nr	kernel/chr_drv/tty_io.c	/^int tty_write(unsigned channel, char * buf, int nr)$/;"	z	language:C	function:tty_write	typeref:typename:int	file:
nr	kernel/fork.c	/^int copy_mem(int nr,struct task_struct * p)$/;"	z	language:C	function:copy_mem	typeref:typename:int	file:
nr	kernel/fork.c	/^int copy_process(int nr,long ebp,long edi,long esi,long gs,long none,$/;"	z	language:C	function:copy_process	typeref:typename:int	file:
nr	kernel/sched.c	/^#define _S(nr) (1<<((nr)-1))$/;"	D	language:C	macro:_S
nr	kernel/sched.c	/^int ticks_to_floppy_on(unsigned int nr)$/;"	z	language:C	function:ticks_to_floppy_on	typeref:typename:unsigned int	file:
nr	kernel/sched.c	/^void floppy_off(unsigned int nr)$/;"	z	language:C	function:floppy_off	typeref:typename:unsigned int	file:
nr	kernel/sched.c	/^void floppy_on(unsigned int nr)$/;"	z	language:C	function:floppy_on	typeref:typename:unsigned int	file:
nr	kernel/sched.c	/^void show_task(int nr,struct task_struct * p)$/;"	z	language:C	function:show_task	typeref:typename:int	file:
nr	kernel/traps.c	/^static void die(char * str,long esp_ptr,long nr)$/;"	z	language:C	function:die	typeref:typename:long	file:
nr	mm/memory.c	/^	int nr[4];$/;"	l	language:C	function:do_no_page	typeref:typename:int[4]	file:
nr	mm/memory.c	/^	unsigned long * dir, nr;$/;"	l	language:C	function:free_page_tables	typeref:typename:unsigned long	file:
nr	mm/memory.c	/^	unsigned long nr;$/;"	l	language:C	function:copy_page_tables	typeref:typename:unsigned long	file:
nr_buffers	include/linux/fs.h	/^extern int nr_buffers;$/;"	x	language:C++	typeref:typename:int
nr_sectors	kernel/blk_drv/blk.h	/^	unsigned long nr_sectors;$/;"	m	language:C++	struct:request	typeref:typename:unsigned long	access:public
nr_sects	include/linux/hdreg.h	/^	unsigned int nr_sects;		\/* nr of sectors in partition *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned int	access:public
nr_sects	kernel/blk_drv/hd.c	/^	long nr_sects;$/;"	m	language:C	struct:hd_struct	typeref:typename:long	file:	access:public
nr_system_calls	kernel/system_call.s	/^nr_system_calls = 72$/;"	d	language:Asm
nsect	kernel/blk_drv/hd.c	/^	unsigned int nsect;$/;"	l	language:C	function:do_hd_request	typeref:typename:unsigned int	file:
nsect	kernel/blk_drv/hd.c	/^static void hd_out(unsigned int drive,unsigned int nsect,unsigned int sect,$/;"	z	language:C	function:hd_out	typeref:typename:unsigned int	file:
num	kernel/chr_drv/keyboard.S	/^num:	xorb $2,leds$/;"	l	language:Asm
num	kernel/vsprintf.c	/^static char * number(char * str, int num, int base, int size, int precision$/;"	z	language:C	function:number	typeref:typename:int	file:
num_table	kernel/chr_drv/keyboard.S	/^num_table:$/;"	l	language:Asm
number	kernel/vsprintf.c	/^static char * number(char * str, int num, int base, int size, int precision$/;"	f	language:C	typeref:typename:char *	file:	signature:(char * str,int num,int base,int size,int precision,int type)
obj	lib/malloc.c	/^void free_s(void *obj, int size)$/;"	z	language:C	function:free_s	typeref:typename:void *	file:
off_t	include/sys/types.h	/^typedef long off_t;$/;"	t	language:C++	typeref:typename:long
offset	fs/block_dev.c	/^	int offset = *pos & (BLOCK_SIZE-1);$/;"	l	language:C	function:block_read	typeref:typename:int	file:
offset	fs/block_dev.c	/^	int offset = *pos & (BLOCK_SIZE-1);$/;"	l	language:C	function:block_write	typeref:typename:int	file:
offset	fs/exec.c	/^	int len, offset = 0;$/;"	l	language:C	function:copy_strings	typeref:typename:int	file:
offset	fs/read_write.c	/^int sys_lseek(unsigned int fd,off_t offset, int origin)$/;"	z	language:C	function:sys_lseek	typeref:typename:off_t	file:
offsetof	include/stddef.h	/^#define offsetof(/;"	d	language:C++	signature:(TYPE,MEMBER)
ok_cur	kernel/chr_drv/keyboard.S	/^ok_cur:	shll $16,%eax$/;"	l	language:Asm
ok_func	kernel/chr_drv/keyboard.S	/^ok_func:$/;"	l	language:Asm
old	kernel/chr_drv/console.c	/^	unsigned short tmp, old = video_erase_char;$/;"	l	language:C	function:insert_char	typeref:typename:unsigned short	file:
old	kernel/sched.c	/^	int old = current->alarm;$/;"	l	language:C	function:sys_alarm	typeref:typename:int	file:
old	kernel/signal.c	/^	int old=current->blocked;$/;"	l	language:C	function:sys_ssetmask	typeref:typename:int	file:
old	kernel/sys.c	/^	int old = current->umask;$/;"	l	language:C	function:sys_umask	typeref:typename:int	file:
old_code_base	kernel/fork.c	/^	unsigned long old_code_base,new_code_base,code_limit;$/;"	l	language:C	function:copy_mem	typeref:typename:unsigned long	file:
old_data_base	kernel/fork.c	/^	unsigned long old_data_base,new_data_base,data_limit;$/;"	l	language:C	function:copy_mem	typeref:typename:unsigned long	file:
old_eip	kernel/signal.c	/^	long old_eip=eip;$/;"	l	language:C	function:do_signal	typeref:typename:long	file:
old_fs	fs/exec.c	/^		unsigned long old_fs;$/;"	l	language:C	function:do_execve	typeref:typename:unsigned long	file:
old_fs	fs/exec.c	/^	unsigned long old_fs, new_fs;$/;"	l	language:C	function:copy_strings	typeref:typename:unsigned long	file:
old_page	mm/memory.c	/^	unsigned long old_page,new_page;$/;"	l	language:C	function:un_wp_page	typeref:typename:unsigned long	file:
old_ruid	kernel/sys.c	/^	int old_ruid = current->uid;$/;"	l	language:C	function:sys_setreuid	typeref:typename:int	file:
oldaction	kernel/signal.c	/^	struct sigaction * oldaction)$/;"	z	language:C	function:sys_sigaction	typeref:struct:sigaction *	file:
oldalarm	kernel/chr_drv/tty_io.c	/^	long oldalarm;$/;"	l	language:C	function:tty_read	typeref:typename:long	file:
oldbottom	kernel/chr_drv/console.c	/^	int oldtop,oldbottom;$/;"	l	language:C	function:delete_line	typeref:typename:int	file:
oldbottom	kernel/chr_drv/console.c	/^	int oldtop,oldbottom;$/;"	l	language:C	function:insert_line	typeref:typename:int	file:
oldfd	fs/fcntl.c	/^int sys_dup2(unsigned int oldfd, unsigned int newfd)$/;"	z	language:C	function:sys_dup2	typeref:typename:unsigned int	file:
oldinode	fs/namei.c	/^	struct m_inode * oldinode, * dir;$/;"	l	language:C	function:sys_link	typeref:struct:m_inode *	file:
oldname	fs/namei.c	/^int sys_link(const char * oldname, const char * newname)$/;"	z	language:C	function:sys_link	typeref:typename:const char *	file:
oldtop	kernel/chr_drv/console.c	/^	int oldtop,oldbottom;$/;"	l	language:C	function:delete_line	typeref:typename:int	file:
oldtop	kernel/chr_drv/console.c	/^	int oldtop,oldbottom;$/;"	l	language:C	function:insert_line	typeref:typename:int	file:
oom	mm/memory.c	/^static inline volatile void oom(void)$/;"	f	language:C	typeref:typename:volatile void	file:	signature:(void)
open	lib/open.c	/^int open(const char * filename, int flag, ...)$/;"	f	language:C	typeref:typename:int	signature:(const char * filename,int flag,...)
open.o	fs/Makefile	/^open.o : open.c ..\/include\/string.h ..\/include\/errno.h ..\/include\/fcntl.h \\$/;"	t	language:Make
open.o	lib/Makefile	/^open.s open.o : open.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
open.s	lib/Makefile	/^open.s open.o : open.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
open_namei	fs/namei.c	/^int open_namei(const char * pathname, int flag, int mode,$/;"	f	language:C	typeref:typename:int	signature:(const char * pathname,int flag,int mode,struct m_inode ** res_inode)
options	kernel/exit.c	/^int sys_waitpid(pid_t pid,unsigned long * stat_addr, int options)$/;"	z	language:C	function:sys_waitpid	typeref:typename:int	file:
origin	fs/read_write.c	/^int sys_lseek(unsigned int fd,off_t offset, int origin)$/;"	z	language:C	function:sys_lseek	typeref:typename:int	file:
origin	kernel/chr_drv/console.c	/^static unsigned long	origin;		\/* Used for EGA\/VGA fast scroll	*\/$/;"	v	language:C	typeref:typename:unsigned long	file:
outb	include/asm/io.h	/^#define outb(/;"	d	language:C++	signature:(value,port)
outb_p	include/asm/io.h	/^#define outb_p(/;"	d	language:C++	signature:(value,port)
output_byte	kernel/blk_drv/floppy.c	/^static void output_byte(char byte)$/;"	f	language:C	typeref:typename:void	file:	signature:(char byte)
p	fs/block_dev.c	/^	register char * p;$/;"	l	language:C	function:block_read	typeref:typename:register char *	file:
p	fs/block_dev.c	/^	register char * p;$/;"	l	language:C	function:block_write	typeref:typename:register char *	file:
p	fs/exec.c	/^		unsigned long p, int from_kmem)$/;"	z	language:C	function:copy_strings	typeref:typename:unsigned long	file:
p	fs/exec.c	/^	unsigned long p=PAGE_SIZE*MAX_ARG_PAGES-4;$/;"	l	language:C	function:do_execve	typeref:typename:unsigned long	file:
p	fs/exec.c	/^static unsigned long * create_tables(char * p,int argc,int envc)$/;"	z	language:C	function:create_tables	typeref:typename:char *	file:
p	fs/file_dev.c	/^			char * p = nr + bh->b_data;$/;"	l	language:C	function:file_read	typeref:typename:char *	file:
p	fs/file_dev.c	/^	char * p;$/;"	l	language:C	function:file_write	typeref:typename:char *	file:
p	fs/super.c	/^	struct super_block * p;$/;"	l	language:C	function:mount_root	typeref:struct:super_block *	file:
p	fs/truncate.c	/^	unsigned short * p;$/;"	l	language:C	function:free_dind	typeref:typename:unsigned short *	file:
p	fs/truncate.c	/^	unsigned short * p;$/;"	l	language:C	function:free_ind	typeref:typename:unsigned short *	file:
p	kernel/blk_drv/hd.c	/^	struct partition *p;$/;"	l	language:C	function:sys_setup	typeref:struct:partition *	file:
p	kernel/chr_drv/console.c	/^	char * p = RESPONSE;$/;"	l	language:C	function:respond	typeref:typename:char *	file:
p	kernel/chr_drv/console.c	/^	unsigned short * p = (unsigned short *) pos;$/;"	l	language:C	function:delete_char	typeref:typename:unsigned short *	file:
p	kernel/chr_drv/console.c	/^	unsigned short * p = (unsigned short *) pos;$/;"	l	language:C	function:insert_char	typeref:typename:unsigned short *	file:
p	kernel/exit.c	/^	struct task_struct ** p;$/;"	l	language:C	function:sys_waitpid	typeref:struct:task_struct **	file:
p	kernel/exit.c	/^	struct task_struct **p = NR_TASKS + task;$/;"	l	language:C	function:kill_session	typeref:struct:task_struct **	file:
p	kernel/exit.c	/^	struct task_struct **p = NR_TASKS + task;$/;"	l	language:C	function:sys_kill	typeref:struct:task_struct **	file:
p	kernel/exit.c	/^static inline int send_sig(long sig,struct task_struct * p,int priv)$/;"	z	language:C	function:send_sig	typeref:struct:task_struct *	file:
p	kernel/exit.c	/^void release(struct task_struct * p)$/;"	z	language:C	function:release	typeref:struct:task_struct *	file:
p	kernel/fork.c	/^	struct task_struct *p;$/;"	l	language:C	function:copy_process	typeref:struct:task_struct *	file:
p	kernel/fork.c	/^int copy_mem(int nr,struct task_struct * p)$/;"	z	language:C	function:copy_mem	typeref:struct:task_struct *	file:
p	kernel/sched.c	/^	struct desc_struct * p;$/;"	l	language:C	function:sched_init	typeref:struct:desc_struct *	file:
p	kernel/sched.c	/^	struct task_struct ** p;$/;"	l	language:C	function:schedule	typeref:struct:task_struct **	file:
p	kernel/sched.c	/^	struct timer_list * p;$/;"	l	language:C	function:add_timer	typeref:struct:timer_list *	file:
p	kernel/sched.c	/^void interruptible_sleep_on(struct task_struct **p)$/;"	z	language:C	function:interruptible_sleep_on	typeref:struct:task_struct **	file:
p	kernel/sched.c	/^void show_task(int nr,struct task_struct * p)$/;"	z	language:C	function:show_task	typeref:struct:task_struct *	file:
p	kernel/sched.c	/^void sleep_on(struct task_struct **p)$/;"	z	language:C	function:sleep_on	typeref:struct:task_struct **	file:
p	kernel/sched.c	/^void wake_up(struct task_struct **p)$/;"	z	language:C	function:wake_up	typeref:struct:task_struct **	file:
p	mm/memory.c	/^	struct task_struct ** p;$/;"	l	language:C	function:share_page	typeref:struct:task_struct **	file:
p	mm/memory.c	/^static int try_to_share(unsigned long address, struct task_struct * p)$/;"	z	language:C	function:try_to_share	typeref:struct:task_struct *	file:
pag	fs/exec.c	/^	char *tmp, *pag;$/;"	l	language:C	function:copy_strings	typeref:typename:char *	file:
page	fs/exec.c	/^	unsigned long page[MAX_ARG_PAGES];$/;"	l	language:C	function:do_execve	typeref:typename:unsigned long[]	file:
page	fs/exec.c	/^static unsigned long change_ldt(unsigned long text_size,unsigned long * page)$/;"	z	language:C	function:change_ldt	typeref:typename:unsigned long *	file:
page	fs/exec.c	/^static unsigned long copy_strings(int argc,char ** argv,unsigned long *page,$/;"	z	language:C	function:copy_strings	typeref:typename:unsigned long *	file:
page	lib/malloc.c	/^	void			*page;$/;"	m	language:C	struct:bucket_desc	typeref:typename:void *	file:	access:public
page	lib/malloc.c	/^	void		*page;$/;"	l	language:C	function:free_s	typeref:typename:void *	file:
page	mm/memory.c	/^	unsigned long page;$/;"	l	language:C	function:do_no_page	typeref:typename:unsigned long	file:
page	mm/memory.c	/^	unsigned long page;$/;"	l	language:C	function:write_verify	typeref:typename:unsigned long	file:
page	mm/memory.c	/^unsigned long put_page(unsigned long page,unsigned long address)$/;"	z	language:C	function:put_page	typeref:typename:unsigned long	file:
page_table	mm/memory.c	/^	unsigned long tmp, *page_table;$/;"	l	language:C	function:put_page	typeref:typename:unsigned long *	file:
panic	kernel/panic.c	/^volatile void panic(const char * s)$/;"	f	language:C	typeref:typename:volatile void	signature:(const char * s)
panic.o	kernel/Makefile	/^panic.s panic.o : panic.c ..\/include\/linux\/kernel.h ..\/include\/linux\/sched.h \\$/;"	t	language:Make
panic.s	kernel/Makefile	/^panic.s panic.o : panic.c ..\/include\/linux\/kernel.h ..\/include\/linux\/sched.h \\$/;"	t	language:Make
par	kernel/chr_drv/console.c	/^static unsigned long	npar,par[NPAR];$/;"	v	language:C	typeref:typename:unsigned long[]	file:
par	kernel/chr_drv/console.c	/^static void csi_J(int par)$/;"	z	language:C	function:csi_J	typeref:typename:int	file:
par	kernel/chr_drv/console.c	/^static void csi_K(int par)$/;"	z	language:C	function:csi_K	typeref:typename:int	file:
partition	include/linux/hdreg.h	/^struct partition {$/;"	s	language:C++
partition::boot_ind	include/linux/hdreg.h	/^	unsigned char boot_ind;		\/* 0x80 - active (unused) *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
partition::cyl	include/linux/hdreg.h	/^	unsigned char cyl;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
partition::end_cyl	include/linux/hdreg.h	/^	unsigned char end_cyl;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
partition::end_head	include/linux/hdreg.h	/^	unsigned char end_head;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
partition::end_sector	include/linux/hdreg.h	/^	unsigned char end_sector;	\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
partition::head	include/linux/hdreg.h	/^	unsigned char head;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
partition::nr_sects	include/linux/hdreg.h	/^	unsigned int nr_sects;		\/* nr of sectors in partition *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned int	access:public
partition::sector	include/linux/hdreg.h	/^	unsigned char sector;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
partition::start_sect	include/linux/hdreg.h	/^	unsigned int start_sect;	\/* starting sector counting from 0 *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned int	access:public
partition::sys_ind	include/linux/hdreg.h	/^	unsigned char sys_ind;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
pathname	fs/namei.c	/^int open_namei(const char * pathname, int flag, int mode,$/;"	z	language:C	function:open_namei	typeref:typename:const char *	file:
pathname	fs/namei.c	/^int sys_mkdir(const char * pathname, int mode)$/;"	z	language:C	function:sys_mkdir	typeref:typename:const char *	file:
pathname	fs/namei.c	/^static struct m_inode * dir_namei(const char * pathname,$/;"	z	language:C	function:dir_namei	typeref:typename:const char *	file:
pathname	fs/namei.c	/^static struct m_inode * get_dir(const char * pathname)$/;"	z	language:C	function:get_dir	typeref:typename:const char *	file:
pathname	fs/namei.c	/^struct m_inode * namei(const char * pathname)$/;"	z	language:C	function:namei	typeref:typename:const char *	file:
pathname	fs/open.c	/^int sys_creat(const char * pathname, int mode)$/;"	z	language:C	function:sys_creat	typeref:typename:const char *	file:
permission	fs/namei.c	/^static int permission(struct m_inode * inode,int mask)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct m_inode * inode,int mask)
pg_dir	include/linux/head.h	/^extern unsigned long pg_dir[1024];$/;"	x	language:C++	typeref:typename:unsigned long[1024]
pg_table	mm/memory.c	/^	unsigned long *pg_table;$/;"	l	language:C	function:free_page_tables	typeref:typename:unsigned long *	file:
pg_tbl	mm/memory.c	/^	long * pg_tbl;$/;"	l	language:C	function:calc_mem	typeref:typename:long *	file:
pgid	kernel/sys.c	/^int sys_setpgid(int pid, int pgid)$/;"	z	language:C	function:sys_setpgid	typeref:typename:int	file:
pgrp	include/linux/sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
pgrp	include/linux/tty.h	/^	int pgrp;$/;"	m	language:C++	struct:tty_struct	typeref:typename:int	access:public
phys_addr	mm/memory.c	/^	unsigned long phys_addr;$/;"	l	language:C	function:try_to_share	typeref:typename:unsigned long	file:
pid	include/linux/sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
pid	init/main.c	/^	int pid,i;$/;"	l	language:C	function:init	typeref:typename:int	file:
pid	kernel/exit.c	/^int sys_kill(int pid,int sig)$/;"	z	language:C	function:sys_kill	typeref:typename:int	file:
pid	kernel/exit.c	/^int sys_waitpid(pid_t pid,unsigned long * stat_addr, int options)$/;"	z	language:C	function:sys_waitpid	typeref:typename:pid_t	file:
pid	kernel/exit.c	/^static void tell_father(int pid)$/;"	z	language:C	function:tell_father	typeref:typename:int	file:
pid	kernel/sys.c	/^int sys_setpgid(int pid, int pgid)$/;"	z	language:C	function:sys_setpgid	typeref:typename:int	file:
pid_t	include/sys/types.h	/^typedef int pid_t;$/;"	t	language:C++	typeref:typename:int
pipe.o	fs/Makefile	/^pipe.o : pipe.c ..\/include\/signal.h ..\/include\/sys\/types.h \\$/;"	t	language:Make
port	include/asm/io.h	/^#define inb(port) ({ \\$/;"	D	language:C++	macro:inb
port	include/asm/io.h	/^#define inb_p(port) ({ \\$/;"	D	language:C++	macro:inb_p
port	include/asm/io.h	/^#define outb(value,port) \\$/;"	D	language:C++	macro:outb
port	include/asm/io.h	/^#define outb_p(value,port) \\$/;"	D	language:C++	macro:outb_p
port	kernel/blk_drv/floppy.c	/^#define immoutb_p(val,port) \\$/;"	D	language:C	macro:immoutb_p
port	kernel/blk_drv/hd.c	/^#define port_read(port,buf,nr) \\$/;"	D	language:C	macro:port_read
port	kernel/blk_drv/hd.c	/^#define port_write(port,buf,nr) \\$/;"	D	language:C	macro:port_write
port	kernel/chr_drv/serial.c	/^static void init(int port)$/;"	z	language:C	function:init	typeref:typename:int	file:
port	kernel/chr_drv/tty_ioctl.c	/^	unsigned short port,quot;$/;"	l	language:C	function:change_speed	typeref:typename:unsigned short	file:
port_read	kernel/blk_drv/hd.c	/^#define port_read(/;"	d	language:C	file:	signature:(port,buf,nr)
port_write	kernel/blk_drv/hd.c	/^#define port_write(/;"	d	language:C	file:	signature:(port,buf,nr)
pos	fs/block_dev.c	/^int block_read(int dev, unsigned long * pos, char * buf, int count)$/;"	z	language:C	function:block_read	typeref:typename:unsigned long *	file:
pos	fs/block_dev.c	/^int block_write(int dev, long * pos, char * buf, int count)$/;"	z	language:C	function:block_write	typeref:typename:long *	file:
pos	fs/char_dev.c	/^int rw_char(int rw,int dev, char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_char	typeref:typename:off_t *	file:
pos	fs/char_dev.c	/^static int rw_kmem(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_kmem	typeref:typename:off_t *	file:
pos	fs/char_dev.c	/^static int rw_mem(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_mem	typeref:typename:off_t *	file:
pos	fs/char_dev.c	/^static int rw_memory(int rw, unsigned minor, char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_memory	typeref:typename:off_t *	file:
pos	fs/char_dev.c	/^static int rw_port(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_port	typeref:typename:off_t *	file:
pos	fs/char_dev.c	/^static int rw_ram(int rw,char * buf, int count, off_t *pos)$/;"	z	language:C	function:rw_ram	typeref:typename:off_t *	file:
pos	fs/char_dev.c	/^static int rw_tty(int rw,unsigned minor,char * buf,int count, off_t * pos)$/;"	z	language:C	function:rw_tty	typeref:typename:off_t *	file:
pos	fs/char_dev.c	/^static int rw_ttyx(int rw,unsigned minor,char * buf,int count,off_t * pos)$/;"	z	language:C	function:rw_ttyx	typeref:typename:off_t *	file:
pos	fs/file_dev.c	/^	off_t pos;$/;"	l	language:C	function:file_write	typeref:typename:off_t	file:
pos	kernel/chr_drv/console.c	/^static unsigned long	pos;$/;"	v	language:C	typeref:typename:unsigned long	file:
precision	kernel/vsprintf.c	/^	int precision;		\/* min. # of digits for integers; max$/;"	l	language:C	function:vsprintf	typeref:typename:int	file:
precision	kernel/vsprintf.c	/^static char * number(char * str, int num, int base, int size, int precision$/;"	z	language:C	function:number	typeref:typename:int	file:
prev	lib/malloc.c	/^	struct bucket_desc	*bdesc, *prev;$/;"	l	language:C	function:free_s	typeref:struct:bucket_desc *	file:
printf	init/main.c	/^static int printf(const char *fmt, ...)$/;"	f	language:C	typeref:typename:int	file:	signature:(const char * fmt,...)
printk	kernel/printk.c	/^int printk(const char *fmt, ...)$/;"	f	language:C	typeref:typename:int	signature:(const char * fmt,...)
printk.o	kernel/Makefile	/^printk.s printk.o : printk.c ..\/include\/stdarg.h ..\/include\/stddef.h \\$/;"	t	language:Make
printk.s	kernel/Makefile	/^printk.s printk.o : printk.c ..\/include\/stdarg.h ..\/include\/stddef.h \\$/;"	t	language:Make
priority	include/linux/sched.h	/^	long priority;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
priority	kernel/system_call.s	/^priority = 8$/;"	d	language:Asm
priv	kernel/exit.c	/^static inline int send_sig(long sig,struct task_struct * p,int priv)$/;"	z	language:C	function:send_sig	typeref:typename:int	file:
proc_list	include/linux/tty.h	/^	struct task_struct * proc_list;$/;"	m	language:C++	struct:tty_queue	typeref:struct:task_struct *	access:public
proc_list	kernel/chr_drv/keyboard.S	/^proc_list = 12$/;"	d	language:Asm
proc_list	kernel/chr_drv/rs_io.s	/^proc_list = 12$/;"	d	language:Asm
ptrdiff_t	include/stddef.h	/^typedef long ptrdiff_t;$/;"	t	language:C++	typeref:typename:long
ptrdiff_t	include/sys/types.h	/^typedef long ptrdiff_t;$/;"	t	language:C++	typeref:typename:long
put_fs_byte	include/asm/segment.h	/^extern inline void put_fs_byte(char val,char *addr)$/;"	f	language:C++	typeref:typename:void	signature:(char val,char * addr)
put_fs_long	include/asm/segment.h	/^extern inline void put_fs_long(unsigned long val,unsigned long * addr)$/;"	f	language:C++	typeref:typename:void	signature:(unsigned long val,unsigned long * addr)
put_fs_word	include/asm/segment.h	/^extern inline void put_fs_word(short val,short * addr)$/;"	f	language:C++	typeref:typename:void	signature:(short val,short * addr)
put_page	mm/memory.c	/^unsigned long put_page(unsigned long page,unsigned long address)$/;"	f	language:C	typeref:typename:unsigned long	signature:(unsigned long page,unsigned long address)
put_queue	kernel/chr_drv/keyboard.S	/^put_queue:$/;"	l	language:Asm
put_super	fs/super.c	/^void put_super(int dev)$/;"	f	language:C	typeref:typename:void	signature:(int dev)
pwd	include/linux/sched.h	/^	struct m_inode * pwd;$/;"	m	language:C++	struct:task_struct	typeref:struct:m_inode *	access:public
qualifier	kernel/vsprintf.c	/^	int qualifier;		\/* 'h', 'l', or 'L' for integer fields *\/$/;"	l	language:C	function:vsprintf	typeref:typename:int	file:
ques	kernel/chr_drv/console.c	/^static unsigned long	ques=0;$/;"	v	language:C	typeref:typename:unsigned long	file:
queue	include/linux/tty.h	/^#define GETCH(queue,c) \\$/;"	D	language:C++	macro:GETCH
queue	include/linux/tty.h	/^#define PUTCH(c,queue) \\$/;"	D	language:C++	macro:PUTCH
queue	kernel/chr_drv/tty_io.c	/^static void sleep_if_empty(struct tty_queue * queue)$/;"	z	language:C	function:sleep_if_empty	typeref:struct:tty_queue *	file:
queue	kernel/chr_drv/tty_io.c	/^static void sleep_if_full(struct tty_queue * queue)$/;"	z	language:C	function:sleep_if_full	typeref:struct:tty_queue *	file:
queue	kernel/chr_drv/tty_ioctl.c	/^static void flush(struct tty_queue * queue)$/;"	z	language:C	function:flush	typeref:struct:tty_queue *	file:
quot	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	m	language:C++	struct:__anon96a80d310108	typeref:typename:int	access:public
quot	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	m	language:C++	struct:__anon96a80d310208	typeref:typename:long	access:public
quot	kernel/chr_drv/tty_ioctl.c	/^	unsigned short port,quot;$/;"	l	language:C	function:change_speed	typeref:typename:unsigned short	file:
quotient	kernel/chr_drv/tty_ioctl.c	/^static unsigned short quotient[] = {$/;"	v	language:C	typeref:typename:unsigned short[]	file:
r	kernel/blk_drv/hd.c	/^	int i,r;$/;"	l	language:C	function:do_hd_request	typeref:typename:int	file:
r_address	include/a.out.h	/^  int r_address;$/;"	m	language:C++	struct:relocation_info	typeref:typename:int	access:public
r_extern	include/a.out.h	/^  unsigned int r_extern:1;$/;"	m	language:C++	struct:relocation_info	typeref:typename:unsigned int:1	access:public
r_length	include/a.out.h	/^  unsigned int r_length:2;$/;"	m	language:C++	struct:relocation_info	typeref:typename:unsigned int:2	access:public
r_pad	include/a.out.h	/^  unsigned int r_pad:4;$/;"	m	language:C++	struct:relocation_info	typeref:typename:unsigned int:4	access:public
r_pcrel	include/a.out.h	/^  unsigned int r_pcrel:1;$/;"	m	language:C++	struct:relocation_info	typeref:typename:unsigned int:1	access:public
r_symbolnum	include/a.out.h	/^  unsigned int r_symbolnum:24;$/;"	m	language:C++	struct:relocation_info	typeref:typename:unsigned int:24	access:public
rate	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned char	file:	access:public
rd_init	kernel/blk_drv/ramdisk.c	/^long rd_init(long mem_start, int length)$/;"	f	language:C	typeref:typename:long	signature:(long mem_start,int length)
rd_length	kernel/blk_drv/ramdisk.c	/^int	rd_length = 0;$/;"	v	language:C	typeref:typename:int
rd_load	kernel/blk_drv/ramdisk.c	/^void rd_load(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
rd_start	kernel/blk_drv/ramdisk.c	/^char	*rd_start;$/;"	v	language:C	typeref:typename:char *
read	fs/block_dev.c	/^	int read = 0;$/;"	l	language:C	function:block_read	typeref:typename:int	file:
read	fs/pipe.c	/^	int chars, size, read = 0;$/;"	l	language:C	function:read_pipe	typeref:typename:int	file:
read_char	kernel/chr_drv/rs_io.s	/^read_char:$/;"	l	language:Asm
read_inode	fs/inode.c	/^static void read_inode(struct m_inode * inode)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct m_inode * inode)
read_intr	kernel/blk_drv/hd.c	/^static void read_intr(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
read_pipe	fs/pipe.c	/^int read_pipe(struct m_inode * inode, char * buf, int count)$/;"	f	language:C	typeref:typename:int	signature:(struct m_inode * inode,char * buf,int count)
read_q	include/linux/tty.h	/^	struct tty_queue read_q;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_queue	access:public
read_super	fs/super.c	/^static struct super_block * read_super(int dev)$/;"	f	language:C	typeref:struct:super_block *	file:	signature:(int dev)
read_write.o	fs/Makefile	/^read_write.o : read_write.c ..\/include\/sys\/stat.h ..\/include\/sys\/types.h \\$/;"	t	language:Make
reboot	kernel/chr_drv/keyboard.S	/^reboot:$/;"	l	language:Asm
recal_interrupt	kernel/blk_drv/floppy.c	/^static void recal_interrupt(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
recal_intr	kernel/blk_drv/hd.c	/^static void recal_intr(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
recalibrate	kernel/blk_drv/floppy.c	/^static int recalibrate = 0;$/;"	v	language:C	typeref:typename:int	file:
recalibrate	kernel/blk_drv/hd.c	/^static int recalibrate = 1;$/;"	v	language:C	typeref:typename:int	file:
recalibrate_floppy	kernel/blk_drv/floppy.c	/^static void recalibrate_floppy(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
refcnt	lib/malloc.c	/^	unsigned short		refcnt;$/;"	m	language:C	struct:bucket_desc	typeref:typename:unsigned short	file:	access:public
release	include/sys/utsname.h	/^	char release[9];$/;"	m	language:C++	struct:utsname	typeref:typename:char[9]	access:public
release	kernel/exit.c	/^void release(struct task_struct * p)$/;"	f	language:C	typeref:typename:void	signature:(struct task_struct * p)
relocation_info	include/a.out.h	/^struct relocation_info$/;"	s	language:C++
relocation_info::r_address	include/a.out.h	/^  int r_address;$/;"	m	language:C++	struct:relocation_info	typeref:typename:int	access:public
relocation_info::r_extern	include/a.out.h	/^  unsigned int r_extern:1;$/;"	m	language:C++	struct:relocation_info	typeref:typename:unsigned int:1	access:public
relocation_info::r_length	include/a.out.h	/^  unsigned int r_length:2;$/;"	m	language:C++	struct:relocation_info	typeref:typename:unsigned int:2	access:public
relocation_info::r_pad	include/a.out.h	/^  unsigned int r_pad:4;$/;"	m	language:C++	struct:relocation_info	typeref:typename:unsigned int:4	access:public
relocation_info::r_pcrel	include/a.out.h	/^  unsigned int r_pcrel:1;$/;"	m	language:C++	struct:relocation_info	typeref:typename:unsigned int:1	access:public
relocation_info::r_symbolnum	include/a.out.h	/^  unsigned int r_symbolnum:24;$/;"	m	language:C++	struct:relocation_info	typeref:typename:unsigned int:24	access:public
rem	include/sys/types.h	/^typedef struct { int quot,rem; } div_t;$/;"	m	language:C++	struct:__anon96a80d310108	typeref:typename:int	access:public
rem	include/sys/types.h	/^typedef struct { long quot,rem; } ldiv_t;$/;"	m	language:C++	struct:__anon96a80d310208	typeref:typename:long	access:public
remove_from_queues	fs/buffer.c	/^static inline void remove_from_queues(struct buffer_head * bh)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct buffer_head * bh)
rep_int	kernel/chr_drv/rs_io.s	/^rep_int:$/;"	l	language:Asm
repeat	fs/buffer.c	/^repeat:$/;"	L	language:C	function:getblk	file:
repeat	fs/inode.c	/^repeat:$/;"	L	language:C	function:iput	file:
repeat	kernel/blk_drv/floppy.c	/^repeat:$/;"	L	language:C	function:floppy_change	file:
repeat	kernel/blk_drv/ll_rw_blk.c	/^repeat:$/;"	L	language:C	function:make_request	file:
repeat	kernel/exit.c	/^repeat:$/;"	L	language:C	function:sys_waitpid	file:
repeat	kernel/fork.c	/^	repeat:$/;"	L	language:C	function:find_empty_process	file:
repeat	kernel/sched.c	/^repeat:	current->state = TASK_INTERRUPTIBLE;$/;"	L	language:C	function:interruptible_sleep_on	file:
repeat	kernel/vsprintf.c	/^		repeat:$/;"	L	language:C	function:vsprintf	file:
reply_buffer	kernel/blk_drv/floppy.c	/^static unsigned char reply_buffer[MAX_REPLIES];$/;"	v	language:C	typeref:typename:unsigned char[]	file:
req	kernel/blk_drv/ll_rw_blk.c	/^	struct request * req;$/;"	l	language:C	function:make_request	typeref:struct:request *	file:
req	kernel/blk_drv/ll_rw_blk.c	/^static void add_request(struct blk_dev_struct * dev, struct request * req)$/;"	z	language:C	function:add_request	typeref:struct:request *	file:
request	kernel/blk_drv/blk.h	/^extern struct request request[NR_REQUEST];$/;"	x	language:C++	typeref:struct:request[]
request	kernel/blk_drv/blk.h	/^struct request {$/;"	s	language:C++
request	kernel/blk_drv/ll_rw_blk.c	/^struct request request[NR_REQUEST];$/;"	v	language:C	typeref:struct:request[]
request::bh	kernel/blk_drv/blk.h	/^	struct buffer_head * bh;$/;"	m	language:C++	struct:request	typeref:struct:buffer_head *	access:public
request::buffer	kernel/blk_drv/blk.h	/^	char * buffer;$/;"	m	language:C++	struct:request	typeref:typename:char *	access:public
request::cmd	kernel/blk_drv/blk.h	/^	int cmd;		\/* READ or WRITE *\/$/;"	m	language:C++	struct:request	typeref:typename:int	access:public
request::dev	kernel/blk_drv/blk.h	/^	int dev;		\/* -1 if no request *\/$/;"	m	language:C++	struct:request	typeref:typename:int	access:public
request::errors	kernel/blk_drv/blk.h	/^	int errors;$/;"	m	language:C++	struct:request	typeref:typename:int	access:public
request::next	kernel/blk_drv/blk.h	/^	struct request * next;$/;"	m	language:C++	struct:request	typeref:struct:request *	access:public
request::nr_sectors	kernel/blk_drv/blk.h	/^	unsigned long nr_sectors;$/;"	m	language:C++	struct:request	typeref:typename:unsigned long	access:public
request::sector	kernel/blk_drv/blk.h	/^	unsigned long sector;$/;"	m	language:C++	struct:request	typeref:typename:unsigned long	access:public
request::waiting	kernel/blk_drv/blk.h	/^	struct task_struct * waiting;$/;"	m	language:C++	struct:request	typeref:struct:task_struct *	access:public
request_fn	kernel/blk_drv/blk.h	/^	void (*request_fn)(void);$/;"	m	language:C++	struct:blk_dev_struct	typeref:typename:void (*)(void)	access:public
res	fs/open.c	/^	int res, i_mode;$/;"	l	language:C	function:sys_access	typeref:typename:int	file:
res	kernel/mktime.c	/^	long res;$/;"	l	language:C	function:kernel_mktime	typeref:typename:long	file:
res	lib/open.c	/^	register int res;$/;"	l	language:C	function:open	typeref:typename:register int	file:
res_dir	fs/namei.c	/^	const char * name, int namelen, struct dir_entry ** res_dir)$/;"	z	language:C	function:add_entry	typeref:struct:dir_entry **	file:
res_dir	fs/namei.c	/^	const char * name, int namelen, struct dir_entry ** res_dir)$/;"	z	language:C	function:find_entry	typeref:struct:dir_entry **	file:
res_inode	fs/namei.c	/^	struct m_inode ** res_inode)$/;"	z	language:C	function:open_namei	typeref:struct:m_inode **	file:
reschedule	kernel/system_call.s	/^reschedule:$/;"	l	language:Asm
reset	kernel/blk_drv/floppy.c	/^static int reset = 0;$/;"	v	language:C	typeref:typename:int	file:
reset	kernel/blk_drv/hd.c	/^static int reset = 1;$/;"	v	language:C	typeref:typename:int	file:
reset_controller	kernel/blk_drv/hd.c	/^static void reset_controller(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
reset_floppy	kernel/blk_drv/floppy.c	/^static void reset_floppy(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
reset_hd	kernel/blk_drv/hd.c	/^static void reset_hd(int nr)$/;"	f	language:C	typeref:typename:void	file:	signature:(int nr)
reset_interrupt	kernel/blk_drv/floppy.c	/^static void reset_interrupt(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
respond	kernel/chr_drv/console.c	/^static void respond(struct tty_struct * tty)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct tty_struct * tty)
restart_interp	fs/exec.c	/^restart_interp:$/;"	L	language:C	function:do_execve	file:
restore_cur	kernel/chr_drv/console.c	/^static void restore_cur(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
restorer	kernel/signal.c	/^int sys_signal(int signum, long handler, long restorer)$/;"	z	language:C	function:sys_signal	typeref:typename:long	file:
result	kernel/blk_drv/floppy.c	/^static int result(void)$/;"	f	language:C	typeref:typename:int	file:	signature:(void)
ret_from_sys_call	kernel/system_call.s	/^ret_from_sys_call:$/;"	l	language:Asm
retries	kernel/blk_drv/hd.c	/^	int retries=10000;$/;"	l	language:C	function:controller_ready	typeref:typename:int	file:
retval	fs/exec.c	/^	int retval;$/;"	l	language:C	function:do_execve	typeref:typename:int	file:
retval	kernel/exit.c	/^	int err, retval = 0;$/;"	l	language:C	function:sys_kill	typeref:typename:int	file:
retval	lib/malloc.c	/^	void			*retval;$/;"	l	language:C	function:malloc	typeref:typename:void *	file:
rgid	kernel/sys.c	/^int sys_setregid(int rgid, int egid)$/;"	z	language:C	function:sys_setregid	typeref:typename:int	file:
ri	kernel/chr_drv/console.c	/^static void ri(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
root	include/linux/sched.h	/^	struct m_inode * root;$/;"	m	language:C++	struct:task_struct	typeref:struct:m_inode *	access:public
rs_addr	kernel/chr_drv/rs_io.s	/^rs_addr = 0$/;"	d	language:Asm
rs_init	kernel/chr_drv/serial.c	/^void rs_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
rs_int	kernel/chr_drv/rs_io.s	/^rs_int:$/;"	l	language:Asm
rs_write	kernel/chr_drv/serial.c	/^void rs_write(struct tty_struct * tty)$/;"	f	language:C	typeref:typename:void	signature:(struct tty_struct * tty)
rshift	kernel/chr_drv/keyboard.S	/^rshift:$/;"	l	language:Asm
ruid	kernel/sys.c	/^int sys_setreuid(int ruid, int euid)$/;"	z	language:C	function:sys_setreuid	typeref:typename:int	file:
rw	fs/char_dev.c	/^int rw_char(int rw,int dev, char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_char	typeref:typename:int	file:
rw	fs/char_dev.c	/^static int rw_kmem(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_kmem	typeref:typename:int	file:
rw	fs/char_dev.c	/^static int rw_mem(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_mem	typeref:typename:int	file:
rw	fs/char_dev.c	/^static int rw_memory(int rw, unsigned minor, char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_memory	typeref:typename:int	file:
rw	fs/char_dev.c	/^static int rw_port(int rw,char * buf, int count, off_t * pos)$/;"	z	language:C	function:rw_port	typeref:typename:int	file:
rw	fs/char_dev.c	/^static int rw_ram(int rw,char * buf, int count, off_t *pos)$/;"	z	language:C	function:rw_ram	typeref:typename:int	file:
rw	fs/char_dev.c	/^static int rw_tty(int rw,unsigned minor,char * buf,int count, off_t * pos)$/;"	z	language:C	function:rw_tty	typeref:typename:int	file:
rw	fs/char_dev.c	/^static int rw_ttyx(int rw,unsigned minor,char * buf,int count,off_t * pos)$/;"	z	language:C	function:rw_ttyx	typeref:typename:int	file:
rw	kernel/blk_drv/ll_rw_blk.c	/^static void make_request(int major,int rw, struct buffer_head * bh)$/;"	z	language:C	function:make_request	typeref:typename:int	file:
rw	kernel/blk_drv/ll_rw_blk.c	/^void ll_rw_block(int rw, struct buffer_head * bh)$/;"	z	language:C	function:ll_rw_block	typeref:typename:int	file:
rw_ahead	kernel/blk_drv/ll_rw_blk.c	/^	int rw_ahead;$/;"	l	language:C	function:make_request	typeref:typename:int	file:
rw_char	fs/char_dev.c	/^int rw_char(int rw,int dev, char * buf, int count, off_t * pos)$/;"	f	language:C	typeref:typename:int	signature:(int rw,int dev,char * buf,int count,off_t * pos)
rw_flag	fs/super.c	/^int sys_mount(char * dev_name, char * dir_name, int rw_flag)$/;"	z	language:C	function:sys_mount	typeref:typename:int	file:
rw_interrupt	kernel/blk_drv/floppy.c	/^static void rw_interrupt(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
rw_kmem	fs/char_dev.c	/^static int rw_kmem(int rw,char * buf, int count, off_t * pos)$/;"	f	language:C	typeref:typename:int	file:	signature:(int rw,char * buf,int count,off_t * pos)
rw_mem	fs/char_dev.c	/^static int rw_mem(int rw,char * buf, int count, off_t * pos)$/;"	f	language:C	typeref:typename:int	file:	signature:(int rw,char * buf,int count,off_t * pos)
rw_memory	fs/char_dev.c	/^static int rw_memory(int rw, unsigned minor, char * buf, int count, off_t * pos)$/;"	f	language:C	typeref:typename:int	file:	signature:(int rw,unsigned minor,char * buf,int count,off_t * pos)
rw_port	fs/char_dev.c	/^static int rw_port(int rw,char * buf, int count, off_t * pos)$/;"	f	language:C	typeref:typename:int	file:	signature:(int rw,char * buf,int count,off_t * pos)
rw_ram	fs/char_dev.c	/^static int rw_ram(int rw,char * buf, int count, off_t *pos)$/;"	f	language:C	typeref:typename:int	file:	signature:(int rw,char * buf,int count,off_t * pos)
rw_tty	fs/char_dev.c	/^static int rw_tty(int rw,unsigned minor,char * buf,int count, off_t * pos)$/;"	f	language:C	typeref:typename:int	file:	signature:(int rw,unsigned minor,char * buf,int count,off_t * pos)
rw_ttyx	fs/char_dev.c	/^static int rw_ttyx(int rw,unsigned minor,char * buf,int count,off_t * pos)$/;"	f	language:C	typeref:typename:int	file:	signature:(int rw,unsigned minor,char * buf,int count,off_t * pos)
s	fs/super.c	/^	struct super_block * s;$/;"	l	language:C	function:get_super	typeref:struct:super_block *	file:
s	fs/super.c	/^	struct super_block * s;$/;"	l	language:C	function:read_super	typeref:struct:super_block *	file:
s	include/string.h	/^extern inline char * strchr(const char * s,char c)$/;"	z	language:C++	function:strchr	typeref:typename:const char *	file:
s	include/string.h	/^extern inline char * strrchr(const char * s,char c)$/;"	z	language:C++	function:strrchr	typeref:typename:const char *	file:
s	include/string.h	/^extern inline char * strtok(char * s,const char * ct)$/;"	z	language:C++	function:strtok	typeref:typename:char *	file:
s	include/string.h	/^extern inline int strlen(const char * s)$/;"	z	language:C++	function:strlen	typeref:typename:const char *	file:
s	include/string.h	/^extern inline void * memset(void * s,char c,int count)$/;"	z	language:C++	function:memset	typeref:typename:void *	file:
s	include/sys/wait.h	/^#define WEXITSTATUS(s)	(((s)>>8)&0xFF)$/;"	D	language:C++	macro:WEXITSTATUS
s	include/sys/wait.h	/^#define WIFEXITED(s)	(!((s)&0xFF)$/;"	D	language:C++	macro:WIFEXITED
s	include/sys/wait.h	/^#define WIFSIGNALED(s)	(((unsigned int)(s)-1 & 0xFFFF) < 0xFF)$/;"	D	language:C++	macro:WIFSIGNALED
s	include/sys/wait.h	/^#define WIFSTOPPED(s)	(((s)&0xFF)==0x7F)$/;"	D	language:C++	macro:WIFSTOPPED
s	include/sys/wait.h	/^#define WSTOPSIG(s)	(((s)>>8)&0xFF)$/;"	D	language:C++	macro:WSTOPSIG
s	include/sys/wait.h	/^#define WTERMSIG(s)	((s)&0x7F)$/;"	D	language:C++	macro:WTERMSIG
s	kernel/blk_drv/ramdisk.c	/^	struct super_block	s;$/;"	l	language:C	function:rd_load	typeref:struct:super_block	file:
s	kernel/panic.c	/^volatile void panic(const char * s)$/;"	z	language:C	function:panic	typeref:typename:const char *	file:
s	kernel/vsprintf.c	/^	char *s;$/;"	l	language:C	function:vsprintf	typeref:typename:char *	file:
s	kernel/vsprintf.c	/^static int skip_atoi(const char **s)$/;"	z	language:C	function:skip_atoi	typeref:typename:const char **	file:
s1	kernel/blk_drv/blk.h	/^#define IN_ORDER(s1,s2) \\$/;"	D	language:C++	macro:IN_ORDER
s2	kernel/blk_drv/blk.h	/^#define IN_ORDER(s1,s2) \\$/;"	D	language:C++	macro:IN_ORDER
s_dev	include/linux/fs.h	/^	unsigned short s_dev;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
s_dirt	include/linux/fs.h	/^	unsigned char s_dirt;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned char	access:public
s_firstdatazone	include/linux/fs.h	/^	unsigned short s_firstdatazone;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
s_firstdatazone	include/linux/fs.h	/^	unsigned short s_firstdatazone;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
s_imap	include/linux/fs.h	/^	struct buffer_head * s_imap[8];$/;"	m	language:C++	struct:super_block	typeref:struct:buffer_head * [8]	access:public
s_imap_blocks	include/linux/fs.h	/^	unsigned short s_imap_blocks;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
s_imap_blocks	include/linux/fs.h	/^	unsigned short s_imap_blocks;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
s_imount	include/linux/fs.h	/^	struct m_inode * s_imount;$/;"	m	language:C++	struct:super_block	typeref:struct:m_inode *	access:public
s_isup	include/linux/fs.h	/^	struct m_inode * s_isup;$/;"	m	language:C++	struct:super_block	typeref:struct:m_inode *	access:public
s_lock	include/linux/fs.h	/^	unsigned char s_lock;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned char	access:public
s_log_zone_size	include/linux/fs.h	/^	unsigned short s_log_zone_size;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
s_log_zone_size	include/linux/fs.h	/^	unsigned short s_log_zone_size;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
s_magic	include/linux/fs.h	/^	unsigned short s_magic;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
s_magic	include/linux/fs.h	/^	unsigned short s_magic;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
s_max_size	include/linux/fs.h	/^	unsigned long s_max_size;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned long	access:public
s_max_size	include/linux/fs.h	/^	unsigned long s_max_size;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned long	access:public
s_ninodes	include/linux/fs.h	/^	unsigned short s_ninodes;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
s_ninodes	include/linux/fs.h	/^	unsigned short s_ninodes;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
s_nzones	include/linux/fs.h	/^	unsigned short s_nzones;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
s_nzones	include/linux/fs.h	/^	unsigned short s_nzones;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
s_rd_only	include/linux/fs.h	/^	unsigned char s_rd_only;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned char	access:public
s_time	include/linux/fs.h	/^	unsigned long s_time;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned long	access:public
s_wait	include/linux/fs.h	/^	struct task_struct * s_wait;$/;"	m	language:C++	struct:super_block	typeref:struct:task_struct *	access:public
s_zmap	include/linux/fs.h	/^	struct buffer_head * s_zmap[8];$/;"	m	language:C++	struct:super_block	typeref:struct:buffer_head * [8]	access:public
s_zmap_blocks	include/linux/fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	language:C++	struct:d_super_block	typeref:typename:unsigned short	access:public
s_zmap_blocks	include/linux/fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
sa	kernel/signal.c	/^	struct sigaction * sa = current->sigaction + signr - 1;$/;"	l	language:C	function:do_signal	typeref:struct:sigaction *	file:
sa_flags	include/signal.h	/^	int sa_flags;$/;"	m	language:C++	struct:sigaction	typeref:typename:int	access:public
sa_flags	kernel/system_call.s	/^sa_flags = 8$/;"	d	language:Asm
sa_handler	include/signal.h	/^	void (*sa_handler)(int);$/;"	m	language:C++	struct:sigaction	typeref:typename:void (*)(int)	access:public
sa_handler	kernel/signal.c	/^	unsigned long sa_handler;$/;"	l	language:C	function:do_signal	typeref:typename:unsigned long	file:
sa_handler	kernel/system_call.s	/^sa_handler = 0$/;"	d	language:Asm
sa_mask	include/signal.h	/^	sigset_t sa_mask;$/;"	m	language:C++	struct:sigaction	typeref:typename:sigset_t	access:public
sa_mask	kernel/system_call.s	/^sa_mask = 4$/;"	d	language:Asm
sa_restorer	include/signal.h	/^	void (*sa_restorer)(void);$/;"	m	language:C++	struct:sigaction	typeref:typename:void (*)(void)	access:public
sa_restorer	kernel/system_call.s	/^sa_restorer = 12$/;"	d	language:Asm
save_cur	kernel/chr_drv/console.c	/^static void save_cur(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
save_old	kernel/signal.c	/^static inline void save_old(char * from,char * to)$/;"	f	language:C	typeref:typename:void	file:	signature:(char * from,char * to)
saved_x	kernel/chr_drv/console.c	/^static int saved_x=0;$/;"	v	language:C	typeref:typename:int	file:
saved_y	kernel/chr_drv/console.c	/^static int saved_y=0;$/;"	v	language:C	typeref:typename:int	file:
sb	fs/bitmap.c	/^	struct super_block * sb;$/;"	l	language:C	function:free_block	typeref:struct:super_block *	file:
sb	fs/bitmap.c	/^	struct super_block * sb;$/;"	l	language:C	function:free_inode	typeref:struct:super_block *	file:
sb	fs/bitmap.c	/^	struct super_block * sb;$/;"	l	language:C	function:new_block	typeref:struct:super_block *	file:
sb	fs/bitmap.c	/^	struct super_block * sb;$/;"	l	language:C	function:new_inode	typeref:struct:super_block *	file:
sb	fs/inode.c	/^	struct super_block * sb;$/;"	l	language:C	function:read_inode	typeref:struct:super_block *	file:
sb	fs/inode.c	/^	struct super_block * sb;$/;"	l	language:C	function:write_inode	typeref:struct:super_block *	file:
sb	fs/namei.c	/^	struct super_block * sb;$/;"	l	language:C	function:find_entry	typeref:struct:super_block *	file:
sb	fs/super.c	/^	struct super_block * sb;$/;"	l	language:C	function:put_super	typeref:struct:super_block *	file:
sb	fs/super.c	/^	struct super_block * sb;$/;"	l	language:C	function:sys_mount	typeref:struct:super_block *	file:
sb	fs/super.c	/^	struct super_block * sb;$/;"	l	language:C	function:sys_umount	typeref:struct:super_block *	file:
sb	fs/super.c	/^static void free_super(struct super_block * sb)$/;"	z	language:C	function:free_super	typeref:struct:super_block *	file:
sb	fs/super.c	/^static void lock_super(struct super_block * sb)$/;"	z	language:C	function:lock_super	typeref:struct:super_block *	file:
sb	fs/super.c	/^static void wait_on_super(struct super_block * sb)$/;"	z	language:C	function:wait_on_super	typeref:struct:super_block *	file:
sb	tools/build.c	/^	struct stat sb;$/;"	l	language:C	function:main	typeref:struct:stat	file:
sched.o	kernel/Makefile	/^sched.s sched.o : sched.c ..\/include\/linux\/sched.h ..\/include\/linux\/head.h \\$/;"	t	language:Make
sched.s	kernel/Makefile	/^sched.s sched.o : sched.c ..\/include\/linux\/sched.h ..\/include\/linux\/head.h \\$/;"	t	language:Make
sched_init	kernel/sched.c	/^void sched_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
schedule	kernel/sched.c	/^void schedule(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
scr_end	kernel/chr_drv/console.c	/^static unsigned long	scr_end;	\/* Used for EGA\/VGA fast scroll	*\/$/;"	v	language:C	typeref:typename:unsigned long	file:
scrdown	kernel/chr_drv/console.c	/^static void scrdown(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
scroll	kernel/chr_drv/keyboard.S	/^scroll:$/;"	l	language:Asm
scrup	kernel/chr_drv/console.c	/^static void scrup(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
sec	kernel/blk_drv/hd.c	/^	unsigned int sec,head,cyl;$/;"	l	language:C	function:do_hd_request	typeref:typename:unsigned int	file:
second	kernel/math/math_emulate.c	/^	unsigned char first, second;$/;"	l	language:C	function:math_emulate	typeref:typename:unsigned char	file:
secondary	include/linux/tty.h	/^	struct tty_queue secondary;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_queue	access:public
seconds	kernel/sched.c	/^int sys_alarm(long seconds)$/;"	z	language:C	function:sys_alarm	typeref:typename:long	file:
sect	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned int	file:	access:public
sect	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
sect	kernel/blk_drv/hd.c	/^static void hd_out(unsigned int drive,unsigned int nsect,unsigned int sect,$/;"	z	language:C	function:hd_out	typeref:typename:unsigned int	file:
sector	include/linux/hdreg.h	/^	unsigned char sector;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
sector	kernel/blk_drv/blk.h	/^	unsigned long sector;$/;"	m	language:C++	struct:request	typeref:typename:unsigned long	access:public
sector	kernel/blk_drv/floppy.c	/^static unsigned char sector = 0;$/;"	v	language:C	typeref:typename:unsigned char	file:
seek	kernel/blk_drv/floppy.c	/^static int seek = 0;$/;"	v	language:C	typeref:typename:int	file:
seek_interrupt	kernel/blk_drv/floppy.c	/^static void seek_interrupt(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
seek_track	kernel/blk_drv/floppy.c	/^static unsigned char seek_track = 0;$/;"	v	language:C	typeref:typename:unsigned char	file:
seg	kernel/traps.c	/^#define get_seg_byte(seg,addr) ({ \\$/;"	D	language:C	macro:get_seg_byte
seg	kernel/traps.c	/^#define get_seg_long(seg,addr) ({ \\$/;"	D	language:C	macro:get_seg_long
segment	include/linux/sched.h	/^#define get_limit(segment) ({ \\$/;"	D	language:C++	macro:get_limit
selected	kernel/blk_drv/floppy.c	/^unsigned char selected = 0;$/;"	v	language:C	typeref:typename:unsigned char
selected	kernel/sched.c	/^	extern unsigned char selected;$/;"	x	language:C	function:ticks_to_floppy_on	typeref:typename:unsigned char	file:
selector	boot/head.s	/^	movw %dx,%ax		    \/* selector = 0x0008 = cs *\/$/;"	g	language:R
send_break	kernel/chr_drv/tty_ioctl.c	/^static void send_break(struct tty_struct * tty)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct tty_struct * tty)
send_sig	kernel/exit.c	/^static inline int send_sig(long sig,struct task_struct * p,int priv)$/;"	f	language:C	typeref:typename:int	file:	signature:(long sig,struct task_struct * p,int priv)
serial.o	kernel/chr_drv/Makefile	/^serial.s serial.o : serial.c ..\/..\/include\/linux\/tty.h ..\/..\/include\/termios.h \\$/;"	t	language:Make
serial.s	kernel/chr_drv/Makefile	/^serial.s serial.o : serial.c ..\/..\/include\/linux\/tty.h ..\/..\/include\/termios.h \\$/;"	t	language:Make
session	include/linux/sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
set_base	include/linux/sched.h	/^#define set_base(ldt,base) _set_base(/;"	d	language:C++	signature:(ldt,base)
set_bit	fs/bitmap.c	/^#define set_bit(/;"	d	language:C	file:	signature:(nr,addr)
set_bit	fs/super.c	/^#define set_bit(/;"	d	language:C	file:	signature:(bitnr,addr)
set_cursor	kernel/chr_drv/console.c	/^static inline void set_cursor(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
set_e0	kernel/chr_drv/keyboard.S	/^set_e0:	movb $1,e0$/;"	l	language:Asm
set_e1	kernel/chr_drv/keyboard.S	/^set_e1:	movb $2,e0$/;"	l	language:Asm
set_fs	include/asm/segment.h	/^extern inline void set_fs(unsigned long val)$/;"	f	language:C++	typeref:typename:void	signature:(unsigned long val)
set_intr_gate	include/asm/system.h	/^#define set_intr_gate(/;"	d	language:C++	signature:(n,addr)
set_ldt_desc	include/asm/system.h	/^#define set_ldt_desc(/;"	d	language:C++	signature:(n,addr)
set_leds	kernel/chr_drv/keyboard.S	/^set_leds:$/;"	l	language:Asm
set_limit	include/linux/sched.h	/^#define set_limit(ldt,limit) _set_limit(/;"	d	language:C++	signature:(ldt,limit)
set_origin	kernel/chr_drv/console.c	/^static inline void set_origin(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
set_system_gate	include/asm/system.h	/^#define set_system_gate(/;"	d	language:C++	signature:(n,addr)
set_termio	kernel/chr_drv/tty_ioctl.c	/^static int set_termio(struct tty_struct * tty, struct termio * termio)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct tty_struct * tty,struct termio * termio)
set_termios	kernel/chr_drv/tty_ioctl.c	/^static int set_termios(struct tty_struct * tty, struct termios * termios)$/;"	f	language:C	typeref:typename:int	file:	signature:(struct tty_struct * tty,struct termios * termios)
set_trap_gate	include/asm/system.h	/^#define set_trap_gate(/;"	d	language:C++	signature:(n,addr)
set_tss_desc	include/asm/system.h	/^#define set_tss_desc(/;"	d	language:C++	signature:(n,addr)
setsid.o	lib/Makefile	/^setsid.s setsid.o : setsid.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
setsid.s	lib/Makefile	/^setsid.s setsid.o : setsid.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
setup_DMA	kernel/blk_drv/floppy.c	/^static void setup_DMA(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
setup_rw_floppy	kernel/blk_drv/floppy.c	/^inline void setup_rw_floppy(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
sgid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
sh_bang	fs/exec.c	/^	int sh_bang = 0;$/;"	l	language:C	function:do_execve	typeref:typename:int	file:
share_page	mm/memory.c	/^static int share_page(unsigned long address)$/;"	f	language:C	typeref:typename:int	file:	signature:(unsigned long address)
shift_map	kernel/chr_drv/keyboard.S	/^shift_map:$/;"	l	language:Asm
show_stat	kernel/sched.c	/^void show_stat(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
show_task	kernel/sched.c	/^void show_task(int nr,struct task_struct * p)$/;"	f	language:C	typeref:typename:void	signature:(int nr,struct task_struct * p)
sig	kernel/exit.c	/^int sys_kill(int pid,int sig)$/;"	z	language:C	function:sys_kill	typeref:typename:int	file:
sig	kernel/exit.c	/^static inline int send_sig(long sig,struct task_struct * p,int priv)$/;"	z	language:C	function:send_sig	typeref:typename:long	file:
sig_atomic_t	include/signal.h	/^typedef int sig_atomic_t;$/;"	t	language:C++	typeref:typename:int
sigaction	include/linux/sched.h	/^	struct sigaction sigaction[32];$/;"	m	language:C++	struct:task_struct	typeref:struct:sigaction[32]	access:public
sigaction	include/signal.h	/^struct sigaction {$/;"	s	language:C++
sigaction	kernel/system_call.s	/^sigaction = 16		# MUST be 16 (=len of sigaction)$/;"	d	language:Asm
sigaction::sa_flags	include/signal.h	/^	int sa_flags;$/;"	m	language:C++	struct:sigaction	typeref:typename:int	access:public
sigaction::sa_handler	include/signal.h	/^	void (*sa_handler)(int);$/;"	m	language:C++	struct:sigaction	typeref:typename:void (*)(int)	access:public
sigaction::sa_mask	include/signal.h	/^	sigset_t sa_mask;$/;"	m	language:C++	struct:sigaction	typeref:typename:sigset_t	access:public
sigaction::sa_restorer	include/signal.h	/^	void (*sa_restorer)(void);$/;"	m	language:C++	struct:sigaction	typeref:typename:void (*)(void)	access:public
sign	kernel/vsprintf.c	/^	char c,sign,tmp[36];$/;"	l	language:C	function:number	typeref:typename:char	file:
signal	include/linux/sched.h	/^	long signal;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
signal	kernel/system_call.s	/^signal	= 12$/;"	d	language:Asm
signal.o	kernel/Makefile	/^signal.s signal.o : signal.c ..\/include\/linux\/sched.h ..\/include\/linux\/head.h \\$/;"	t	language:Make
signal.s	kernel/Makefile	/^signal.s signal.o : signal.c ..\/include\/linux\/sched.h ..\/include\/linux\/head.h \\$/;"	t	language:Make
signr	kernel/signal.c	/^void do_signal(long signr,long eax, long ebx, long ecx, long edx,$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
signum	kernel/signal.c	/^int sys_sigaction(int signum, const struct sigaction * action,$/;"	z	language:C	function:sys_sigaction	typeref:typename:int	file:
signum	kernel/signal.c	/^int sys_signal(int signum, long handler, long restorer)$/;"	z	language:C	function:sys_signal	typeref:typename:int	file:
sigset_t	include/signal.h	/^typedef unsigned int sigset_t;		\/* 32 bits *\/$/;"	t	language:C++	typeref:typename:unsigned int
size	fs/pipe.c	/^	int chars, size, read = 0;$/;"	l	language:C	function:read_pipe	typeref:typename:int	file:
size	fs/pipe.c	/^	int chars, size, written = 0;$/;"	l	language:C	function:write_pipe	typeref:typename:int	file:
size	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned int	file:	access:public
size	kernel/chr_drv/keyboard.S	/^			   as in tty_io.c !!!! *\/$/;"	d	language:Asm
size	kernel/chr_drv/rs_io.s	/^					   in tty_io.c!!! *\/$/;"	d	language:Asm
size	kernel/fork.c	/^void verify_area(void * addr,int size)$/;"	z	language:C	function:verify_area	typeref:typename:int	file:
size	kernel/vsprintf.c	/^static char * number(char * str, int num, int base, int size, int precision$/;"	z	language:C	function:number	typeref:typename:int	file:
size	lib/malloc.c	/^	int			size;$/;"	m	language:C	struct:_bucket_dir	typeref:typename:int	file:	access:public
size	lib/malloc.c	/^void free_s(void *obj, int size)$/;"	z	language:C	function:free_s	typeref:typename:int	file:
size	mm/memory.c	/^int copy_page_tables(unsigned long from,unsigned long to,long size)$/;"	z	language:C	function:copy_page_tables	typeref:typename:long	file:
size	mm/memory.c	/^int free_page_tables(unsigned long from,unsigned long size)$/;"	z	language:C	function:free_page_tables	typeref:typename:unsigned long	file:
size_t	include/stddef.h	/^typedef unsigned long size_t;$/;"	t	language:C++	typeref:typename:unsigned long
size_t	include/string.h	/^typedef unsigned int size_t;$/;"	t	language:C++	typeref:typename:unsigned int
size_t	include/sys/types.h	/^typedef unsigned int size_t;$/;"	t	language:C++	typeref:typename:unsigned int
size_t	include/time.h	/^typedef unsigned int size_t;$/;"	t	language:C++	typeref:typename:unsigned int
skip_atoi	kernel/vsprintf.c	/^static int skip_atoi(const char **s)$/;"	f	language:C	typeref:typename:int	file:	signature:(const char ** s)
sleep_if_empty	kernel/chr_drv/tty_io.c	/^static void sleep_if_empty(struct tty_queue * queue)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct tty_queue * queue)
sleep_if_full	kernel/chr_drv/tty_io.c	/^static void sleep_if_full(struct tty_queue * queue)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct tty_queue * queue)
sleep_on	kernel/sched.c	/^void sleep_on(struct task_struct **p)$/;"	f	language:C	typeref:typename:void	signature:(struct task_struct ** p)
sp	fs/exec.c	/^	unsigned long * sp;$/;"	l	language:C	function:create_tables	typeref:typename:unsigned long *	file:
spec1	kernel/blk_drv/floppy.c	/^	unsigned char gap,rate,spec1;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned char	file:	access:public
speed_t	include/termios.h	/^typedef int speed_t;$/;"	t	language:C++	typeref:typename:int
src	include/asm/memory.h	/^#define memcpy(dest,src,n) ({ \\$/;"	D	language:C++	macro:memcpy
src	include/string.h	/^extern inline char * strcat(char * dest,const char * src)$/;"	z	language:C++	function:strcat	typeref:typename:const char *	file:
src	include/string.h	/^extern inline char * strcpy(char * dest,const char *src)$/;"	z	language:C++	function:strcpy	typeref:typename:const char *	file:
src	include/string.h	/^extern inline char * strncat(char * dest,const char * src,int count)$/;"	z	language:C++	function:strncat	typeref:typename:const char *	file:
src	include/string.h	/^extern inline char * strncpy(char * dest,const char *src,int count)$/;"	z	language:C++	function:strncpy	typeref:typename:const char *	file:
src	include/string.h	/^extern inline void * memcpy(void * dest,const void * src, int n)$/;"	z	language:C++	function:memcpy	typeref:typename:const void *	file:
src	include/string.h	/^extern inline void * memmove(void * dest,const void * src, int n)$/;"	z	language:C++	function:memmove	typeref:typename:const void *	file:
ss	include/linux/sched.h	/^	long	ss;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
ss	kernel/fork.c	/^		long eip,long cs,long eflags,long esp,long ss)$/;"	z	language:C	function:copy_process	typeref:typename:long	file:
ss	kernel/math/math_emulate.c	/^	unsigned short ss, unsigned long esp)$/;"	z	language:C	function:math_emulate	typeref:typename:unsigned short	file:
ss	kernel/signal.c	/^	unsigned long * esp, long ss)$/;"	z	language:C	function:do_signal	typeref:typename:long	file:
ss0	include/linux/sched.h	/^	long	ss0;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
ss1	include/linux/sched.h	/^	long	ss1;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
ss2	include/linux/sched.h	/^	long	ss2;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
st_atime	include/sys/stat.h	/^	time_t	st_atime;$/;"	m	language:C++	struct:stat	typeref:typename:time_t	access:public
st_ctime	include/sys/stat.h	/^	time_t	st_ctime;$/;"	m	language:C++	struct:stat	typeref:typename:time_t	access:public
st_dev	include/sys/stat.h	/^	dev_t	st_dev;$/;"	m	language:C++	struct:stat	typeref:typename:dev_t	access:public
st_gid	include/sys/stat.h	/^	gid_t	st_gid;$/;"	m	language:C++	struct:stat	typeref:typename:gid_t	access:public
st_ino	include/sys/stat.h	/^	ino_t	st_ino;$/;"	m	language:C++	struct:stat	typeref:typename:ino_t	access:public
st_mode	include/sys/stat.h	/^	umode_t	st_mode;$/;"	m	language:C++	struct:stat	typeref:typename:umode_t	access:public
st_mtime	include/sys/stat.h	/^	time_t	st_mtime;$/;"	m	language:C++	struct:stat	typeref:typename:time_t	access:public
st_nlink	include/sys/stat.h	/^	nlink_t	st_nlink;$/;"	m	language:C++	struct:stat	typeref:typename:nlink_t	access:public
st_rdev	include/sys/stat.h	/^	dev_t	st_rdev;$/;"	m	language:C++	struct:stat	typeref:typename:dev_t	access:public
st_size	include/sys/stat.h	/^	off_t	st_size;$/;"	m	language:C++	struct:stat	typeref:typename:off_t	access:public
st_space	include/linux/sched.h	/^	long	st_space[20];	\/* 8*10 bytes for each FP-reg = 80 bytes *\/$/;"	m	language:C++	struct:i387_struct	typeref:typename:long[20]	access:public
st_uid	include/sys/stat.h	/^	uid_t	st_uid;$/;"	m	language:C++	struct:stat	typeref:typename:uid_t	access:public
stack	kernel/sched.c	/^	char stack[PAGE_SIZE];$/;"	m	language:C	union:task_union	typeref:typename:char[]	file:	access:public
stack_start	kernel/sched.c	/^	} stack_start = { & user_stack [PAGE_SIZE>>2] , 0x10 };$/;"	v	language:C	typeref:struct:__anonda9e522d0108
start	kernel/fork.c	/^	unsigned long start;$/;"	l	language:C	function:verify_area	typeref:typename:unsigned long	file:
start_buffer	fs/buffer.c	/^struct buffer_head * start_buffer = (struct buffer_head *) &end;$/;"	v	language:C	typeref:struct:buffer_head *
start_buffer	include/linux/fs.h	/^extern struct buffer_head * start_buffer;$/;"	x	language:C++	typeref:struct:buffer_head *
start_code	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
start_mem	mm/memory.c	/^void mem_init(long start_mem, long end_mem)$/;"	z	language:C	function:mem_init	typeref:typename:long	file:
start_sect	include/linux/hdreg.h	/^	unsigned int start_sect;	\/* starting sector counting from 0 *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned int	access:public
start_sect	kernel/blk_drv/hd.c	/^	long start_sect;$/;"	m	language:C	struct:hd_struct	typeref:typename:long	file:	access:public
start_stack	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
start_time	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
startup	kernel/chr_drv/rs_io.s	/^startup	= 256		\/* chars left in write queue when we restart it *\/$/;"	d	language:Asm
startup_time	include/linux/sched.h	/^extern long startup_time;$/;"	x	language:C++	typeref:typename:long
startup_time	init/main.c	/^extern long startup_time;$/;"	x	language:C	typeref:typename:long
startup_time	kernel/sched.c	/^long startup_time=0;$/;"	v	language:C	typeref:typename:long
stat	include/sys/stat.h	/^struct stat {$/;"	s	language:C++
stat.o	fs/Makefile	/^stat.o : stat.c ..\/include\/errno.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
stat::st_atime	include/sys/stat.h	/^	time_t	st_atime;$/;"	m	language:C++	struct:stat	typeref:typename:time_t	access:public
stat::st_ctime	include/sys/stat.h	/^	time_t	st_ctime;$/;"	m	language:C++	struct:stat	typeref:typename:time_t	access:public
stat::st_dev	include/sys/stat.h	/^	dev_t	st_dev;$/;"	m	language:C++	struct:stat	typeref:typename:dev_t	access:public
stat::st_gid	include/sys/stat.h	/^	gid_t	st_gid;$/;"	m	language:C++	struct:stat	typeref:typename:gid_t	access:public
stat::st_ino	include/sys/stat.h	/^	ino_t	st_ino;$/;"	m	language:C++	struct:stat	typeref:typename:ino_t	access:public
stat::st_mode	include/sys/stat.h	/^	umode_t	st_mode;$/;"	m	language:C++	struct:stat	typeref:typename:umode_t	access:public
stat::st_mtime	include/sys/stat.h	/^	time_t	st_mtime;$/;"	m	language:C++	struct:stat	typeref:typename:time_t	access:public
stat::st_nlink	include/sys/stat.h	/^	nlink_t	st_nlink;$/;"	m	language:C++	struct:stat	typeref:typename:nlink_t	access:public
stat::st_rdev	include/sys/stat.h	/^	dev_t	st_rdev;$/;"	m	language:C++	struct:stat	typeref:typename:dev_t	access:public
stat::st_size	include/sys/stat.h	/^	off_t	st_size;$/;"	m	language:C++	struct:stat	typeref:typename:off_t	access:public
stat::st_uid	include/sys/stat.h	/^	uid_t	st_uid;$/;"	m	language:C++	struct:stat	typeref:typename:uid_t	access:public
stat_addr	kernel/exit.c	/^int sys_waitpid(pid_t pid,unsigned long * stat_addr, int options)$/;"	z	language:C	function:sys_waitpid	typeref:typename:unsigned long *	file:
statbuf	fs/stat.c	/^int sys_fstat(unsigned int fd, struct stat * statbuf)$/;"	z	language:C	function:sys_fstat	typeref:struct:stat *	file:
statbuf	fs/stat.c	/^int sys_stat(char * filename, struct stat * statbuf)$/;"	z	language:C	function:sys_stat	typeref:struct:stat *	file:
statbuf	fs/stat.c	/^static void cp_stat(struct m_inode * inode, struct stat * statbuf)$/;"	z	language:C	function:cp_stat	typeref:struct:stat *	file:
state	include/linux/sched.h	/^	long state;	\/* -1 unrunnable, 0 runnable, >0 stopped *\/$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
state	kernel/chr_drv/console.c	/^static unsigned long	state=0;$/;"	v	language:C	typeref:typename:unsigned long	file:
state	kernel/system_call.s	/^state	= 0		# these are offsets into the task-struct.$/;"	d	language:Asm
status	kernel/blk_drv/floppy.c	/^	int i = 0, counter, status;$/;"	l	language:C	function:result	typeref:typename:int	file:
status	kernel/blk_drv/floppy.c	/^	unsigned char status;$/;"	l	language:C	function:output_byte	typeref:typename:unsigned char	file:
sti	include/asm/system.h	/^#define sti() __asm__ ("sti"/;"	d	language:C++	signature:()
stime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
stopped	include/linux/tty.h	/^	int stopped;$/;"	m	language:C++	struct:tty_struct	typeref:typename:int	access:public
str	include/linux/sched.h	/^#define str(/;"	d	language:C++	signature:(n)
str	kernel/traps.c	/^static void die(char * str,long esp_ptr,long nr)$/;"	z	language:C	function:die	typeref:typename:char *	file:
str	kernel/vsprintf.c	/^	char * str;$/;"	l	language:C	function:vsprintf	typeref:typename:char *	file:
str	kernel/vsprintf.c	/^static char * number(char * str, int num, int base, int size, int precision$/;"	z	language:C	function:number	typeref:typename:char *	file:
str	tools/build.c	/^void die(char * str)$/;"	z	language:C	function:die	typeref:typename:char *	file:
strcat	include/string.h	/^extern inline char * strcat(char * dest,const char * src)$/;"	f	language:C++	typeref:typename:char *	signature:(char * dest,const char * src)
strchr	include/string.h	/^extern inline char * strchr(const char * s,char c)$/;"	f	language:C++	typeref:typename:char *	signature:(const char * s,char c)
strcmp	include/string.h	/^extern inline int strcmp(const char * cs,const char * ct)$/;"	f	language:C++	typeref:typename:int	signature:(const char * cs,const char * ct)
strcpy	include/string.h	/^extern inline char * strcpy(char * dest,const char *src)$/;"	f	language:C++	typeref:typename:char *	signature:(char * dest,const char * src)
strcspn	include/string.h	/^extern inline int strcspn(const char * cs, const char * ct)$/;"	f	language:C++	typeref:typename:int	signature:(const char * cs,const char * ct)
stretch	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned int	file:	access:public
string.o	lib/Makefile	/^string.s string.o : string.c ..\/include\/string.h $/;"	t	language:Make
string.s	lib/Makefile	/^string.s string.o : string.c ..\/include\/string.h $/;"	t	language:Make
strlen	include/string.h	/^extern inline int strlen(const char * s)$/;"	f	language:C++	typeref:typename:int	signature:(const char * s)
strncat	include/string.h	/^extern inline char * strncat(char * dest,const char * src,int count)$/;"	f	language:C++	typeref:typename:char *	signature:(char * dest,const char * src,int count)
strncmp	include/string.h	/^extern inline int strncmp(const char * cs,const char * ct,int count)$/;"	f	language:C++	typeref:typename:int	signature:(const char * cs,const char * ct,int count)
strncpy	include/string.h	/^extern inline char * strncpy(char * dest,const char *src,int count)$/;"	f	language:C++	typeref:typename:char *	signature:(char * dest,const char * src,int count)
strpbrk	include/string.h	/^extern inline char * strpbrk(const char * cs,const char * ct)$/;"	f	language:C++	typeref:typename:char *	signature:(const char * cs,const char * ct)
strrchr	include/string.h	/^extern inline char * strrchr(const char * s,char c)$/;"	f	language:C++	typeref:typename:char *	signature:(const char * s,char c)
strspn	include/string.h	/^extern inline int strspn(const char * cs, const char * ct)$/;"	f	language:C++	typeref:typename:int	signature:(const char * cs,const char * ct)
strstr	include/string.h	/^extern inline char * strstr(const char * cs,const char * ct)$/;"	f	language:C++	typeref:typename:char *	signature:(const char * cs,const char * ct)
strtok	include/string.h	/^extern inline char * strtok(char * s,const char * ct)$/;"	f	language:C++	typeref:typename:char *	signature:(char * s,const char * ct)
suid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
super.o	fs/Makefile	/^super.o : super.c ..\/include\/linux\/config.h ..\/include\/linux\/sched.h \\$/;"	t	language:Make
super_block	fs/super.c	/^struct super_block super_block[NR_SUPER];$/;"	v	language:C	typeref:struct:super_block[]
super_block	include/linux/fs.h	/^extern struct super_block super_block[NR_SUPER];$/;"	x	language:C++	typeref:struct:super_block[]
super_block	include/linux/fs.h	/^struct super_block {$/;"	s	language:C++
super_block::s_dev	include/linux/fs.h	/^	unsigned short s_dev;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
super_block::s_dirt	include/linux/fs.h	/^	unsigned char s_dirt;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned char	access:public
super_block::s_firstdatazone	include/linux/fs.h	/^	unsigned short s_firstdatazone;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
super_block::s_imap	include/linux/fs.h	/^	struct buffer_head * s_imap[8];$/;"	m	language:C++	struct:super_block	typeref:struct:buffer_head * [8]	access:public
super_block::s_imap_blocks	include/linux/fs.h	/^	unsigned short s_imap_blocks;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
super_block::s_imount	include/linux/fs.h	/^	struct m_inode * s_imount;$/;"	m	language:C++	struct:super_block	typeref:struct:m_inode *	access:public
super_block::s_isup	include/linux/fs.h	/^	struct m_inode * s_isup;$/;"	m	language:C++	struct:super_block	typeref:struct:m_inode *	access:public
super_block::s_lock	include/linux/fs.h	/^	unsigned char s_lock;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned char	access:public
super_block::s_log_zone_size	include/linux/fs.h	/^	unsigned short s_log_zone_size;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
super_block::s_magic	include/linux/fs.h	/^	unsigned short s_magic;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
super_block::s_max_size	include/linux/fs.h	/^	unsigned long s_max_size;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned long	access:public
super_block::s_ninodes	include/linux/fs.h	/^	unsigned short s_ninodes;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
super_block::s_nzones	include/linux/fs.h	/^	unsigned short s_nzones;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
super_block::s_rd_only	include/linux/fs.h	/^	unsigned char s_rd_only;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned char	access:public
super_block::s_time	include/linux/fs.h	/^	unsigned long s_time;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned long	access:public
super_block::s_wait	include/linux/fs.h	/^	struct task_struct * s_wait;$/;"	m	language:C++	struct:super_block	typeref:struct:task_struct *	access:public
super_block::s_zmap	include/linux/fs.h	/^	struct buffer_head * s_zmap[8];$/;"	m	language:C++	struct:super_block	typeref:struct:buffer_head * [8]	access:public
super_block::s_zmap_blocks	include/linux/fs.h	/^	unsigned short s_zmap_blocks;$/;"	m	language:C++	struct:super_block	typeref:typename:unsigned short	access:public
suser	include/linux/kernel.h	/^#define suser(/;"	d	language:C++	signature:()
swd	include/linux/sched.h	/^	long	swd;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
switch_to	include/linux/sched.h	/^#define switch_to(/;"	d	language:C++	signature:(n)
sync_dev	fs/buffer.c	/^int sync_dev(int dev)$/;"	f	language:C	typeref:typename:int	signature:(int dev)
sync_inodes	fs/inode.c	/^void sync_inodes(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
sys.o	kernel/Makefile	/^sys.s sys.o : sys.c ..\/include\/errno.h ..\/include\/linux\/sched.h \\$/;"	t	language:Make
sys.s	kernel/Makefile	/^sys.s sys.o : sys.c ..\/include\/errno.h ..\/include\/linux\/sched.h \\$/;"	t	language:Make
sys_access	fs/open.c	/^int sys_access(const char * filename,int mode)$/;"	f	language:C	typeref:typename:int	signature:(const char * filename,int mode)
sys_acct	kernel/sys.c	/^int sys_acct()$/;"	f	language:C	typeref:typename:int	signature:()
sys_alarm	kernel/sched.c	/^int sys_alarm(long seconds)$/;"	f	language:C	typeref:typename:int	signature:(long seconds)
sys_break	kernel/sys.c	/^int sys_break()$/;"	f	language:C	typeref:typename:int	signature:()
sys_brk	kernel/sys.c	/^int sys_brk(unsigned long end_data_seg)$/;"	f	language:C	typeref:typename:int	signature:(unsigned long end_data_seg)
sys_call_ret	kernel/math/math_emulate.c	/^void math_emulate(long edi, long esi, long ebp, long sys_call_ret,$/;"	z	language:C	function:math_emulate	typeref:typename:long	file:
sys_call_table	include/linux/sys.h	/^fn_ptr sys_call_table[] = { sys_setup, sys_exit, sys_fork, sys_read,$/;"	v	language:C++	typeref:typename:fn_ptr[]
sys_chdir	fs/open.c	/^int sys_chdir(const char * filename)$/;"	f	language:C	typeref:typename:int	signature:(const char * filename)
sys_chmod	fs/open.c	/^int sys_chmod(const char * filename,int mode)$/;"	f	language:C	typeref:typename:int	signature:(const char * filename,int mode)
sys_chown	fs/open.c	/^int sys_chown(const char * filename,int uid,int gid)$/;"	f	language:C	typeref:typename:int	signature:(const char * filename,int uid,int gid)
sys_chroot	fs/open.c	/^int sys_chroot(const char * filename)$/;"	f	language:C	typeref:typename:int	signature:(const char * filename)
sys_close	fs/open.c	/^int sys_close(unsigned int fd)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int fd)
sys_creat	fs/open.c	/^int sys_creat(const char * pathname, int mode)$/;"	f	language:C	typeref:typename:int	signature:(const char * pathname,int mode)
sys_dup	fs/fcntl.c	/^int sys_dup(unsigned int fildes)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int fildes)
sys_dup2	fs/fcntl.c	/^int sys_dup2(unsigned int oldfd, unsigned int newfd)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int oldfd,unsigned int newfd)
sys_exit	kernel/exit.c	/^int sys_exit(int error_code)$/;"	f	language:C	typeref:typename:int	signature:(int error_code)
sys_fcntl	fs/fcntl.c	/^int sys_fcntl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int fd,unsigned int cmd,unsigned long arg)
sys_fstat	fs/stat.c	/^int sys_fstat(unsigned int fd, struct stat * statbuf)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int fd,struct stat * statbuf)
sys_ftime	kernel/sys.c	/^int sys_ftime()$/;"	f	language:C	typeref:typename:int	signature:()
sys_getegid	kernel/sched.c	/^int sys_getegid(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
sys_geteuid	kernel/sched.c	/^int sys_geteuid(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
sys_getgid	kernel/sched.c	/^int sys_getgid(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
sys_getpgrp	kernel/sys.c	/^int sys_getpgrp(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
sys_getpid	kernel/sched.c	/^int sys_getpid(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
sys_getppid	kernel/sched.c	/^int sys_getppid(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
sys_getuid	kernel/sched.c	/^int sys_getuid(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
sys_gtty	kernel/sys.c	/^int sys_gtty()$/;"	f	language:C	typeref:typename:int	signature:()
sys_ind	include/linux/hdreg.h	/^	unsigned char sys_ind;		\/* ? *\/$/;"	m	language:C++	struct:partition	typeref:typename:unsigned char	access:public
sys_ioctl	fs/ioctl.c	/^int sys_ioctl(unsigned int fd, unsigned int cmd, unsigned long arg)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int fd,unsigned int cmd,unsigned long arg)
sys_kill	kernel/exit.c	/^int sys_kill(int pid,int sig)$/;"	f	language:C	typeref:typename:int	signature:(int pid,int sig)
sys_link	fs/namei.c	/^int sys_link(const char * oldname, const char * newname)$/;"	f	language:C	typeref:typename:int	signature:(const char * oldname,const char * newname)
sys_lock	kernel/sys.c	/^int sys_lock()$/;"	f	language:C	typeref:typename:int	signature:()
sys_lseek	fs/read_write.c	/^int sys_lseek(unsigned int fd,off_t offset, int origin)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int fd,off_t offset,int origin)
sys_mkdir	fs/namei.c	/^int sys_mkdir(const char * pathname, int mode)$/;"	f	language:C	typeref:typename:int	signature:(const char * pathname,int mode)
sys_mknod	fs/namei.c	/^int sys_mknod(const char * filename, int mode, int dev)$/;"	f	language:C	typeref:typename:int	signature:(const char * filename,int mode,int dev)
sys_mount	fs/super.c	/^int sys_mount(char * dev_name, char * dir_name, int rw_flag)$/;"	f	language:C	typeref:typename:int	signature:(char * dev_name,char * dir_name,int rw_flag)
sys_mpx	kernel/sys.c	/^int sys_mpx()$/;"	f	language:C	typeref:typename:int	signature:()
sys_nice	kernel/sched.c	/^int sys_nice(long increment)$/;"	f	language:C	typeref:typename:int	signature:(long increment)
sys_open	fs/open.c	/^int sys_open(const char * filename,int flag,int mode)$/;"	f	language:C	typeref:typename:int	signature:(const char * filename,int flag,int mode)
sys_pause	kernel/sched.c	/^int sys_pause(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
sys_phys	kernel/sys.c	/^int sys_phys()$/;"	f	language:C	typeref:typename:int	signature:()
sys_pipe	fs/pipe.c	/^int sys_pipe(unsigned long * fildes)$/;"	f	language:C	typeref:typename:int	signature:(unsigned long * fildes)
sys_prof	kernel/sys.c	/^int sys_prof()$/;"	f	language:C	typeref:typename:int	signature:()
sys_ptrace	kernel/sys.c	/^int sys_ptrace()$/;"	f	language:C	typeref:typename:int	signature:()
sys_read	fs/read_write.c	/^int sys_read(unsigned int fd,char * buf,int count)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int fd,char * buf,int count)
sys_rename	kernel/sys.c	/^int sys_rename()$/;"	f	language:C	typeref:typename:int	signature:()
sys_rmdir	fs/namei.c	/^int sys_rmdir(const char * name)$/;"	f	language:C	typeref:typename:int	signature:(const char * name)
sys_setgid	kernel/sys.c	/^int sys_setgid(int gid)$/;"	f	language:C	typeref:typename:int	signature:(int gid)
sys_setpgid	kernel/sys.c	/^int sys_setpgid(int pid, int pgid)$/;"	f	language:C	typeref:typename:int	signature:(int pid,int pgid)
sys_setregid	kernel/sys.c	/^int sys_setregid(int rgid, int egid)$/;"	f	language:C	typeref:typename:int	signature:(int rgid,int egid)
sys_setreuid	kernel/sys.c	/^int sys_setreuid(int ruid, int euid)$/;"	f	language:C	typeref:typename:int	signature:(int ruid,int euid)
sys_setsid	kernel/sys.c	/^int sys_setsid(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
sys_setuid	kernel/sys.c	/^int sys_setuid(int uid)$/;"	f	language:C	typeref:typename:int	signature:(int uid)
sys_setup	kernel/blk_drv/hd.c	/^int sys_setup(void * BIOS)$/;"	f	language:C	typeref:typename:int	signature:(void * BIOS)
sys_sgetmask	kernel/signal.c	/^int sys_sgetmask()$/;"	f	language:C	typeref:typename:int	signature:()
sys_sigaction	kernel/signal.c	/^int sys_sigaction(int signum, const struct sigaction * action,$/;"	f	language:C	typeref:typename:int	signature:(int signum,const struct sigaction * action,struct sigaction * oldaction)
sys_signal	kernel/signal.c	/^int sys_signal(int signum, long handler, long restorer)$/;"	f	language:C	typeref:typename:int	signature:(int signum,long handler,long restorer)
sys_ssetmask	kernel/signal.c	/^int sys_ssetmask(int newmask)$/;"	f	language:C	typeref:typename:int	signature:(int newmask)
sys_stat	fs/stat.c	/^int sys_stat(char * filename, struct stat * statbuf)$/;"	f	language:C	typeref:typename:int	signature:(char * filename,struct stat * statbuf)
sys_stime	kernel/sys.c	/^int sys_stime(long * tptr)$/;"	f	language:C	typeref:typename:int	signature:(long * tptr)
sys_stty	kernel/sys.c	/^int sys_stty()$/;"	f	language:C	typeref:typename:int	signature:()
sys_sync	fs/buffer.c	/^int sys_sync(void)$/;"	f	language:C	typeref:typename:int	signature:(void)
sys_time	kernel/sys.c	/^int sys_time(long * tloc)$/;"	f	language:C	typeref:typename:int	signature:(long * tloc)
sys_times	kernel/sys.c	/^int sys_times(struct tms * tbuf)$/;"	f	language:C	typeref:typename:int	signature:(struct tms * tbuf)
sys_ulimit	kernel/sys.c	/^int sys_ulimit()$/;"	f	language:C	typeref:typename:int	signature:()
sys_umask	kernel/sys.c	/^int sys_umask(int mask)$/;"	f	language:C	typeref:typename:int	signature:(int mask)
sys_umount	fs/super.c	/^int sys_umount(char * dev_name)$/;"	f	language:C	typeref:typename:int	signature:(char * dev_name)
sys_uname	kernel/sys.c	/^int sys_uname(struct utsname * name)$/;"	f	language:C	typeref:typename:int	signature:(struct utsname * name)
sys_unlink	fs/namei.c	/^int sys_unlink(const char * name)$/;"	f	language:C	typeref:typename:int	signature:(const char * name)
sys_ustat	fs/open.c	/^int sys_ustat(int dev, struct ustat * ubuf)$/;"	f	language:C	typeref:typename:int	signature:(int dev,struct ustat * ubuf)
sys_utime	fs/open.c	/^int sys_utime(char * filename, struct utimbuf * times)$/;"	f	language:C	typeref:typename:int	signature:(char * filename,struct utimbuf * times)
sys_waitpid	kernel/exit.c	/^int sys_waitpid(pid_t pid,unsigned long * stat_addr, int options)$/;"	f	language:C	typeref:typename:int	signature:(pid_t pid,unsigned long * stat_addr,int options)
sys_write	fs/read_write.c	/^int sys_write(unsigned int fd,char * buf,int count)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int fd,char * buf,int count)
sysbeep	kernel/chr_drv/console.c	/^static void sysbeep(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
sysbeepstop	kernel/chr_drv/console.c	/^void sysbeepstop(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
sysname	include/sys/utsname.h	/^	char sysname[9];$/;"	m	language:C++	struct:utsname	typeref:typename:char[9]	access:public
table_entry	mm/memory.c	/^void un_wp_page(unsigned long * table_entry)$/;"	z	language:C	function:un_wp_page	typeref:typename:unsigned long *	file:
table_list	kernel/chr_drv/tty_io.c	/^struct tty_queue * table_list[]={$/;"	v	language:C	typeref:struct:tty_queue * []
tail	include/linux/tty.h	/^	unsigned long tail;$/;"	m	language:C++	struct:tty_queue	typeref:typename:unsigned long	access:public
tail	kernel/chr_drv/keyboard.S	/^tail = 8$/;"	d	language:Asm
tail	kernel/chr_drv/rs_io.s	/^tail = 8$/;"	d	language:Asm
task	include/linux/sched.h	/^extern struct task_struct *task[NR_TASKS];$/;"	x	language:C++	typeref:struct:task_struct * []
task	kernel/sched.c	/^	struct task_struct task;$/;"	m	language:C	union:task_union	typeref:struct:task_struct	file:	access:public
task	kernel/sched.c	/^struct task_struct * task[NR_TASKS] = {&(init_task.task), };$/;"	v	language:C	typeref:struct:task_struct * []
task_struct	include/linux/sched.h	/^struct task_struct {$/;"	s	language:C++
task_struct::alarm	include/linux/sched.h	/^	long alarm;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::blocked	include/linux/sched.h	/^	long blocked;	\/* bitmap of masked signals *\/$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::brk	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
task_struct::close_on_exec	include/linux/sched.h	/^	unsigned long close_on_exec;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
task_struct::counter	include/linux/sched.h	/^	long counter;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::cstime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::cutime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::egid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
task_struct::end_code	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
task_struct::end_data	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
task_struct::euid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
task_struct::executable	include/linux/sched.h	/^	struct m_inode * executable;$/;"	m	language:C++	struct:task_struct	typeref:struct:m_inode *	access:public
task_struct::exit_code	include/linux/sched.h	/^	int exit_code;$/;"	m	language:C++	struct:task_struct	typeref:typename:int	access:public
task_struct::father	include/linux/sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::filp	include/linux/sched.h	/^	struct file * filp[NR_OPEN];$/;"	m	language:C++	struct:task_struct	typeref:struct:file * []	access:public
task_struct::gid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
task_struct::ldt	include/linux/sched.h	/^	struct desc_struct ldt[3];$/;"	m	language:C++	struct:task_struct	typeref:struct:desc_struct[3]	access:public
task_struct::leader	include/linux/sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::pgrp	include/linux/sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::pid	include/linux/sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::priority	include/linux/sched.h	/^	long priority;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::pwd	include/linux/sched.h	/^	struct m_inode * pwd;$/;"	m	language:C++	struct:task_struct	typeref:struct:m_inode *	access:public
task_struct::root	include/linux/sched.h	/^	struct m_inode * root;$/;"	m	language:C++	struct:task_struct	typeref:struct:m_inode *	access:public
task_struct::session	include/linux/sched.h	/^	long pid,father,pgrp,session,leader;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::sgid	include/linux/sched.h	/^	unsigned short gid,egid,sgid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
task_struct::sigaction	include/linux/sched.h	/^	struct sigaction sigaction[32];$/;"	m	language:C++	struct:task_struct	typeref:struct:sigaction[32]	access:public
task_struct::signal	include/linux/sched.h	/^	long signal;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::start_code	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
task_struct::start_stack	include/linux/sched.h	/^	unsigned long start_code,end_code,end_data,brk,start_stack;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned long	access:public
task_struct::start_time	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::state	include/linux/sched.h	/^	long state;	\/* -1 unrunnable, 0 runnable, >0 stopped *\/$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::stime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_struct::suid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
task_struct::tss	include/linux/sched.h	/^	struct tss_struct tss;$/;"	m	language:C++	struct:task_struct	typeref:struct:tss_struct	access:public
task_struct::tty	include/linux/sched.h	/^	int tty;		\/* -1 if no tty, so it must be signed *\/$/;"	m	language:C++	struct:task_struct	typeref:typename:int	access:public
task_struct::uid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
task_struct::umask	include/linux/sched.h	/^	unsigned short umask;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
task_struct::used_math	include/linux/sched.h	/^	unsigned short used_math;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
task_struct::utime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
task_union	kernel/sched.c	/^union task_union {$/;"	u	language:C	file:
task_union::stack	kernel/sched.c	/^	char stack[PAGE_SIZE];$/;"	m	language:C	union:task_union	typeref:typename:char[]	file:	access:public
task_union::task	kernel/sched.c	/^	struct task_struct task;$/;"	m	language:C	union:task_union	typeref:struct:task_struct	file:	access:public
tbuf	kernel/sys.c	/^int sys_times(struct tms * tbuf)$/;"	z	language:C	function:sys_times	typeref:struct:tms *	file:
tell_father	kernel/exit.c	/^static void tell_father(int pid)$/;"	f	language:C	typeref:typename:void	file:	signature:(int pid)
termio	include/termios.h	/^struct termio {$/;"	s	language:C++
termio	kernel/chr_drv/tty_ioctl.c	/^static int get_termio(struct tty_struct * tty, struct termio * termio)$/;"	z	language:C	function:get_termio	typeref:struct:termio *	file:
termio	kernel/chr_drv/tty_ioctl.c	/^static int set_termio(struct tty_struct * tty, struct termio * termio)$/;"	z	language:C	function:set_termio	typeref:struct:termio *	file:
termio::c_cc	include/termios.h	/^	unsigned char c_cc[NCC];	\/* control characters *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned char[]	access:public
termio::c_cflag	include/termios.h	/^	unsigned short c_cflag;		\/* control mode flags *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned short	access:public
termio::c_iflag	include/termios.h	/^	unsigned short c_iflag;		\/* input mode flags *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned short	access:public
termio::c_lflag	include/termios.h	/^	unsigned short c_lflag;		\/* local mode flags *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned short	access:public
termio::c_line	include/termios.h	/^	unsigned char c_line;		\/* line discipline *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned char	access:public
termio::c_oflag	include/termios.h	/^	unsigned short c_oflag;		\/* output mode flags *\/$/;"	m	language:C++	struct:termio	typeref:typename:unsigned short	access:public
termios	include/linux/tty.h	/^	struct termios termios;$/;"	m	language:C++	struct:tty_struct	typeref:struct:termios	access:public
termios	include/termios.h	/^struct termios {$/;"	s	language:C++
termios	kernel/chr_drv/tty_ioctl.c	/^static int get_termios(struct tty_struct * tty, struct termios * termios)$/;"	z	language:C	function:get_termios	typeref:struct:termios *	file:
termios	kernel/chr_drv/tty_ioctl.c	/^static int set_termios(struct tty_struct * tty, struct termios * termios)$/;"	z	language:C	function:set_termios	typeref:struct:termios *	file:
termios::c_cc	include/termios.h	/^	unsigned char c_cc[NCCS];	\/* control characters *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned char[]	access:public
termios::c_cflag	include/termios.h	/^	unsigned long c_cflag;		\/* control mode flags *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned long	access:public
termios::c_iflag	include/termios.h	/^	unsigned long c_iflag;		\/* input mode flags *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned long	access:public
termios::c_lflag	include/termios.h	/^	unsigned long c_lflag;		\/* local mode flags *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned long	access:public
termios::c_line	include/termios.h	/^	unsigned char c_line;		\/* line discipline *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned char	access:public
termios::c_oflag	include/termios.h	/^	unsigned long c_oflag;		\/* output mode flags *\/$/;"	m	language:C++	struct:termios	typeref:typename:unsigned long	access:public
text_size	fs/exec.c	/^static unsigned long change_ldt(unsigned long text_size,unsigned long * page)$/;"	z	language:C	function:change_ldt	typeref:typename:unsigned long	file:
this_page	mm/memory.c	/^	unsigned long this_page;$/;"	l	language:C	function:copy_page_tables	typeref:typename:unsigned long	file:
thisname	fs/namei.c	/^	const char * thisname;$/;"	l	language:C	function:get_dir	typeref:typename:const char *	file:
thisname	kernel/sys.c	/^	static struct utsname thisname = {$/;"	l	language:C	function:sys_uname	typeref:struct:utsname	file:
ticks_to_floppy_on	kernel/sched.c	/^int ticks_to_floppy_on(unsigned int nr)$/;"	f	language:C	typeref:typename:int	signature:(unsigned int nr)
time	init/main.c	/^	struct tm time;$/;"	l	language:C	function:time_init	typeref:struct:tm	file:
time	kernel/chr_drv/tty_io.c	/^	int minimum,time,flag=0;$/;"	l	language:C	function:tty_read	typeref:typename:int	file:
time_init	init/main.c	/^static void time_init(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
time_t	include/sys/types.h	/^typedef long time_t;$/;"	t	language:C++	typeref:typename:long
time_t	include/time.h	/^typedef long time_t;$/;"	t	language:C++	typeref:typename:long
timer_list	kernel/sched.c	/^static struct timer_list {$/;"	s	language:C	file:
timer_list	kernel/sched.c	/^} timer_list[TIME_REQUESTS], * next_timer = NULL;$/;"	v	language:C	typeref:struct:timer_list[]
timer_list::fn	kernel/sched.c	/^	void (*fn)();$/;"	m	language:C	struct:timer_list	typeref:typename:void (*)()	file:	access:public
timer_list::jiffies	kernel/sched.c	/^	long jiffies;$/;"	m	language:C	struct:timer_list	typeref:typename:long	file:	access:public
timer_list::next	kernel/sched.c	/^	struct timer_list * next;$/;"	m	language:C	struct:timer_list	typeref:struct:timer_list *	file:	access:public
times	fs/open.c	/^int sys_utime(char * filename, struct utimbuf * times)$/;"	z	language:C	function:sys_utime	typeref:struct:utimbuf *	file:
tloc	kernel/sys.c	/^int sys_time(long * tloc)$/;"	z	language:C	function:sys_time	typeref:typename:long *	file:
tm	include/time.h	/^struct tm {$/;"	s	language:C++
tm	kernel/mktime.c	/^long kernel_mktime(struct tm * tm)$/;"	z	language:C	function:kernel_mktime	typeref:struct:tm *	file:
tm::tm_hour	include/time.h	/^	int tm_hour;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm::tm_isdst	include/time.h	/^	int tm_isdst;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm::tm_mday	include/time.h	/^	int tm_mday;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm::tm_min	include/time.h	/^	int tm_min;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm::tm_mon	include/time.h	/^	int tm_mon;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm::tm_sec	include/time.h	/^	int tm_sec;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm::tm_wday	include/time.h	/^	int tm_wday;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm::tm_yday	include/time.h	/^	int tm_yday;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm::tm_year	include/time.h	/^	int tm_year;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm_hour	include/time.h	/^	int tm_hour;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm_isdst	include/time.h	/^	int tm_isdst;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm_mday	include/time.h	/^	int tm_mday;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm_min	include/time.h	/^	int tm_min;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm_mon	include/time.h	/^	int tm_mon;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm_sec	include/time.h	/^	int tm_sec;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm_wday	include/time.h	/^	int tm_wday;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm_yday	include/time.h	/^	int tm_yday;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tm_year	include/time.h	/^	int tm_year;$/;"	m	language:C++	struct:tm	typeref:typename:int	access:public
tmp	fs/buffer.c	/^	struct buffer_head * bh, *tmp;$/;"	l	language:C	function:breada	typeref:struct:buffer_head *	file:
tmp	fs/buffer.c	/^	struct buffer_head * tmp, * bh;$/;"	l	language:C	function:getblk	typeref:struct:buffer_head *	file:
tmp	fs/buffer.c	/^	struct buffer_head * tmp;$/;"	l	language:C	function:find_buffer	typeref:struct:buffer_head *	file:
tmp	fs/exec.c	/^	char ** tmp;$/;"	l	language:C	function:count	typeref:typename:char **	file:
tmp	fs/exec.c	/^	char *tmp, *pag;$/;"	l	language:C	function:copy_strings	typeref:typename:char *	file:
tmp	fs/exec.c	/^int do_execve(unsigned long * eip,long tmp,char * filename,$/;"	z	language:C	function:do_execve	typeref:typename:long	file:
tmp	fs/read_write.c	/^	int tmp;$/;"	l	language:C	function:sys_lseek	typeref:typename:int	file:
tmp	fs/stat.c	/^	struct stat tmp;$/;"	l	language:C	function:cp_stat	typeref:struct:stat	file:
tmp	kernel/blk_drv/ll_rw_blk.c	/^	struct request * tmp;$/;"	l	language:C	function:add_request	typeref:struct:request *	file:
tmp	kernel/chr_drv/console.c	/^	unsigned short tmp, old = video_erase_char;$/;"	l	language:C	function:insert_char	typeref:typename:unsigned short	file:
tmp	kernel/sched.c	/^	struct task_struct *tmp;$/;"	l	language:C	function:interruptible_sleep_on	typeref:struct:task_struct *	file:
tmp	kernel/sched.c	/^	struct task_struct *tmp;$/;"	l	language:C	function:sleep_on	typeref:struct:task_struct *	file:
tmp	kernel/signal.c	/^	struct sigaction tmp;$/;"	l	language:C	function:sys_sigaction	typeref:struct:sigaction	file:
tmp	kernel/signal.c	/^	struct sigaction tmp;$/;"	l	language:C	function:sys_signal	typeref:struct:sigaction	file:
tmp	kernel/vsprintf.c	/^	char c,sign,tmp[36];$/;"	l	language:C	function:number	typeref:typename:char[36]	file:
tmp	mm/memory.c	/^	unsigned long tmp, *page_table;$/;"	l	language:C	function:put_page	typeref:typename:unsigned long	file:
tmp	mm/memory.c	/^	unsigned long tmp;$/;"	l	language:C	function:do_no_page	typeref:typename:unsigned long	file:
tmp	mm/memory.c	/^	unsigned long tmp;$/;"	l	language:C	function:get_empty_page	typeref:typename:unsigned long	file:
tmp.s	Makefile	/^tmp.s:	boot\/bootsect.s tools\/system$/;"	t	language:Make
tmp_esp	kernel/signal.c	/^	unsigned long * tmp_esp;$/;"	l	language:C	function:do_signal	typeref:typename:unsigned long *	file:
tmp_floppy_area	kernel/blk_drv/floppy.c	/^extern char tmp_floppy_area[1024];$/;"	x	language:C	typeref:typename:char[1024]
tmp_termio	kernel/chr_drv/tty_ioctl.c	/^	struct termio tmp_termio;$/;"	l	language:C	function:get_termio	typeref:struct:termio	file:
tmp_termio	kernel/chr_drv/tty_ioctl.c	/^	struct termio tmp_termio;$/;"	l	language:C	function:set_termio	typeref:struct:termio	file:
tms	include/sys/times.h	/^struct tms {$/;"	s	language:C++
tms::tms_cstime	include/sys/times.h	/^	time_t tms_cstime;$/;"	m	language:C++	struct:tms	typeref:typename:time_t	access:public
tms::tms_cutime	include/sys/times.h	/^	time_t tms_cutime;$/;"	m	language:C++	struct:tms	typeref:typename:time_t	access:public
tms::tms_stime	include/sys/times.h	/^	time_t tms_stime;$/;"	m	language:C++	struct:tms	typeref:typename:time_t	access:public
tms::tms_utime	include/sys/times.h	/^	time_t tms_utime;$/;"	m	language:C++	struct:tms	typeref:typename:time_t	access:public
tms_cstime	include/sys/times.h	/^	time_t tms_cstime;$/;"	m	language:C++	struct:tms	typeref:typename:time_t	access:public
tms_cutime	include/sys/times.h	/^	time_t tms_cutime;$/;"	m	language:C++	struct:tms	typeref:typename:time_t	access:public
tms_stime	include/sys/times.h	/^	time_t tms_stime;$/;"	m	language:C++	struct:tms	typeref:typename:time_t	access:public
tms_utime	include/sys/times.h	/^	time_t tms_utime;$/;"	m	language:C++	struct:tms	typeref:typename:time_t	access:public
to	fs/buffer.c	/^#define COPYBLK(from,to) \\$/;"	D	language:C	macro:COPYBLK
to	kernel/blk_drv/floppy.c	/^#define copy_buffer(from,to) \\$/;"	D	language:C	macro:copy_buffer
to	kernel/signal.c	/^static inline void get_new(char * from,char * to)$/;"	z	language:C	function:get_new	typeref:typename:char *	file:
to	kernel/signal.c	/^static inline void save_old(char * from,char * to)$/;"	z	language:C	function:save_old	typeref:typename:char *	file:
to	mm/memory.c	/^	unsigned long to;$/;"	l	language:C	function:try_to_share	typeref:typename:unsigned long	file:
to	mm/memory.c	/^#define copy_page(from,to) \\$/;"	D	language:C	macro:copy_page
to	mm/memory.c	/^int copy_page_tables(unsigned long from,unsigned long to,long size)$/;"	z	language:C	function:copy_page_tables	typeref:typename:unsigned long	file:
to_dir	mm/memory.c	/^	unsigned long * from_dir, * to_dir;$/;"	l	language:C	function:copy_page_tables	typeref:typename:unsigned long *	file:
to_page	mm/memory.c	/^	unsigned long to_page;$/;"	l	language:C	function:try_to_share	typeref:typename:unsigned long	file:
to_page_table	mm/memory.c	/^	unsigned long * to_page_table;$/;"	l	language:C	function:copy_page_tables	typeref:typename:unsigned long *	file:
toascii	include/ctype.h	/^#define toascii(/;"	d	language:C++	signature:(c)
tolower	include/ctype.h	/^#define tolower(/;"	d	language:C++	signature:(c)
tools/build	Makefile	/^tools\/build: tools\/build.c$/;"	t	language:Make
tools/system	Makefile	/^tools\/system:	boot\/head.o init\/main.o \\$/;"	t	language:Make
top	kernel/chr_drv/console.c	/^static unsigned long	top,bottom;$/;"	v	language:C	typeref:typename:unsigned long	file:
toupper	include/ctype.h	/^#define toupper(/;"	d	language:C++	signature:(c)
tptr	kernel/sys.c	/^int sys_stime(long * tptr)$/;"	z	language:C	function:sys_stime	typeref:typename:long *	file:
tr	kernel/traps.c	/^	int tr;$/;"	l	language:C	function:do_int3	typeref:typename:int	file:
trace_bitmap	include/linux/sched.h	/^	long	trace_bitmap;	\/* bits: trace 0, bitmap 16-31 *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
track	kernel/blk_drv/floppy.c	/^	unsigned int size, sect, head, track, stretch;$/;"	m	language:C	struct:floppy_struct	typeref:typename:unsigned int	file:	access:public
track	kernel/blk_drv/floppy.c	/^static unsigned char track = 0;$/;"	v	language:C	typeref:typename:unsigned char	file:
transfer	kernel/blk_drv/floppy.c	/^static void transfer(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
trap_init	kernel/traps.c	/^void trap_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
traps.o	kernel/Makefile	/^traps.s traps.o : traps.c ..\/include\/string.h ..\/include\/linux\/head.h \\$/;"	t	language:Make
traps.s	kernel/Makefile	/^traps.s traps.o : traps.c ..\/include\/string.h ..\/include\/linux\/head.h \\$/;"	t	language:Make
truncate	fs/truncate.c	/^void truncate(struct m_inode * inode)$/;"	f	language:C	typeref:typename:void	signature:(struct m_inode * inode)
truncate.o	fs/Makefile	/^truncate.o : truncate.c ..\/include\/linux\/sched.h ..\/include\/linux\/head.h \\$/;"	t	language:Make
try_to_share	mm/memory.c	/^static int try_to_share(unsigned long address, struct task_struct * p)$/;"	f	language:C	typeref:typename:int	file:	signature:(unsigned long address,struct task_struct * p)
tss	include/linux/sched.h	/^	struct tss_struct tss;$/;"	m	language:C++	struct:task_struct	typeref:struct:tss_struct	access:public
tss_struct	include/linux/sched.h	/^struct tss_struct {$/;"	s	language:C++
tss_struct::back_link	include/linux/sched.h	/^	long	back_link;	\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::cr3	include/linux/sched.h	/^	long	cr3;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::cs	include/linux/sched.h	/^	long	cs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::ds	include/linux/sched.h	/^	long	ds;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::eax	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::ebp	include/linux/sched.h	/^	long	ebp;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::ebx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::ecx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::edi	include/linux/sched.h	/^	long	edi;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::edx	include/linux/sched.h	/^	long	eax,ecx,edx,ebx;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::eflags	include/linux/sched.h	/^	long	eflags;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::eip	include/linux/sched.h	/^	long	eip;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::es	include/linux/sched.h	/^	long	es;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::esi	include/linux/sched.h	/^	long	esi;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::esp	include/linux/sched.h	/^	long	esp;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::esp0	include/linux/sched.h	/^	long	esp0;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::esp1	include/linux/sched.h	/^	long	esp1;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::esp2	include/linux/sched.h	/^	long	esp2;$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::fs	include/linux/sched.h	/^	long	fs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::gs	include/linux/sched.h	/^	long	gs;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::i387	include/linux/sched.h	/^	struct i387_struct i387;$/;"	m	language:C++	struct:tss_struct	typeref:struct:i387_struct	access:public
tss_struct::ldt	include/linux/sched.h	/^	long	ldt;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::ss	include/linux/sched.h	/^	long	ss;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::ss0	include/linux/sched.h	/^	long	ss0;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::ss1	include/linux/sched.h	/^	long	ss1;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::ss2	include/linux/sched.h	/^	long	ss2;		\/* 16 high bits zero *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tss_struct::trace_bitmap	include/linux/sched.h	/^	long	trace_bitmap;	\/* bits: trace 0, bitmap 16-31 *\/$/;"	m	language:C++	struct:tss_struct	typeref:typename:long	access:public
tty	include/linux/sched.h	/^	int tty;		\/* -1 if no tty, so it must be signed *\/$/;"	m	language:C++	struct:task_struct	typeref:typename:int	access:public
tty	include/linux/tty.h	/^#define EOF_CHAR(tty) ((tty)->termios.c_cc[VEOF])$/;"	D	language:C++	macro:EOF_CHAR
tty	include/linux/tty.h	/^#define ERASE_CHAR(tty) ((tty)->termios.c_cc[VERASE])$/;"	D	language:C++	macro:ERASE_CHAR
tty	include/linux/tty.h	/^#define INTR_CHAR(tty) ((tty)->termios.c_cc[VINTR])$/;"	D	language:C++	macro:INTR_CHAR
tty	include/linux/tty.h	/^#define KILL_CHAR(tty) ((tty)->termios.c_cc[VKILL])$/;"	D	language:C++	macro:KILL_CHAR
tty	include/linux/tty.h	/^#define QUIT_CHAR(tty) ((tty)->termios.c_cc[VQUIT])$/;"	D	language:C++	macro:QUIT_CHAR
tty	include/linux/tty.h	/^#define START_CHAR(tty) ((tty)->termios.c_cc[VSTART])$/;"	D	language:C++	macro:START_CHAR
tty	include/linux/tty.h	/^#define STOP_CHAR(tty) ((tty)->termios.c_cc[VSTOP])$/;"	D	language:C++	macro:STOP_CHAR
tty	include/linux/tty.h	/^#define SUSPEND_CHAR(tty) ((tty)->termios.c_cc[VSUSP])$/;"	D	language:C++	macro:SUSPEND_CHAR
tty	kernel/chr_drv/console.c	/^static void respond(struct tty_struct * tty)$/;"	z	language:C	function:respond	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/console.c	/^void con_write(struct tty_struct * tty)$/;"	z	language:C	function:con_write	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/serial.c	/^void rs_write(struct tty_struct * tty)$/;"	z	language:C	function:rs_write	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_io.c	/^	struct tty_struct * tty;$/;"	l	language:C	function:tty_read	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_io.c	/^	struct tty_struct * tty;$/;"	l	language:C	function:tty_write	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_io.c	/^#define I_CRNL(tty)	_I_FLAG((tty),ICRNL)$/;"	D	language:C	macro:I_CRNL
tty	kernel/chr_drv/tty_io.c	/^#define I_NLCR(tty)	_I_FLAG((tty),INLCR)$/;"	D	language:C	macro:I_NLCR
tty	kernel/chr_drv/tty_io.c	/^#define I_NOCR(tty)	_I_FLAG((tty),IGNCR)$/;"	D	language:C	macro:I_NOCR
tty	kernel/chr_drv/tty_io.c	/^#define I_UCLC(tty)	_I_FLAG((tty),IUCLC)$/;"	D	language:C	macro:I_UCLC
tty	kernel/chr_drv/tty_io.c	/^#define L_CANON(tty)	_L_FLAG((tty),ICANON)$/;"	D	language:C	macro:L_CANON
tty	kernel/chr_drv/tty_io.c	/^#define L_ECHO(tty)	_L_FLAG((tty),ECHO)$/;"	D	language:C	macro:L_ECHO
tty	kernel/chr_drv/tty_io.c	/^#define L_ECHOCTL(tty)	_L_FLAG((tty),ECHOCTL)$/;"	D	language:C	macro:L_ECHOCTL
tty	kernel/chr_drv/tty_io.c	/^#define L_ECHOE(tty)	_L_FLAG((tty),ECHOE)$/;"	D	language:C	macro:L_ECHOE
tty	kernel/chr_drv/tty_io.c	/^#define L_ECHOK(tty)	_L_FLAG((tty),ECHOK)$/;"	D	language:C	macro:L_ECHOK
tty	kernel/chr_drv/tty_io.c	/^#define L_ECHOKE(tty)	_L_FLAG((tty),ECHOKE)$/;"	D	language:C	macro:L_ECHOKE
tty	kernel/chr_drv/tty_io.c	/^#define L_ISIG(tty)	_L_FLAG((tty),ISIG)$/;"	D	language:C	macro:L_ISIG
tty	kernel/chr_drv/tty_io.c	/^#define O_CRNL(tty)	_O_FLAG((tty),OCRNL)$/;"	D	language:C	macro:O_CRNL
tty	kernel/chr_drv/tty_io.c	/^#define O_LCUC(tty)	_O_FLAG((tty),OLCUC)$/;"	D	language:C	macro:O_LCUC
tty	kernel/chr_drv/tty_io.c	/^#define O_NLCR(tty)	_O_FLAG((tty),ONLCR)$/;"	D	language:C	macro:O_NLCR
tty	kernel/chr_drv/tty_io.c	/^#define O_NLRET(tty)	_O_FLAG((tty),ONLRET)$/;"	D	language:C	macro:O_NLRET
tty	kernel/chr_drv/tty_io.c	/^#define O_POST(tty)	_O_FLAG((tty),OPOST)$/;"	D	language:C	macro:O_POST
tty	kernel/chr_drv/tty_io.c	/^#define _I_FLAG(tty,f)	((tty)->termios.c_iflag & f)$/;"	D	language:C	macro:_I_FLAG
tty	kernel/chr_drv/tty_io.c	/^#define _L_FLAG(tty,f)	((tty)->termios.c_lflag & f)$/;"	D	language:C	macro:_L_FLAG
tty	kernel/chr_drv/tty_io.c	/^#define _O_FLAG(tty,f)	((tty)->termios.c_oflag & f)$/;"	D	language:C	macro:_O_FLAG
tty	kernel/chr_drv/tty_io.c	/^void copy_to_cooked(struct tty_struct * tty)$/;"	z	language:C	function:copy_to_cooked	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_io.c	/^void do_tty_interrupt(int tty)$/;"	z	language:C	function:do_tty_interrupt	typeref:typename:int	file:
tty	kernel/chr_drv/tty_io.c	/^void tty_intr(struct tty_struct * tty, int mask)$/;"	z	language:C	function:tty_intr	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_ioctl.c	/^	struct tty_struct * tty;$/;"	l	language:C	function:tty_ioctl	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_ioctl.c	/^static int get_termio(struct tty_struct * tty, struct termio * termio)$/;"	z	language:C	function:get_termio	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_ioctl.c	/^static int get_termios(struct tty_struct * tty, struct termios * termios)$/;"	z	language:C	function:get_termios	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_ioctl.c	/^static int set_termio(struct tty_struct * tty, struct termio * termio)$/;"	z	language:C	function:set_termio	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_ioctl.c	/^static int set_termios(struct tty_struct * tty, struct termios * termios)$/;"	z	language:C	function:set_termios	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_ioctl.c	/^static void change_speed(struct tty_struct * tty)$/;"	z	language:C	function:change_speed	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_ioctl.c	/^static void send_break(struct tty_struct * tty)$/;"	z	language:C	function:send_break	typeref:struct:tty_struct *	file:
tty	kernel/chr_drv/tty_ioctl.c	/^static void wait_until_sent(struct tty_struct * tty)$/;"	z	language:C	function:wait_until_sent	typeref:struct:tty_struct *	file:
tty_init	kernel/chr_drv/tty_io.c	/^void tty_init(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
tty_intr	kernel/chr_drv/tty_io.c	/^void tty_intr(struct tty_struct * tty, int mask)$/;"	f	language:C	typeref:typename:void	signature:(struct tty_struct * tty,int mask)
tty_io.o	kernel/chr_drv/Makefile	/^tty_io.s tty_io.o : tty_io.c ..\/..\/include\/ctype.h ..\/..\/include\/errno.h \\$/;"	t	language:Make
tty_io.s	kernel/chr_drv/Makefile	/^tty_io.s tty_io.o : tty_io.c ..\/..\/include\/ctype.h ..\/..\/include\/errno.h \\$/;"	t	language:Make
tty_ioctl	kernel/chr_drv/tty_ioctl.c	/^int tty_ioctl(int dev, int cmd, int arg)$/;"	f	language:C	typeref:typename:int	signature:(int dev,int cmd,int arg)
tty_ioctl.o	kernel/chr_drv/Makefile	/^tty_ioctl.s tty_ioctl.o : tty_ioctl.c ..\/..\/include\/errno.h ..\/..\/include\/termios.h \\$/;"	t	language:Make
tty_ioctl.s	kernel/chr_drv/Makefile	/^tty_ioctl.s tty_ioctl.o : tty_ioctl.c ..\/..\/include\/errno.h ..\/..\/include\/termios.h \\$/;"	t	language:Make
tty_queue	include/linux/tty.h	/^struct tty_queue {$/;"	s	language:C++
tty_queue::buf	include/linux/tty.h	/^	char buf[TTY_BUF_SIZE];$/;"	m	language:C++	struct:tty_queue	typeref:typename:char[]	access:public
tty_queue::data	include/linux/tty.h	/^	unsigned long data;$/;"	m	language:C++	struct:tty_queue	typeref:typename:unsigned long	access:public
tty_queue::head	include/linux/tty.h	/^	unsigned long head;$/;"	m	language:C++	struct:tty_queue	typeref:typename:unsigned long	access:public
tty_queue::proc_list	include/linux/tty.h	/^	struct task_struct * proc_list;$/;"	m	language:C++	struct:tty_queue	typeref:struct:task_struct *	access:public
tty_queue::tail	include/linux/tty.h	/^	unsigned long tail;$/;"	m	language:C++	struct:tty_queue	typeref:typename:unsigned long	access:public
tty_read	kernel/chr_drv/tty_io.c	/^int tty_read(unsigned channel, char * buf, int nr)$/;"	f	language:C	typeref:typename:int	signature:(unsigned channel,char * buf,int nr)
tty_struct	include/linux/tty.h	/^struct tty_struct {$/;"	s	language:C++
tty_struct::pgrp	include/linux/tty.h	/^	int pgrp;$/;"	m	language:C++	struct:tty_struct	typeref:typename:int	access:public
tty_struct::read_q	include/linux/tty.h	/^	struct tty_queue read_q;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_queue	access:public
tty_struct::secondary	include/linux/tty.h	/^	struct tty_queue secondary;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_queue	access:public
tty_struct::stopped	include/linux/tty.h	/^	int stopped;$/;"	m	language:C++	struct:tty_struct	typeref:typename:int	access:public
tty_struct::termios	include/linux/tty.h	/^	struct termios termios;$/;"	m	language:C++	struct:tty_struct	typeref:struct:termios	access:public
tty_struct::write	include/linux/tty.h	/^	void (*write)(struct tty_struct * tty);$/;"	m	language:C++	struct:tty_struct	typeref:typename:void (*)(struct tty_struct * tty)	access:public
tty_struct::write_q	include/linux/tty.h	/^	struct tty_queue write_q;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_queue	access:public
tty_table	include/linux/tty.h	/^extern struct tty_struct tty_table[];$/;"	x	language:C++	typeref:struct:tty_struct[]
tty_table	kernel/chr_drv/tty_io.c	/^struct tty_struct tty_table[] = {$/;"	v	language:C	typeref:struct:tty_struct[]
tty_write	kernel/chr_drv/tty_io.c	/^int tty_write(unsigned channel, char * buf, int nr)$/;"	f	language:C	typeref:typename:int	signature:(unsigned channel,char * buf,int nr)
twd	include/linux/sched.h	/^	long	twd;$/;"	m	language:C++	struct:i387_struct	typeref:typename:long	access:public
type	include/asm/system.h	/^#define _set_gate(gate_addr,type,dpl,addr) \\$/;"	D	language:C++	macro:_set_gate
type	include/asm/system.h	/^#define _set_seg_desc(gate_addr,type,dpl,base,limit) {\\$/;"	D	language:C++	macro:_set_seg_desc
type	include/asm/system.h	/^#define _set_tssldt_desc(n,addr,type) \\$/;"	D	language:C++	macro:_set_tssldt_desc
type	include/unistd.h	/^#define _syscall0(type,name) \\$/;"	D	language:C++	macro:_syscall0
type	include/unistd.h	/^#define _syscall1(type,name,atype,a) \\$/;"	D	language:C++	macro:_syscall1
type	include/unistd.h	/^#define _syscall2(type,name,atype,a,btype,b) \\$/;"	D	language:C++	macro:_syscall2
type	include/unistd.h	/^#define _syscall3(type,name,atype,a,btype,b,ctype,c) \\$/;"	D	language:C++	macro:_syscall3
type	kernel/vsprintf.c	/^	,int type)$/;"	z	language:C	function:number	typeref:typename:int	file:
u_char	include/sys/types.h	/^typedef unsigned char u_char;$/;"	t	language:C++	typeref:typename:unsigned char
ubuf	fs/open.c	/^int sys_ustat(int dev, struct ustat * ubuf)$/;"	z	language:C	function:sys_ustat	typeref:struct:ustat *	file:
uid	fs/open.c	/^int sys_chown(const char * filename,int uid,int gid)$/;"	z	language:C	function:sys_chown	typeref:typename:int	file:
uid	include/linux/sched.h	/^	unsigned short uid,euid,suid;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
uid	kernel/sys.c	/^int sys_setuid(int uid)$/;"	z	language:C	function:sys_setuid	typeref:typename:int	file:
uid_t	include/sys/types.h	/^typedef unsigned short uid_t;$/;"	t	language:C++	typeref:typename:unsigned short
umask	include/linux/sched.h	/^	unsigned short umask;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
umode_t	include/sys/types.h	/^typedef unsigned short umode_t;$/;"	t	language:C++	typeref:typename:unsigned short
un_wp_page	mm/memory.c	/^void un_wp_page(unsigned long * table_entry)$/;"	f	language:C	typeref:typename:void	signature:(unsigned long * table_entry)
unalt	kernel/chr_drv/keyboard.S	/^unalt:	movb $0x10,%al$/;"	l	language:Asm
uncaps	kernel/chr_drv/keyboard.S	/^uncaps:	andb $0x7f,mode$/;"	l	language:Asm
unctrl	kernel/chr_drv/keyboard.S	/^unctrl:	movb $0x04,%al$/;"	l	language:Asm
unexpected_floppy_interrupt	kernel/blk_drv/floppy.c	/^void unexpected_floppy_interrupt(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
unexpected_hd_interrupt	kernel/blk_drv/hd.c	/^void unexpected_hd_interrupt(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
unlock_buffer	kernel/blk_drv/blk.h	/^extern inline void unlock_buffer(struct buffer_head * bh)$/;"	f	language:C++	typeref:typename:void	signature:(struct buffer_head * bh)
unlock_buffer	kernel/blk_drv/ll_rw_blk.c	/^static inline void unlock_buffer(struct buffer_head * bh)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct buffer_head * bh)
unlock_inode	fs/inode.c	/^static inline void unlock_inode(struct m_inode * inode)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct m_inode * inode)
unlshift	kernel/chr_drv/keyboard.S	/^unlshift:$/;"	l	language:Asm
unrshift	kernel/chr_drv/keyboard.S	/^unrshift:$/;"	l	language:Asm
uptodate	kernel/blk_drv/blk.h	/^extern inline void end_request(int uptodate)$/;"	z	language:C++	function:end_request	typeref:typename:int	file:
usage	tools/build.c	/^void usage(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
used_math	include/linux/sched.h	/^	unsigned short used_math;$/;"	m	language:C++	struct:task_struct	typeref:typename:unsigned short	access:public
user_stack	kernel/sched.c	/^long user_stack [ PAGE_SIZE>>2 ] ;$/;"	v	language:C	typeref:typename:long[]
ushort	include/sys/types.h	/^typedef unsigned short ushort;$/;"	t	language:C++	typeref:typename:unsigned short
ustat	include/sys/types.h	/^struct ustat {$/;"	s	language:C++
ustat::f_fname	include/sys/types.h	/^	char f_fname[6];$/;"	m	language:C++	struct:ustat	typeref:typename:char[6]	access:public
ustat::f_fpack	include/sys/types.h	/^	char f_fpack[6];$/;"	m	language:C++	struct:ustat	typeref:typename:char[6]	access:public
ustat::f_tfree	include/sys/types.h	/^	daddr_t f_tfree;$/;"	m	language:C++	struct:ustat	typeref:typename:daddr_t	access:public
ustat::f_tinode	include/sys/types.h	/^	ino_t f_tinode;$/;"	m	language:C++	struct:ustat	typeref:typename:ino_t	access:public
utimbuf	include/utime.h	/^struct utimbuf {$/;"	s	language:C++
utimbuf::actime	include/utime.h	/^	time_t actime;$/;"	m	language:C++	struct:utimbuf	typeref:typename:time_t	access:public
utimbuf::modtime	include/utime.h	/^	time_t modtime;$/;"	m	language:C++	struct:utimbuf	typeref:typename:time_t	access:public
utime	include/linux/sched.h	/^	long utime,stime,cutime,cstime,start_time;$/;"	m	language:C++	struct:task_struct	typeref:typename:long	access:public
utsname	include/sys/utsname.h	/^struct utsname {$/;"	s	language:C++
utsname::machine	include/sys/utsname.h	/^	char machine[9];$/;"	m	language:C++	struct:utsname	typeref:typename:char[9]	access:public
utsname::nodename	include/sys/utsname.h	/^	char nodename[9];$/;"	m	language:C++	struct:utsname	typeref:typename:char[9]	access:public
utsname::release	include/sys/utsname.h	/^	char release[9];$/;"	m	language:C++	struct:utsname	typeref:typename:char[9]	access:public
utsname::sysname	include/sys/utsname.h	/^	char sysname[9];$/;"	m	language:C++	struct:utsname	typeref:typename:char[9]	access:public
utsname::version	include/sys/utsname.h	/^	char version[9];$/;"	m	language:C++	struct:utsname	typeref:typename:char[9]	access:public
v	include/sys/wait.h	/^#define _HIGH(v)	( ((v) >> 8) & 0377)$/;"	D	language:C++	macro:_HIGH
v	include/sys/wait.h	/^#define _LOW(v)		( (v) & 0377)$/;"	D	language:C++	macro:_LOW
va_arg	include/stdarg.h	/^#define va_arg(/;"	d	language:C++	signature:(AP,TYPE)
va_end	include/stdarg.h	/^#define va_end(/;"	d	language:C++	signature:(AP)
va_list	include/stdarg.h	/^typedef char *va_list;$/;"	t	language:C++	typeref:typename:char *
va_start	include/stdarg.h	/^#define va_start(/;"	d	language:C++	signature:(AP,LASTARG)
val	include/asm/segment.h	/^extern inline void put_fs_byte(char val,char *addr)$/;"	z	language:C++	function:put_fs_byte	typeref:typename:char	file:
val	include/asm/segment.h	/^extern inline void put_fs_long(unsigned long val,unsigned long * addr)$/;"	z	language:C++	function:put_fs_long	typeref:typename:unsigned long	file:
val	include/asm/segment.h	/^extern inline void put_fs_word(short val,short * addr)$/;"	z	language:C++	function:put_fs_word	typeref:typename:short	file:
val	include/asm/segment.h	/^extern inline void set_fs(unsigned long val)$/;"	z	language:C++	function:set_fs	typeref:typename:unsigned long	file:
val	init/main.c	/^#define BCD_TO_BIN(val) ((val)=((val)&15) + ((val)>>4)*10)$/;"	D	language:C	macro:BCD_TO_BIN
val	kernel/blk_drv/floppy.c	/^#define immoutb_p(val,port) \\$/;"	D	language:C	macro:immoutb_p
value	include/asm/io.h	/^#define outb(value,port) \\$/;"	D	language:C++	macro:outb
value	include/asm/io.h	/^#define outb_p(value,port) \\$/;"	D	language:C++	macro:outb_p
verify_area	kernel/fork.c	/^void verify_area(void * addr,int size)$/;"	f	language:C	typeref:typename:void	signature:(void * addr,int size)
version	include/sys/utsname.h	/^	char version[9];$/;"	m	language:C++	struct:utsname	typeref:typename:char[9]	access:public
video_erase_char	kernel/chr_drv/console.c	/^static unsigned short	video_erase_char;	\/* Char+Attrib to erase with	*\/$/;"	v	language:C	typeref:typename:unsigned short	file:
video_mem_end	kernel/chr_drv/console.c	/^static unsigned long	video_mem_end;		\/* End of video RAM (sort of)	*\/$/;"	v	language:C	typeref:typename:unsigned long	file:
video_mem_start	kernel/chr_drv/console.c	/^static unsigned long	video_mem_start;	\/* Start of video RAM		*\/$/;"	v	language:C	typeref:typename:unsigned long	file:
video_num_columns	kernel/chr_drv/console.c	/^static unsigned long	video_num_columns;	\/* Number of text columns	*\/$/;"	v	language:C	typeref:typename:unsigned long	file:
video_num_lines	kernel/chr_drv/console.c	/^static unsigned long	video_num_lines;	\/* Number of test lines		*\/$/;"	v	language:C	typeref:typename:unsigned long	file:
video_page	kernel/chr_drv/console.c	/^static unsigned char	video_page;		\/* Initial video page		*\/$/;"	v	language:C	typeref:typename:unsigned char	file:
video_port_reg	kernel/chr_drv/console.c	/^static unsigned short	video_port_reg;		\/* Video register select port	*\/$/;"	v	language:C	typeref:typename:unsigned short	file:
video_port_val	kernel/chr_drv/console.c	/^static unsigned short	video_port_val;		\/* Video register value port	*\/$/;"	v	language:C	typeref:typename:unsigned short	file:
video_size_row	kernel/chr_drv/console.c	/^static unsigned long	video_size_row;		\/* Bytes per row		*\/$/;"	v	language:C	typeref:typename:unsigned long	file:
video_type	kernel/chr_drv/console.c	/^static unsigned char	video_type;		\/* Type of display being used	*\/$/;"	v	language:C	typeref:typename:unsigned char	file:
vsprintf	kernel/vsprintf.c	/^int vsprintf(char *buf, const char *fmt, va_list args)$/;"	f	language:C	typeref:typename:int	signature:(char * buf,const char * fmt,va_list args)
vsprintf.o	kernel/Makefile	/^vsprintf.s vsprintf.o : vsprintf.c ..\/include\/stdarg.h ..\/include\/string.h $/;"	t	language:Make
vsprintf.s	kernel/Makefile	/^vsprintf.s vsprintf.o : vsprintf.c ..\/include\/stdarg.h ..\/include\/string.h $/;"	t	language:Make
wait.o	lib/Makefile	/^wait.s wait.o : wait.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
wait.s	lib/Makefile	/^wait.s wait.o : wait.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
wait_for_keypress	kernel/chr_drv/tty_io.c	/^void wait_for_keypress(void)$/;"	f	language:C	typeref:typename:void	signature:(void)
wait_for_request	kernel/blk_drv/blk.h	/^extern struct task_struct * wait_for_request;$/;"	x	language:C++	typeref:struct:task_struct *
wait_for_request	kernel/blk_drv/ll_rw_blk.c	/^struct task_struct * wait_for_request = NULL;$/;"	v	language:C	typeref:struct:task_struct *
wait_motor	kernel/sched.c	/^static struct task_struct * wait_motor[4] = {NULL,NULL,NULL,NULL};$/;"	v	language:C	typeref:struct:task_struct * [4]	file:
wait_on_buffer	fs/buffer.c	/^static inline void wait_on_buffer(struct buffer_head * bh)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct buffer_head * bh)
wait_on_floppy_select	kernel/blk_drv/floppy.c	/^struct task_struct * wait_on_floppy_select = NULL;$/;"	v	language:C	typeref:struct:task_struct *
wait_on_inode	fs/inode.c	/^static inline void wait_on_inode(struct m_inode * inode)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct m_inode * inode)
wait_on_super	fs/super.c	/^static void wait_on_super(struct super_block * sb)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct super_block * sb)
wait_until_sent	kernel/chr_drv/tty_ioctl.c	/^static void wait_until_sent(struct tty_struct * tty)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct tty_struct * tty)
waiting	kernel/blk_drv/blk.h	/^	struct task_struct * waiting;$/;"	m	language:C++	struct:request	typeref:struct:task_struct *	access:public
wake_up	kernel/sched.c	/^void wake_up(struct task_struct **p)$/;"	f	language:C	typeref:typename:void	signature:(struct task_struct ** p)
win_result	kernel/blk_drv/hd.c	/^static int win_result(void)$/;"	f	language:C	typeref:typename:int	file:	signature:(void)
winsize	include/termios.h	/^struct winsize {$/;"	s	language:C++
winsize::ws_col	include/termios.h	/^	unsigned short ws_col;$/;"	m	language:C++	struct:winsize	typeref:typename:unsigned short	access:public
winsize::ws_row	include/termios.h	/^	unsigned short ws_row;$/;"	m	language:C++	struct:winsize	typeref:typename:unsigned short	access:public
winsize::ws_xpixel	include/termios.h	/^	unsigned short ws_xpixel;$/;"	m	language:C++	struct:winsize	typeref:typename:unsigned short	access:public
winsize::ws_ypixel	include/termios.h	/^	unsigned short ws_ypixel;$/;"	m	language:C++	struct:winsize	typeref:typename:unsigned short	access:public
wpcom	kernel/blk_drv/hd.c	/^	int head,sect,cyl,wpcom,lzone,ctl;$/;"	m	language:C	struct:hd_i_struct	typeref:typename:int	file:	access:public
write	include/linux/tty.h	/^	void (*write)(struct tty_struct * tty);$/;"	m	language:C++	struct:tty_struct	typeref:typename:void (*)(struct tty_struct * tty)	access:public
write.o	lib/Makefile	/^write.s write.o : write.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
write.s	lib/Makefile	/^write.s write.o : write.c ..\/include\/unistd.h ..\/include\/sys\/stat.h \\$/;"	t	language:Make
write_buffer_empty	kernel/chr_drv/rs_io.s	/^write_buffer_empty:$/;"	l	language:Asm
write_char	kernel/chr_drv/rs_io.s	/^write_char:$/;"	l	language:Asm
write_inode	fs/inode.c	/^static void write_inode(struct m_inode * inode)$/;"	f	language:C	typeref:typename:void	file:	signature:(struct m_inode * inode)
write_intr	kernel/blk_drv/hd.c	/^static void write_intr(void)$/;"	f	language:C	typeref:typename:void	file:	signature:(void)
write_pipe	fs/pipe.c	/^int write_pipe(struct m_inode * inode, char * buf, int count)$/;"	f	language:C	typeref:typename:int	signature:(struct m_inode * inode,char * buf,int count)
write_q	include/linux/tty.h	/^	struct tty_queue write_q;$/;"	m	language:C++	struct:tty_struct	typeref:struct:tty_queue	access:public
write_verify	mm/memory.c	/^void write_verify(unsigned long address)$/;"	f	language:C	typeref:typename:void	signature:(unsigned long address)
written	fs/block_dev.c	/^	int written = 0;$/;"	l	language:C	function:block_write	typeref:typename:int	file:
written	fs/pipe.c	/^	int chars, size, written = 0;$/;"	l	language:C	function:write_pipe	typeref:typename:int	file:
ws_col	include/termios.h	/^	unsigned short ws_col;$/;"	m	language:C++	struct:winsize	typeref:typename:unsigned short	access:public
ws_row	include/termios.h	/^	unsigned short ws_row;$/;"	m	language:C++	struct:winsize	typeref:typename:unsigned short	access:public
ws_xpixel	include/termios.h	/^	unsigned short ws_xpixel;$/;"	m	language:C++	struct:winsize	typeref:typename:unsigned short	access:public
ws_ypixel	include/termios.h	/^	unsigned short ws_ypixel;$/;"	m	language:C++	struct:winsize	typeref:typename:unsigned short	access:public
x	fs/namei.c	/^#define ACC_MODE(x) ("\\004\\002\\006\\377"[(x)&O_ACCMODE])$/;"	D	language:C	macro:ACC_MODE
x	include/a.out.h	/^#define N_BADMAG(x)					\\$/;"	D	language:C++	macro:N_BADMAG
x	include/a.out.h	/^#define N_BSSADDR(x) (N_DATADDR(x) + (x).a_data)$/;"	D	language:C++	macro:N_BSSADDR
x	include/a.out.h	/^#define N_DATADDR(x) \\$/;"	D	language:C++	macro:N_DATADDR
x	include/a.out.h	/^#define N_DATOFF(x) (N_TXTOFF(x) + (x).a_text)$/;"	D	language:C++	macro:N_DATOFF
x	include/a.out.h	/^#define N_DRELOFF(x) (N_TRELOFF(x) + (x).a_trsize)$/;"	D	language:C++	macro:N_DRELOFF
x	include/a.out.h	/^#define N_STROFF(x) (N_SYMOFF(x) + (x).a_syms)$/;"	D	language:C++	macro:N_STROFF
x	include/a.out.h	/^#define N_SYMOFF(x) (N_DRELOFF(x) + (x).a_drsize)$/;"	D	language:C++	macro:N_SYMOFF
x	include/a.out.h	/^#define N_TRELOFF(x) (N_DATOFF(x) + (x).a_data)$/;"	D	language:C++	macro:N_TRELOFF
x	include/a.out.h	/^#define N_TXTADDR(x) 0$/;"	D	language:C++	macro:N_TXTADDR
x	include/a.out.h	/^#define N_TXTOFF(x) \\$/;"	D	language:C++	macro:N_TXTOFF
x	include/a.out.h	/^#define _N_BADMAG(x)					\\$/;"	D	language:C++	macro:_N_BADMAG
x	include/a.out.h	/^#define _N_HDROFF(x) (SEGMENT_SIZE - sizeof (struct exec))$/;"	D	language:C++	macro:_N_HDROFF
x	include/a.out.h	/^#define _N_SEGMENT_ROUND(x) (((x) + SEGMENT_SIZE - 1) & ~(SEGMENT_SIZE - 1))$/;"	D	language:C++	macro:_N_SEGMENT_ROUND
x	include/a.out.h	/^#define _N_TXTENDADDR(x) (N_TXTADDR(x)+(x).a_text)$/;"	D	language:C++	macro:_N_TXTENDADDR
x	include/linux/fs.h	/^#define IS_SEEKABLE(x) ((x)>=1 && (x)<=3)$/;"	D	language:C++	macro:IS_SEEKABLE
x	include/linux/kernel.h	/^#define free(x) free_s((x), 0)$/;"	D	language:C++	macro:free
x	kernel/blk_drv/floppy.c	/^#define DRIVE(x) ((x)&0x03)$/;"	D	language:C	macro:DRIVE
x	kernel/blk_drv/floppy.c	/^#define TYPE(x) ((x)>>2)$/;"	D	language:C	macro:TYPE
x	kernel/chr_drv/console.c	/^static unsigned long	x,y;$/;"	v	language:C	typeref:typename:unsigned long	file:
x	tools/build.c	/^#define STRINGIFY(x) #x$/;"	D	language:C	macro:STRINGIFY
y	kernel/chr_drv/console.c	/^static unsigned long	x,y;$/;"	v	language:C	typeref:typename:unsigned long	file:
year	kernel/mktime.c	/^	int year;$/;"	l	language:C	function:kernel_mktime	typeref:typename:int	file:
